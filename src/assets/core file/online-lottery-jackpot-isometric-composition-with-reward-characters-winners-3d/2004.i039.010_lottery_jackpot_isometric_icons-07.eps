%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2004.i039.010.P.m004.c33.lottery jackpot isometric icons-07.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: MSI
%%CreationDate: 3/18/2021
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 7 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2004.i039.010.P.m004.c33.lottery jackpot isometric icons</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2021-03-18T05:39:02+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2021-03-18T05:39:02+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2021-03-18T05:39:02+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4qlPmDXrbSIke7litb&#xA;eUFRe3D+nCkvJFSNmNKGTk1DXamRniz5IkYI8WSrA36e5uxxhXFI8iNvfe/w2+bB9P1y+0G7gtdN&#xA;v/0jpiqqxaTeSRrMsbkcWiuGCV4gMEjqRQbbkUp8QgxAEvVfOJFV/OvceV8/k7qOXBrYGeWIxZL+&#xA;uO8ZGrIoWPMke89XoGi6tHqtgl4kE1tyLK0FwvCRWU0IZanLwbdPqtOcM+G4y84mwUdhcd2KuxV2&#xA;KuxVQvr6zsLV7q8lWC3jpzlc0A5EKPvJAwE02YcM8khGAuRXRXAk9UrskZ4h+oNACT9B2xlYFlrB&#xA;B5ILTNWOo28M1uUahpdKagrtsy17HNN2b2odXCMsfDsayDextzHvP9uxcvUabwpESvyRVpf212Zl&#xA;harQSNFKp2IZTT7j2zO0mux5zMQO+ORjIeY/QejTkwyhV9RaIzManYq7FXYq7FXYqo3nqG2cRtwc&#xA;0CsOxrko82M7rZAQ6tNARHfpQdBOg+E/MdstOMH6WkZjHafzTOOSORA8bBlPRgajKSKbwb5LsCXY&#xA;q7FXYq7FXYq4kAEk0A6nFUpl1xluWSOMNEjqpc1+MOgZGjIrUE7HKcuSUZRqNwP1EWSO40AbF7Hu&#xA;58myWPhjZI4u7zvke49UTpus6dqKsbSdJSvUKwJpUjkKE1BIO+Sx5BK6v0muX4sea5MUoGpCj3FG&#xA;5Y1qV1Obe3eYRST8BUxRAM5HfiCRWg3p18N8UxFljHni0h1/R47Kza1unE4ke3nPNGRVZWVlBFCC&#xA;464Y58kL8KRhOuYqxuO8H7nKxYoRl+/jLg8u/owOOK5GrWqW7r+jy0iz2pVaEKgkjlVg32lk41oN&#xA;+W9aA5h4dbPVYeDIBHVD+7yVfqF3GUaPCJQHMGu6iKYarB+Vlx7iP8QBI2O3Pa6Jeu6SQdNtiteP&#xA;Aca77dszp3e/NwsNcArki8g2uxV2KuxV2Ksa87a1p+i6b9b1a8S206WVI+UgoFfiXUVA6fATv3zK&#xA;0mlOaRiBxHnXk05sk40YGvvSiXzDJc/VbvSZnitTbxtA1SVf1F5HlEwp+0M4T2u1Gq0OphkjIiMg&#xA;RX8Ng77cuRHydr2UcWWBgRdV7/miNA1jTLaRluY2tXkk5maNmMTFQVoy1PEfF06Zi9hdoaEzNA4Z&#xA;mQP1ek86H+yOx283J1eHNX88Ad2/f+jn9ib+XL2W+muZ5IxBKtFmjQDgzHcNy6kjpm07B1WTPlyS&#xA;yR8OcdpRAoE70e/iG4PwcfWY4wjERPFE8inudO692KuxV2KuxV2KoDWZLZ7R7GS5FvPeo8cFGCyk&#xA;8fiMYJBJQfFtkowJBIGwZQyCEhI70Qa76YRc6h5q0NZJtQdNY06At608ApJHGArL6kXsGJ61puWa&#xA;tMYzMee4+13MtFptYR4JOHIRtGW8JHfkff3e7h2TvTtUsLqzbUtEu1kiXeaHfZupV0NGU/PLoTE9&#xA;i6PW6DLpJVIcJ+w+5kGl3/161ExTga8WXrvQHb78ryQ4TTXhy8cbReVtrsVdirsVdirEvPz6xpfl&#xA;PzBf2d2gt47C8uHE6mSSN1gZlEJJ48Sy04MNq1r+zmTpoeLmxwIFGUQfMX+N2UJcFy3vp5Fhvlq5&#xA;bVfJHly/RpRczW6PPcxvHG6lFII9IAxshYkcWotD2yzW6bwcsogemMjVdB09+zm6TWxnOQmYkyA9&#xA;MhYmdrPfE9xG/kWQaTfXb27XBt43EkJlg1aEFfUVHARXVzyVhWtNx8sw8OM+JYEeGV8W25O1fZz+&#xA;DX2pjhjxmMTKMoH6JG+HvMTyI+RGzNdLlnlsIZJ/7xhU/fksgAkadfhJMQSgvMHmvRNBh5389JWF&#xA;Y7aMc5XoCdl7DY7tQe+WYdPPIdvn+PuG7dGJPJ5n+Yn5yaRBYqvlspPdG5QXks0dInhMUgYE1V60&#xA;oK9untmw0vZEpSMcolATiaI530+PdbeIXESEgeAjbfYd/dXfRSjTLufUNa017TSDYaRC0svIHmEu&#xA;DHIjp0QoreoGG1O21BXC7EjwYcnFuZcjfT09O/mdm72sjKGUQnPxJcIN/j3fpeqeWvMJneDTmg4g&#xA;IwWUNX7G+4p3Gcti7f8AF189MYVRlR93e04tFw6aOS+gZNm/cd2KuxV2KuxVgn5teU7rzZp+laEi&#xA;VtJ7uSS6k3CqI7Ocx8mAagMhUdM2XZmtjp5Smfq4aHzF/ZafBMwTYqP9m3egrmyh8teS9Ll1SOWO&#xA;+hhhszaxATyTXEUVCI+JIbmImcGo26jlkDhjrZShKIlCVn1dBf7XGzafw53jlv3i/wBNfjvSrRNe&#xA;0fWrGC80+YPHOrFYm+GQcW4uGQ7/AAsucL7Tew04ZZS09cQA/d+QjXpPW/Pz36Oz0Xak4w/fRPDf&#xA;19L7vx8k60jUb2wueFq54HrbmpUnltRf6ZV7GRzceTFmMgMYHpP8J93TqntnMBCE4UeI8+/Znllc&#xA;PcWySvGYnYVKHemdlONGnAxy4hZFK+RZuxV2KuxVJfOt9qlh5R1i+0oquo2tpNNbu4BVWjQtyoQQ&#xA;aAVAOZehxwnnhGf0ykB82MjQLxj8t/Mnmnz39aTWDLPq2jlHtrmDhA3GavIHjwRW+DYkUI/Hfdsa&#xA;WOinHw/7udgx5jb371+lx4+vbr37s50ywuXsJL22vYv8STxK11Orq0ZlVOMau0XNSI1Kq+xRiKih&#xA;Nc53UCBySOPk73FqZ4oQx6mEvCj5dCbPuPOjsfMjZAeePQ8paQvmKytlt7l+MGoW9tEjLKZgN1B4&#xA;8f3ijoaUJNCaZfodKMsjEGMZdCeQrn9jXk18837vJx5MQuh/F1rfyZv5Hlv5tDEt9AttO8rEQK3P&#xA;ilBwDMNuXGnKm1fHK9ZEDJUTxD5On0tcG342ZBmK5LsVdirsVdirHvNEL3GlzwXPJY5UeJlVVljZ&#xA;ZBxNQ4K/8EPoOZGKNmga8+RDRLN4ZEyL4Ty6H7vx3pZpNlpiaTa2cESwx2yrFEiIsQBUCvAKAvvR&#xA;fuy48cTueI9Sd797j5MkMxMq4bOw7vIOu7pLGCS3uLhTGwIjU7uWFWMYoalyBsBU4QB9QDWOI+i+&#xA;L7/creWvOF5qN5b2C2KvbgMs17G5CpwjDIeDrVg1QK12OxGYBJt6L8pi8EzEiDGgIkc/j+xQ85/l&#xA;fpPmB3vbZzY6tQlbhfiRyR0dT2NKGnatQc2Wk7SliHDIcUO79X6HXiwbHN43rP5c+Z9JvxAloBJI&#xA;5RFjP7mYMSCY5HIFG5fEjHavcbDfDXafNCspuPeeY99cj3SHPyLdiM4y4sJo8+H3e/mPI8vtei6N&#xA;a69Z6VFbanbLNcsOUEkTMx324c/sv2+XSpzzHtft6eg1AxafHLJiO4MvuFf2+XfsNRocesHHOseX&#xA;+KuXvrp+OTLNI8s3VpqsFwHK2kMYPxEB2dkoylR0FT45gYOx8p7SOqrhxn1bne5R3j8CT8GqOeMN&#xA;MMX1SG1+7qyjOtde7FXYq7FXYq7FUl83eUtK81aR+jNRMsaLIs0Nxbv6c0UqgqHjYhgDxZl3B2OZ&#xA;Wk1c9PPjjXdvyKJRthFh+TK6ZqdhFp8sS6NZTLOJ5SWvSFClozxREYO4apr0Y7bDKc+aeXKckvqJ&#xA;t6CHa2MaM4DE3wcNbcPX1e/l05i73LPbLy7p9uS0iLO5YOvNRRSvTiDyOx33J3yMiOIyAAJ5nqfe&#xA;XmseLhFc6TTItzsVdirsVdiq2WKKaJ4ZkWSKRSkkbgMrKwoVYHYgjDGRBsbEKlul+V/L+lWdxZaf&#xA;YxW1tdljcxoD8fOoIYnelCQBXbtmRm1eXLISnImQYiIHJi/+C9div/q9o8Meno3KK9ZiJVBK0ARR&#xA;VmHHf4lB28KYMkcMo8QuMu6tv2fa7TD2nMbZBxj3/fzVfzH0C5m8ktb2kb3t1A8DMgUs0gB4OwUH&#xA;4dmL/CO3TKRA5PTY+LPsjWY9PqvEI4YG+X8N/oZpFDFECI0CBjyIApUnASTzdTGIHJfgS7FXYq7F&#xA;XYq4gEEEVB2IOKpbqenXb2cqae8SzFf3cdwpeKo3A23X570/ly7FOPEOK68ubVLHYocnn6eQfM/m&#xA;CG4j1sDTRzAgYtHM60FfUiWI8AORPCpBXY0rmxjqcWGQlE+J9g9xvn5/LzRHHQ2FM58veUtI0GNf&#xA;qivJc+ikEt3M7PJIE7kE8F5N8RCKBXtmqmQZGQFW5+XV5MkBCR9MelAfcBac5FxnEA9RXFXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYqx6+85WdlrFxpk8TepEiSI6sjFg1OR9KokovLcgEeNMnHHIi69PK+luX+VvGJRIMz&#xA;/D1q6sdP09BaN0jzHp2ogossa3C0LxBiRRqcWRmCcweS7gdTTrglAhwwenVNMil2KuxV2KuxV2Ku&#xA;xV2KqctzbRJLJLKkccCl53ZgAigcizk/ZFN98jCQlLhibkOnXfl80kEC24ZoZ4UmhdZYZVDxyIQy&#xA;srCoZSNiCMmQQaPNC/ArsVdirsVdirsVQWr61pekWjXWo3CwRKCRXdmpuQqirMfkMBNORptJkzy4&#xA;cYs/jn3MUj896pd3iz21ktvpcNDNHdHhcyByVHwjkI6D4xXrmt1nacMHPcm69/ce67dxPsnFigRO&#xA;V5D/ADd4iv8Add23Jk2ia0mqxyTRxlIl48OVQx5AncECmbYwqIJ6h5wSPHKP801+KTLIM3Yq7FXY&#xA;q7FXYq7FVjSMs0cYRmDhiXFOK8adfnXKp5SJxjwk8V79BXf7+jIR2JtCSa1p6SrD6had3KLEoJaq&#xA;15H2UcT8R22yoauBiZRuVS4dh1uj8B38ubdHSzIutq/Hx8kdmU47sVeC/nKYV87xs0r2s6xAw3Sk&#xA;8QQiGhCjkKHfktflnT9hg+DPYSHFuPh8vgfmz1FVDoeHn/nSW+QdT1e8uz+kysggi5xXShSJfVoC&#xA;5dfhLBagkb7/ABZXrtLixzBx7Xdx7jt05ho1uaUsHrHqEo+rrw1La+o5e6nu9qa2sJryqinkep2G&#xA;+c9LmU4/pHuVcizdirsVdirsVWySxxoXkYKo6k4QLQSBzYzrHnH0J2t7SPkAhJkrV61AFE+yqfaq&#xA;7soG30WcMYbzThw5M+2P5nl+0+Qs+TDB5osrO1vtVuma7gRZTeek3NeBT41IIAbw7VzzzQaeeHtg&#xA;RMTxZcnpPFQIkeu2/P4EPTa7Syhg4T6TGI5ju6/i3oXkzUNP1DyrpV3pyiOxltojbRCg4RcRwWi7&#xA;LRabds9F1UJRySEvqs37+rzAFbXac5Ql2KuxV2KuxVxIAJOwG5OKvOPPOqr9aGp2scJuLQxQW08w&#xA;Bp6kwWTZyUFarRqVG/tTXauVeuYlGEeIUf4/Te0aPEK4uo5dem67H1MJyGns8MxKUq6UNvO76b8x&#xA;8Y9febdPkv57eSdhNGjOiIoNfRUmhJ/lHTtnDfkMk4Rz5CDikY+n5Ae4chtyFO/h2fKMAaFH9LOP&#xA;yyu1u9Ea4Ri8bt+7kbcsgZgrf7ICuek4pylhxmQ4Tw8u54rVY4w1OWMeVj7t/tZhha3Yq7FXYq7F&#xA;XE0BPh4YqlWp62tvbWzxxSst4/peqihjDUH43BI+z4dfCvTMbUynQjHYy2v+btsa679HK0+AT4jx&#xA;RqAvnz8vx8Uk1rzK1oIkurn0BJIotytfXk5/Co4KD19lP+xplx04HDxyJ4fhe1bgbM9HjnmBOLHx&#xA;Gjd/REDrf6PvQGjXGsX2owxPAlrZgyyeiQXuHLRMBLOwrQGpTep33NcuqjZFDu6t+o8IYZCMzkyV&#xA;9fKA9X0R7+nLon3lS31HTraSwvb241WQztJDcT0LpC4FFd/hDcWB7d6dss1E+OpcIj0PDy9+7qRO&#xA;JkQL+Kn5y1yz0qfRzdasNLjlu15R/CTcAUX0vi3CkuOTdu9OuODR5c1+GL4dz7m/FqceLiE4cfFE&#xA;gf0T3vIvzDv9autcu49R021N3dRI9rp/rSSSQRRgh9l4JJJLRTVN1XYD9rOj7Ox4oxuEpUJbyoAE&#xA;0PiAP6WxPya8kpkRuqrYf5x/T3boP8svqZubyS35pW3TnA9G4Gu/FhTkD7gHLe1uIGPFX8W/ycLV&#xA;V+XNfzo/dN7l5f8AMMF96doInikSIFS1KEKAO3fPM9D7QY9VqZ4RExlG/jRdrLRSx4YysEUPuTzN&#xA;64zsVdirsVdirF/zA1az0nSBcSI015cOttY2iNxMsjVbrRuARAzs1NgO+wy/FIRjKczw44C5Hu6f&#xA;Ek0AOpLXLFxkVzeWSs+pRs2i37X8CgNLaqeNyAQV9RlWnrMQD8QPLtQdqs+iycPrifOMhuPeOvv5&#xA;HoS9ZoO1tNOoZAMR5WPoPcAecB5fNLotCur60kWaB7hLtJIAin0yFeMJyDkJxWMgr9llqKU75j4J&#xA;545onFEXEg2eW3ld/cPPo7ntPWaeGKUMmThjIHfYne9gN7JB58+pLPfy/wDJep+XbJfqtxI7xwhI&#xA;rQMViYRqAoIbqTxA5t92bDJvKU5m5SJJrlZeJ7Q7U/MxhDHDhhjAAJ+sgCt+gHl39XpkHreinrhR&#xA;LT4whJWvsSFr9wzGLhi+q/Al2KuxV2KrJ/7iT/VP6sMebGfIvJ/N+nXmo6Lf2VnGZbmYUiiFKsQ4&#xA;agr8sy82mibmB6zED4A3/b37dwauxdZHDq8ZmahGRPzFPL7mxvpvO95BFDK80sN0FgAaprAePwnx&#xA;LZxWLS5PyeLHwkTEoWK5esXfu6vp2TVYxgEzIcFDe9ub0S28zatpP5fW9tYKLVtO0UXV9DvBdFl/&#xA;cyfvZAUQL6gkDjf4dq9M7PSxj44xSIPIA7yF2K22u+VebyGs00Z45agCXqyHuG1E/PZ6N+XmrXOs&#xA;eRtD1O65Ge6s4pHZ2Du3w0DuwABZh8TbdcOvxDHnnEdJF0wOzIcxEuxV2KuxV2KsL88+cfJ3lOaA&#xA;6tObe7v0c26JFLK0pQqOK8FZVJZwN6ZmaPs3JnMskBdUCb5Deufx5NciBQV7HyoGuX1C7HoM1WaV&#xA;yHnKcnfjzaojQc+nhttTMYyANx+bnyzzlAY5HiAr0jaN0BZ6yO3uvvtGy3mkS6VqOm6JNE1/9XlE&#xA;UCN+8eQxkK1WNX7fFU/PK7u20YckZwnlBELHuAvlty9yRfkr6/8Ag9zOztKbpy3qV5D93HQb79Mh&#xA;j5Oy9puH8wOEADgHL3lIPz0tmt9V8n6lZKItQuNUj09rkAFzFMK8Kkf5Jp4VNOpzpew8lxywl9HA&#xA;ZV5h5fLEGk+/MH8rYfMtz+lLW4aDU0Tiqsf3bUpToNun+1mBoO0p6exVwJ3H6nL9EwIy2rkR89x7&#xA;+77WDeTvL3mbTdVvbHV7djdpbArIF5PIisE5cwOUgB2rvmw1mqwZeE4zXPbu5dP1bONrsGQacmuI&#xA;cUfUN+k/xR3eo+W/L17Y3S3M7IF9OnAElqtTqKClM8w7K7BzafWTzTMeE8VVfU+4Ozy6uM8EYAG6&#xA;H3MmzrXAdirsVdirsVYh54/Lm281TR3EmpXNnNDC1vGkYjeEK7BnPBl5cmoASHFQKZmabVRx8PFA&#xA;TEZCW98xy60a5ixzQb3o83m+p/kJ5ut3hk0jVbW4+qj/AEcuJbSRGLAtInAzD1CBTkzfqFOjw9v6&#xA;eV+JCXqNnlIe7eth3Bx5YT0eoeWfLl/DarLq7rJe8yT8KcuIVVFWUkVJUsK1IUgVqKnm82WA9MLq&#xA;vn+OvLfpWzLwQTZ/HuZLHGka8UFB+v55ik23AALsCXYq7FXYq7FWnXmjITTkCKj3wgoIsUgrbSLa&#xA;1RvQAEzfamYcj137jJyymXPk1QwiPLmg9bEGk6LqGrJEr3FnbPM0lAG9OFS5VdjTatBhxxlknGAN&#xA;cUgPmW2IAG+9X932PFLC38zeaNd1HXkiWfTdV0GS2sNFWSOSdCZohyeMlEH8xatQCM3GthhxwOCI&#xA;rMJcRnVDkRXFz9w5bEud2XmliOOWQ3hjLeP2nZ7f5R06XTfK2kWE0QguLazgjnhBU8ZVjAkFVJU/&#xA;HXoaZozfU21avKMmaco/SZGvdeybYHHdirsVdirsVeO/nD5R1fzV5ma1srdpn0zR1u7HiypW6a/j&#xA;JVWJG/pQMfuzfdm6/HgwkE+qU9x/R4T+ksvy0pAS5RurPez3zLpWq6xYw3WnyvHRA/6NuKwhm6jk&#xA;aEq46UYFc0MYiRFmg7DTamOnMgYiUukgfxt5jdBeUvK1+lydS1q2S2uYwUtreN+XHknBnJQ8fs/C&#xA;vgMy8pxwHDjN3zP6HGz6zJl2l9Pcn3lzy3pnl7T2sNNDrbNNJMEduXEyGvFT/Kooo70G5J3ynNmO&#xA;SXEavy+/4tEpylVm62+CK1LStM1O3FvqNrFdwBlkWKZFdQ6/ZYBgaEeOViRHJljyygeKJoooAAAA&#xA;UA2AGBrdQVr38cVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqF1TTbXU9OuNPuwzWt1&#xA;G0U6o7Rkowow5IQ242OShIxII5hlCXCb+/dR0bQNG0W2FtpdpHaxBVQ8B8TKleIZzVm48jSp2yWT&#xA;LKZuRtEpWbTDK0OxV2KuxV2KuxV3EV5U36V70xW3Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq0rq45KQw&#xA;3FQajbY4AbSRTeFDsVdirsVdirsVdirsVWyyxQxtLM6xxIKu7kKoA7knYYsoxMjQFlcCCKjcHocW&#xA;LsVdirsVdirsVdirsVU3urdJlheRVlf7KE0JyiWpxxmIGQEz0ZjHIiwNlTL2DsVdirsVdirsVdir&#xA;sVdirsVdiqT6lrs9isaLZvc3Du0bcCFRaLVWJY9G26ZjZc0ox2Fyc3DpYzsmQiAL80g0zzpfrNDD&#xA;chJ4yaSMoIdR/MW5U+imcPi9rssc1SETi4qve67/ANPL5Ozz9lQ4SY2D9iYaLb2ltr2qHT7w3c8z&#xA;Ri9tmuDIsLISFPAs/pEryB4gVoPDPR8mYzjW3p5bD47jn8XQHFOAiZRkIn+Lv+f6GT5Sh2KuxV2K&#xA;uxV2KuxVL9Y13T9JiD3TkyPX0oEHKR6eA6D5kgYCXIwaaWU7cu88vx7mN+fvMukQeQL3W7hp209R&#xA;Cs8MAj9b97PHEFo9VqHcVzK0mjOpyDEOcv0C1jllpsokOcT8/uag121u9a0WyiluNOlhghuLW2c+&#xA;nFdQXMe6cQ3GQwqhBBFVO4wzx+GKJjvYrmbj58x+lhwZJxlPhMhYuXdZ6s1zFanYq7FXYq7FXYqx&#xA;XzD54s9P1UaNG6rftH6o5MtSv+QhNWPjms7Uz5seEyxD6eZqwP7fP3c3aaXQCURORFSNAdTXNjkW&#xA;r3T3Vvqc/wC+hglBflKiFnDUG52B3+z9GcTpdRPJqo5s9xA9XLc1y+H6Hcy00RE4x6SR3H8fFmV9&#xA;5y0DT9MtNSvpzb217T0eSlm3pUkJy2Wu5z0WGWMoiQ5SFh0OLs3NknKEBZhz/BTvLHAdirsVdirs&#xA;VdirsVdirzj8xPP8ek3y21jd+tPEoElrA4BWTka+owrTiAPhzlu2Mesy6mMMUzjxcNk+dn59Nnp+&#xA;xeyTmhco7Hqe7yTPyX5i8w6tLLeTGO40i8hWTTtvTljlQ8JYnovxDlX4/b326nHwnFYvj+z4ddnT&#xA;9o6cYMvhnYx2Nb/H5ftSP8w/zg0Py9rR0K6s7l7twI+SKoC+sE9NyzEAoTJSo6FTtmxPYuTPo8mS&#xA;JAHBL7j9v63WwnWSN94WHmwpX7yCfw6fPPnWJAIL2dBiXlPW9e0TVtcmt5o3nQiS4MwLJIG5upIY&#xA;eoyipHwsOnXPXB2xCAwyIPDnNDryI5ni2luOZNXZDkdpY9PqMMYxkY+Fe1XWw5+Xu5709m8r+aNP&#xA;13TbeaK4ie6eJWmjjPw8qfEY6k8k5dwT775uvFiZmFGMh/DLaQ94/SNj0Lx+XTSgBLYxPUcvx706&#xA;ybjuxV2KuxV2KsR8965Hpd75fDXLReve8fQjmMJlohYIwoeamlOPc0xOLJKJlEEiO58g7Ps44iMk&#xA;ZmPEYemxfy8/2sc1Q69qPmSW5v8ATJUsZ3W20+aFlkCQRrz9aYfDxDM7dDWtBTMqWHEIk8e8RZsU&#xA;PcO/v7vPZoxa2QxRjEDmTz33/s/Fsc/M3zjb6Fp8vl+KGOaC7QPcpcJzRByqvFT9qpUHeuUaLxeK&#xA;McJMsh5EbfjZ3Gg0OLNjOo1J4ccdvf7/ANACb+QLu58xz+VNSu7OYTadHcwC9i9P6u0UScYi615q&#xA;3UdKE/cDn0uaMiclCQPqB5+8dPtatTrsOGOTBgIljyiJ93l+A9dyt0DsVdirsVdirsVeXefLbSIr&#xA;vzFqc0KR6lZWkf1O5JX1D6iE8V5b7PXceNO2QnCZxyAMuAkEjofe7zQZh4mCJo3L5b/peOafrt8+&#xA;ma7OrsJLZbeSLn9kES1UhRTOb7VxiefDE8pGYP8ApXtdRRmAB3o62/SN1aw3V3dSS2lgkJhhl5Oj&#xA;MGApuePUVI6dMOftOMKgB6jttW1Db4d3xZCWOIqt5c626c30f5R1HUNS8t2F9qKql9PHynRPshgx&#xA;FB92brQZ/Fwid8V3v37l847QwxxZ5Qh9ITfMxw3Yq7FXYqtmkEUTyEEhFLEDqaCu2V5snBAy58IJ&#xA;+TKMbIDzafz5Lo11Dd6reMbeZyDAAXZx3CRqNuI7/ec857F7V12fVA8RnGxx/wA0A/janqP5Ljmi&#xA;YY4+r8dWJedPzf1q+lmttOk/Renq3FZY3KzvRqqxkHEpWg+FfcEnPQzMk0Hbdnez2DDHxM5EiBe/&#xA;0j9bGLHQ5pwt1PSQupehkqwHIq3Nz8J4v/efFUd6ZLLpckCYyFFyv9EGkAAjKgAOm3Tu/FvQPy4X&#xA;8zW8wKrC3tPKsXqRyW/1dY+DKI2Ypw482kk5mtSoqT4ZsMOXSjT8BjLxx16Hc/DYV5n5vF9u6fh1&#xA;JnGYlGYB52R72W+dvIya1qNrq0UcLXNrEYpAyfvZEDeog513CSDkq0679aZr+0NVqY6LJjwEiZ3F&#xA;fI+4mP6nE0M8cMolMX+g9/49/RgnmHXtN8up/uTlFvKqnhbSFzK5A2oigso3Hxcds8x7K9ltfrcv&#xA;BHHMAn1SlGhH4mr912XoNRrceOPETz5O0fVrLXbOSe3tGjWZ3t29WOJvV4qK8DG0iyI3PiN/EZV2&#xA;z2Lqey9RDDOYlOhOPAZbWSBzESJem+XduumzxzQMq9PLf8ck/wDJH5L2Oh302oz3U6CaQzR6ZDKy&#xA;QxnnzWpXixK7Drt0qQTnr09bk1GDEM8YnLCMblXq4q336X1rm6AZo4ZS8LlKxvyo+X6T8ur07KXD&#xA;dirsVdirsVYH+aPk218wPodzOLsLpt4srNZJ6rhSy/aQBmO42IHw1qdq5sez9dkwcUYCJExR4tvx&#xA;+lfDhIEk0eiTHzF5mvZvNem2NoFl8ssI7VkLFrgSK7pWM1oQsY41NGPcZmDS4YDFKR2y8/KqH47n&#xA;Byxl38ubxvUbLzNr0017raO93G/GtxF9Vkljp6Sn0SE7kqOKitOla5lHVabQ6yMsYuJhUqNgWenO&#xA;+W4+16zQ6TJq+zjDiAEZ3H4Akg93O9/1PffIvlDUtL8vWdnO8aXVuG+JKtGpaRmAqOBalabffmv7&#xA;T1sMuaUo/Sf1PJ48JJss5gR0hRHcyOoAaQilT40zUkuaBQX4EuxV2KuxVxFQR0r3GKvn/wDNf8pH&#xA;t9ZfzKk11f2TL9ueX1DayVIX1ZGDO0I57Mx+GnxNQCu6Otz6jT/l8PhwJPq5jij/AEa2EjVed9+7&#xA;l9m5cOHPHJlBIidq6e/vYr5e8q6lNZ6lBeEWUWqKiW082wIharlf2TxJC7sN85XN2XLJqMU5emOM&#xA;mx15Vt+16nX9u4okHH65fZv3/j5Mk0ezivbe50GC1llvrFYpL2ytmWZjUULow6KXVdm3HL5Fj2l7&#xA;KQjmjqQZeHLlt79vxYPQuFoO2JZZeuUInzvl+P7HunlzS00zR4LUKUb4pJEJLFXkYuy8j148uIPt&#xA;mVgwxxQEICoh0eu1BzZTLn0+W3280yy1xHYq7FXYqg9YN5+jLj6mOVwVogpU0JAagPfjXNd2ucw0&#xA;s/BF5K2/T9lt+m4fEHF9LzDXfIl9qtqs9yGt4bE8nYowkZGFCsaHY1IWpPT3ziOwsWfRwy58kJRh&#xA;GI2Iok359B1Pm9do+14YZ1H1GW3Pb4/jdLP8EFLiS+0GzkdISrTRP+9uI+QK1icCLmg+0Y+p3oTW&#xA;i9x7N9v4teJQ4PBnD+K7EgehNXE/YeoHN0fbOXPMiWSfGD05AfD8FNNL/LTXNSlsr26kOlwswkv4&#xA;ZFDzTDgQtU5OnMBuJZ96bEEEjOky5sYxnHI8ZH0kfw/E8x5cvcXT4Z8ExKgR3Hr8iHqGmafFp9hD&#xA;ZxM0ixLT1HpyYk1LNQAVJPYZqgG3UZjlmZna0VhaUr8w+V9B8w2TWer2cd1EfslgOSnxVuoyzFmn&#xA;jlxQJiWcchArmO7p+PPm3onlrQtDsorPS7KK2ghFECqOW+5JY/EScrz/AL2fiT9U+88/h3JOWRFd&#xA;O7omeLW7FXYq7FXYq7FXYqhYNL02C+uL+C1ijvbvj9auVRRJJwHFebAVNAKZIyJABPJkZnh4b2Ub&#xA;ny/ol1eRXlxZQzXMO8UjorFTWtVJG2/hgtMMk4AxjKQjLmASAfeEwwMHYq7FXYq7FXYq7FXEAggi&#xA;oOxBxVhzflZ5c/SiXkMlzbWaO0p0mF1W0MjKULceHqKOLEcVcKOwGbH+U58O4iZ/ziPV+POr6MOA&#xA;MpsdNsLCIx2cCQKxq/AULNSnJ26s3ud8wZ5JTNyNsgERkEuxV2KuxV2KuxV2KtKiIKIoUeAFMjGA&#xA;iKApJJPNvJIdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdiqjeXtlZQG4vLiO2gWgaWZ1jQE9KsxAyUISkaiLPkgkB&#xA;YdQtW0839vKk9sYzLFNGwdHWlQVZagg+2HwzxcJFFE5VElimh/mLp90rpOx5xhiycT6lEJBKqKlt&#xA;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&#xA;LKXGf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:603777ac-b772-8840-bc59-4d5eeb88b97e</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:603777ac-b772-8840-bc59-4d5eeb88b97e</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:09d8c6c4-a50f-40b6-9c27-138e5e44c86e</stRef:instanceID>
            <stRef:documentID>xmp.did:9a4f548f-890e-ce4f-8930-cd5c19288f55</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3a20f972-edde-0b45-bb2e-054a8dc7c649</stEvt:instanceID>
                  <stEvt:when>2018-10-13T13:53:22+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:76c5f59f-625f-cf4d-8b02-a78aa89b8516</stEvt:instanceID>
                  <stEvt:when>2020-04-29T22:51:29+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9a4f548f-890e-ce4f-8930-cd5c19288f55</stEvt:instanceID>
                  <stEvt:when>2021-03-17T03:48:07+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:603777ac-b772-8840-bc59-4d5eeb88b97e</stEvt:instanceID>
                  <stEvt:when>2021-03-18T05:39:02+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
256.723 267.118 mo
258.625 266.937 li
258.37 266.789 li
256.468 266.97 li
256.723 267.118 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.894118 .941176 .960784 rgb
f
256.468 266.97 mo
258.37 266.789 li
257.848 266.485 257.295 266.205 256.716 265.95 cv
255.086 266.269 li
255.57 266.483 256.032 266.716 256.468 266.97 cv
cp
f
255.086 266.269 mo
256.716 265.95 li
252.634 264.147 247.265 263.557 242.245 264.416 cv
219.587 268.282 200.207 274.865 184.801 283.759 cv
186.685 283.941 li
201.765 275.234 221.375 268.848 242.993 264.989 cv
247.19 264.271 251.676 264.764 255.086 266.269 cv
cp
f
150.888 319.007 mo
150.899 322.997 li
150.906 325.449 152.558 327.843 155.626 329.626 cv
155.615 325.635 li
152.547 323.852 150.895 321.458 150.888 319.007 cv
cp
.384314 .780392 .905882 rgb
f
186.685 283.941 mo
184.801 283.759 li
177.866 287.763 171.737 292.236 166.477 297.139 cv
168.778 297.166 li
173.918 292.314 179.898 287.86 186.685 283.941 cv
cp
.894118 .941176 .960784 rgb
f
168.778 297.166 mo
166.477 297.139 li
160.277 302.919 155.285 309.299 151.606 316.216 cv
149.844 319.549 151.38 323.174 155.615 325.635 cv
157.512 323.623 li
153.975 321.568 152.69 318.536 154.163 315.751 cv
157.831 309.155 162.721 302.884 168.778 297.166 cv
cp
f
155.615 325.635 mo
155.626 329.626 li
155.983 329.833 li
155.972 325.843 li
155.615 325.635 li
cp
.384314 .780392 .905882 rgb
f
157.512 323.623 mo
155.615 325.635 li
155.972 325.843 li
157.869 323.831 li
157.512 323.623 li
cp
.894118 .941176 .960784 rgb
f
186.685 283.941 mo
171.897 292.479 160.942 303.56 154.163 315.751 cv
152.69 318.536 153.975 321.568 157.512 323.623 cv
157.869 323.831 li
163.372 327.034 171.976 326.766 177.094 323.813 cv
178.309 323.112 179.33 322.256 180.068 321.254 cv
186.945 311.542 196.612 303.563 208.567 296.66 cv
220.759 289.621 234.891 283.963 252.093 279.997 cv
253.869 279.571 255.381 278.974 256.621 278.258 cv
261.735 275.303 262.243 270.322 256.723 267.118 cv
256.468 266.97 li
252.953 264.928 247.785 264.169 242.993 264.989 cv
221.375 268.848 201.765 275.234 186.685 283.941 cv
cp
.956863 .960784 .980392 rgb
f
155.972 325.843 mo
155.983 329.833 li
162.587 333.672 172.88 333.346 178.995 329.816 cv
180.45 328.976 181.669 327.953 182.545 326.764 cv
189.352 317.513 198.761 309.422 210.469 302.663 cv
222.406 295.77 236.735 290.265 253.125 286.336 cv
255.232 285.83 257.038 285.117 258.522 284.261 cv
261.673 282.442 263.363 279.977 263.356 277.489 cv
263.344 273.498 li
263.352 275.987 261.661 278.451 258.511 280.27 cv
257.027 281.127 255.22 281.84 253.113 282.345 cv
236.724 286.274 222.395 291.78 210.457 298.672 cv
198.75 305.431 189.341 313.523 182.534 322.773 cv
181.658 323.963 180.439 324.985 178.984 325.826 cv
172.869 329.356 162.576 329.681 155.972 325.843 cv
cp
.384314 .780392 .905882 rgb
f
157.869 323.831 mo
155.972 325.843 li
157.266 326.595 158.702 327.187 160.221 327.627 cv
161.413 325.32 li
160.145 324.953 158.947 324.458 157.869 323.831 cv
cp
.894118 .941176 .960784 rgb
f
161.413 325.32 mo
160.221 327.627 li
166.25 329.372 173.578 328.711 178.501 326.093 cv
176.689 324.037 li
172.57 326.226 166.443 326.777 161.413 325.32 cv
cp
f
176.689 324.037 mo
178.501 326.093 li
178.664 326.006 178.825 325.917 178.984 325.826 cv
180.439 324.985 181.658 323.963 182.534 322.773 cv
189.341 313.523 198.75 305.431 210.457 298.672 cv
211.817 297.886 213.209 297.12 214.63 296.37 cv
212.812 294.308 li
211.371 295.074 209.957 295.858 208.567 296.66 cv
196.612 303.563 186.945 311.542 180.068 321.254 cv
179.33 322.256 178.309 323.112 177.094 323.813 cv
176.961 323.89 176.826 323.965 176.689 324.037 cv
cp
f
212.812 294.308 mo
214.63 296.37 li
225.687 290.546 238.591 285.827 253.113 282.345 cv
254.991 281.895 256.631 281.28 258.016 280.544 cv
256.207 278.487 li
255.049 279.102 253.676 279.618 252.093 279.997 cv
236.852 283.511 224.02 288.354 212.812 294.308 cv
cp
f
256.207 278.487 mo
258.016 280.544 li
258.185 280.454 258.35 280.363 258.511 280.27 cv
264.623 276.741 265.24 270.781 258.625 266.937 cv
256.723 267.118 li
262.243 270.322 261.735 275.303 256.621 278.258 cv
256.486 278.336 256.348 278.412 256.207 278.487 cv
cp
f
179.574 295.529 mo
174.69 292.679 li
186.876 223.585 li
191.764 226.431 li
179.574 295.529 li
cp
.384314 .780392 .905882 rgb
f
191.764 226.431 mo
186.876 223.585 li
221.592 203.633 li
226.477 206.482 li
191.764 226.431 li
cp
.894118 .941176 .960784 rgb
f
226.477 206.482 mo
214.29 275.577 li
179.574 295.529 li
191.764 226.431 li
226.477 206.482 li
cp
f
307.088 51.9302 mo
301.112 48.4922 li
300.199 47.962 298.934 48.0365 297.537 48.8429 cv
303.514 52.2809 li
304.91 51.4745 306.175 51.4 307.088 51.9302 cv
cp
.956863 .960784 .980392 rgb
f
gsave
307.088 51.9302 mo
301.112 48.4922 li
300.199 47.962 298.934 48.0365 297.537 48.8429 cv
303.514 52.2809 li
304.91 51.4745 306.175 51.4 307.088 51.9302 cv
cp
clp
307.088 51.9302 mo
301.112 48.4922 li
300.199 47.962 298.934 48.0365 297.537 48.8429 cv
303.514 52.2809 li
304.91 51.4745 306.175 51.4 307.088 51.9302 cv
cp
f
grestore
80.4188 322.957 mo
86.395 326.395 li
85.4941 325.871 84.9352 324.757 84.9307 323.174 cv
78.9543 319.736 li
78.959 321.319 79.5176 322.433 80.4188 322.957 cv
cp
.384314 .780392 .905882 rgb
f
gsave
80.4188 322.957 mo
86.395 326.395 li
85.4941 325.871 84.9352 324.757 84.9307 323.174 cv
78.9543 319.736 li
78.959 321.319 79.5176 322.433 80.4188 322.957 cv
cp
clp
84.9307 323.174 mo
78.9543 319.736 li
78.959 321.319 79.5176 322.433 80.4188 322.957 cv
86.395 326.395 li
85.4941 325.871 84.9352 324.757 84.9307 323.174 cv
cp
f
grestore
84.5376 184.477 mo
78.5613 181.04 li
78.9543 319.736 li
84.9307 323.174 li
84.5376 184.477 li
cp
f
303.514 52.2809 mo
297.537 48.8429 li
83.5657 172.38 li
89.5419 175.818 li
303.514 52.2809 li
cp
.956863 .960784 .980392 rgb
f
89.5419 175.818 mo
83.5657 172.38 li
80.7915 173.981 78.5522 177.86 78.5613 181.04 cv
84.5376 184.477 li
84.5284 181.298 86.7682 177.419 89.5419 175.818 cv
cp
.894118 .941176 .960784 rgb
f
gsave
89.5419 175.818 mo
83.5657 172.38 li
80.7915 173.981 78.5522 177.86 78.5613 181.04 cv
84.5376 184.477 li
84.5284 181.298 86.7682 177.419 89.5419 175.818 cv
cp
clp
89.5419 175.818 mo
83.5657 172.38 li
80.7915 173.981 78.5522 177.86 78.5613 181.04 cv
84.5376 184.477 li
84.5284 181.298 86.7682 177.419 89.5419 175.818 cv
cp
.956863 .960784 .980392 rgb
f
grestore
89.5419 175.818 mo
86.7682 177.419 84.5284 181.298 84.5376 184.477 cv
84.9307 323.174 li
84.9401 326.361 87.1937 327.646 89.9679 326.044 cv
303.94 202.508 li
306.713 200.906 308.953 197.027 308.944 193.84 cv
308.551 55.1436 li
308.542 51.9642 306.287 50.6793 303.514 52.2809 cv
89.5419 175.818 li
cp
f
88.6477 184.466 mo
89.0256 319.767 li
89.0341 321.831 li
301.88 198.944 li
303.376 198.089 304.84 195.565 304.831 193.855 cv
304.445 56.4904 li
302.71 57.4935 li
91.5992 179.377 li
90.1029 180.24 88.6396 182.756 88.6477 184.466 cv
cp
f
88.6477 184.466 mo
89.0256 319.767 li
300.145 197.875 li
301.634 197.012 303.097 194.488 303.089 192.778 cv
302.71 57.4935 li
91.5992 179.377 li
90.1029 180.24 88.6396 182.756 88.6477 184.466 cv
cp
.623529 .839216 .937255 rgb
f
130.546 113.711 mo
131.24 113.31 li
132.272 112.714 132.789 111.492 132.789 109.642 cv
132.789 108.696 132.651 108.108 132.375 107.876 cv
132.099 107.646 131.783 107.633 131.427 107.838 cv
130.546 108.347 li
130.546 113.711 li
cp
130.547 124.778 mo
130.547 125.045 130.003 125.574 128.918 126.365 cv
127.832 127.157 126.742 127.868 125.648 128.5 cv
124.553 129.132 123.85 129.466 123.538 129.502 cv
123.227 129.539 123.071 129.402 123.071 129.093 cv
123.071 109.271 li
123.071 108.737 123.653 108.021 124.819 107.121 cv
125.985 106.222 127.458 105.259 129.238 104.231 cv
131.018 103.204 132.17 102.544 132.695 102.25 cv
133.22 101.958 133.839 101.637 134.551 101.287 cv
135.262 100.938 135.828 100.715 136.246 100.617 cv
136.664 100.519 137.127 100.437 137.634 100.37 cv
138.142 100.303 138.538 100.367 138.823 100.563 cv
139.107 100.759 139.383 101.025 139.65 101.365 cv
140.13 101.971 140.371 103.09 140.371 104.725 cv
140.371 106.359 140.134 107.872 139.664 109.264 cv
139.192 110.657 138.564 111.867 137.781 112.894 cv
139.828 115.432 140.852 117.205 140.852 118.212 cv
140.852 119.219 139.098 120.734 135.593 122.758 cv
134.578 123.344 133.874 123.7 133.483 123.822 cv
133.092 123.946 132.843 123.864 132.736 123.576 cv
131 118.227 li
130.546 118.459 li
130.547 124.778 li
cp
1 .196078 .384314 rgb
f
155.722 111.137 mo
144.402 117.672 li
143.53 118.176 142.942 118.443 142.64 118.474 cv
142.338 118.505 142.186 118.366 142.186 118.057 cv
142.186 98.5439 li
142.186 98.0098 142.395 97.5087 142.814 97.0411 cv
143.231 96.5742 143.983 96.0267 145.069 95.4003 cv
155.801 89.2039 li
156.176 88.9882 156.363 89.5944 156.363 91.0225 cv
156.363 92.4512 156.282 93.5862 156.122 94.429 cv
155.962 95.2722 155.748 95.7695 155.482 95.9235 cv
154.324 96.5917 152.376 97.5836 149.634 98.8981 cv
149.634 100.964 li
152.268 99.3203 153.987 98.2667 154.787 97.8044 cv
155.268 97.5272 155.508 98.0358 155.508 99.3304 cv
155.508 100.625 155.415 101.66 155.228 102.436 cv
155.041 103.212 154.787 103.692 154.467 103.878 cv
149.634 106.544 li
149.634 108.516 li
152.732 106.462 154.867 105.095 156.042 104.417 cv
156.416 104.201 156.603 104.813 156.603 106.251 cv
156.603 107.69 156.523 108.826 156.363 109.657 cv
156.202 110.49 155.989 110.983 155.722 111.137 cv
cp
f
165.813 105.311 mo
164.959 105.804 164.398 106.056 164.132 106.066 cv
163.864 106.077 163.677 105.938 163.571 105.65 cv
157.671 90.2518 li
157.671 89.8618 158.306 89.0422 159.579 87.793 cv
160.852 86.5452 162.137 85.5457 163.437 84.7956 cv
165.109 83.83 166 83.922 166.107 85.0731 cv
167.015 94.3212 li
167.388 94.106 li
168.136 83.902 li
168.225 82.6378 169.426 81.3383 171.74 80.0023 cv
172.63 79.4885 173.226 79.2824 173.529 79.3856 cv
173.831 79.4882 174 79.7559 174.036 80.1871 cv
174.917 89.759 li
175.291 89.543 li
175.985 79.3699 li
176.039 78.7434 176.648 77.9395 177.814 76.9577 cv
178.979 75.9766 180.137 75.1548 181.285 74.4919 cv
182.432 73.829 183.216 73.5725 183.634 73.7213 cv
184.052 73.8707 184.261 74.1605 184.261 74.592 cv
178.548 97.0032 li
178.352 97.754 177.035 98.8323 174.597 100.24 cv
173.867 100.662 173.377 100.872 173.129 100.872 cv
172.879 100.872 172.711 100.723 172.621 100.425 cv
171.233 95.863 li
170.912 96.0477 li
169.498 102.228 li
169.337 102.958 168.109 103.985 165.813 105.311 cv
cp
f
191.63 81.2504 mo
191.229 75.9329 li
190.642 76.272 li
190.188 82.0828 li
191.63 81.2504 li
cp
188.68 91.7704 mo
188.173 92.2894 187.26 92.9293 185.944 93.6895 cv
184.626 94.45 183.527 94.9456 182.646 95.1773 cv
181.765 95.4083 181.325 95.3082 181.325 94.8766 cv
181.325 94.3835 182.116 90.7771 183.701 84.056 cv
185.285 77.3357 186.192 73.4668 186.424 72.4497 cv
186.513 72.1315 187.229 71.4966 188.573 70.546 cv
189.917 69.5958 191.358 68.676 192.898 67.7874 cv
194.437 66.8987 195.287 66.716 195.448 67.2399 cv
198.812 78.204 200.494 83.789 200.494 83.9944 cv
200.494 84.2003 200.387 84.4673 200.173 84.796 cv
199.675 85.5366 198.687 86.3321 197.21 87.1851 cv
194.06 89.004 192.448 89.5024 192.378 88.6799 cv
192.191 86.7843 li
189.627 88.2645 li
189.494 90.067 li
189.458 90.6843 189.187 91.2517 188.68 91.7704 cv
cp
f
209.303 68.2424 mo
209.998 67.8416 li
211.03 67.2455 211.546 66.0226 211.546 64.1732 cv
211.546 63.2279 211.408 62.6395 211.132 62.4078 cv
210.856 62.1776 210.54 62.1642 210.184 62.3697 cv
209.303 62.8782 li
209.303 68.2424 li
cp
209.304 79.3093 mo
209.304 79.5767 208.761 80.1056 207.675 80.8962 cv
206.59 81.6883 205.5 82.3995 204.405 83.0316 cv
203.31 83.6633 202.607 83.9973 202.296 84.0333 cv
201.984 84.0697 201.828 83.9332 201.828 83.6248 cv
201.828 63.8026 li
201.828 63.2685 202.411 62.5524 203.577 61.6525 cv
204.742 60.7537 206.215 59.7902 207.995 58.7629 cv
209.775 57.7354 210.927 57.0749 211.453 56.7819 cv
211.978 56.4893 212.596 56.168 213.308 55.8184 cv
214.02 55.4694 214.585 55.2462 215.004 55.1481 cv
215.422 55.0505 215.884 54.9683 216.392 54.9014 cv
216.899 54.8349 217.295 54.8989 217.58 55.0946 cv
217.864 55.2899 218.141 55.5569 218.407 55.8958 cv
218.888 56.5023 219.128 57.6219 219.128 59.2561 cv
219.128 60.8899 218.892 62.4033 218.421 63.7949 cv
217.949 65.1882 217.322 66.3982 216.538 67.4255 cv
218.585 69.9633 219.609 71.736 219.609 72.743 cv
219.609 73.7499 217.855 75.2658 214.35 77.2899 cv
213.335 77.8757 212.631 78.231 212.24 78.3538 cv
211.849 78.4771 211.599 78.3951 211.493 78.1071 cv
209.757 72.7581 li
209.303 72.9897 li
209.304 79.3093 li
cp
f
229.246 51.3954 mo
228.819 51.6422 228.534 51.848 228.392 52.0118 cv
228.392 64.4658 li
229.406 64.0042 li
229.94 63.6955 230.345 62.9689 230.622 61.8226 cv
230.897 60.6768 231.035 58.8917 231.035 56.4666 cv
231.035 54.0418 230.892 52.5004 230.608 51.8428 cv
230.323 51.1851 229.87 51.0356 229.246 51.3954 cv
cp
229.46 68.5665 mo
223.16 72.204 li
222.287 72.7073 221.7 72.9747 221.397 73.0055 cv
221.095 73.0366 220.944 72.8872 220.944 72.5582 cv
220.943 53.1063 li
220.943 52.5718 221.139 52.0737 221.531 51.6114 cv
221.922 51.149 222.599 50.6401 223.56 50.0854 cv
229.566 46.6176 li
232.984 44.6443 235.342 44.0588 236.641 44.8599 cv
237.94 45.6621 238.591 48.1072 238.591 52.197 cv
238.591 56.2867 237.914 59.5501 236.562 61.985 cv
235.209 64.4203 232.842 66.6141 229.46 68.5665 cv
cp
f
214.145 293.411 mo
187.739 278.065 li
173.255 269.647 li
153.478 258.155 li
153.282 188.772 li
153.218 166.286 li
173.256 177.932 li
187.74 186.349 li
213.882 201.542 li
213.884 201.689 li
213.948 224.026 li
214.145 293.411 li
cp
.854902 .160784 .317647 rgb
f
214.087 224.108 mo
213.948 224.026 li
153.282 188.772 li
153.218 166.286 li
173.256 177.932 li
187.74 186.349 li
213.882 201.542 li
213.884 201.689 li
214.087 224.108 li
cp
.72549 .109804 .243137 rgb
f
213.884 201.542 mo
153.218 166.286 li
215.887 130.104 li
276.554 165.36 li
213.884 201.542 li
cp
.513726 .552941 .756863 rgb
f
276.814 257.229 mo
254.498 270.113 li
239.965 278.504 li
214.145 293.411 li
213.884 201.689 li
213.884 201.542 li
239.964 186.484 li
254.497 178.094 li
276.554 165.359 li
276.618 188.006 li
276.814 257.229 li
cp
.72549 .109804 .243137 rgb
f
214.087 216.026 mo
149.379 178.423 li
149.101 147.774 li
213.809 185.377 li
214.087 216.026 li
cp
1 .196078 .384314 rgb
f
276.618 188.006 mo
214.087 224.108 li
213.884 201.689 li
213.884 201.542 li
239.964 186.484 li
254.497 178.094 li
276.554 165.359 li
276.618 188.006 li
cp
.572549 .0862745 .192157 rgb
f
280.653 146.786 mo
254.498 161.887 li
239.965 170.277 li
213.809 185.377 li
187.74 170.227 li
173.255 161.809 li
149.102 147.774 li
175.045 132.794 li
189.578 124.404 li
215.946 109.181 li
240.097 123.215 li
254.582 131.635 li
280.653 146.786 li
cp
1 .360784 .513726 rgb
f
280.653 146.785 mo
280.931 177.434 li
214.087 216.026 li
213.809 185.377 li
280.653 146.785 li
cp
.854902 .160784 .317647 rgb
f
187.74 170.227 mo
187.74 186.349 li
187.739 278.065 li
173.255 269.647 li
173.256 177.932 li
173.256 161.811 li
187.74 170.227 li
cp
.980392 .678431 .00784314 rgb
f
254.498 270.113 mo
239.965 278.504 li
239.964 186.484 li
239.964 170.277 li
254.497 161.886 li
254.497 178.094 li
254.498 270.113 li
cp
f
276.888 171.964 mo
270.186 167.661 li
262.355 191.629 li
262.354 173.696 li
262.354 157.489 li
276.887 149.097 li
276.887 165.306 li
276.888 171.964 li
cp
f
254.498 161.887 mo
239.965 170.277 li
213.809 155.175 li
199.276 146.786 li
175.045 132.794 li
189.578 124.404 li
213.809 138.394 li
228.341 146.786 li
254.498 161.887 li
cp
.992157 .854902 .298039 rgb
f
276.888 149.119 mo
262.355 157.509 li
210.192 150.917 li
224.725 142.527 li
276.888 149.119 li
cp
f
254.582 131.635 mo
228.341 146.786 li
213.809 155.175 li
187.74 170.227 li
173.255 161.809 li
199.276 146.786 li
213.809 138.394 li
240.097 123.215 li
254.582 131.635 li
cp
f
gsave
241.626 84.5933 mo
255.966 92.9268 li
257.696 93.932 258.947 96.1027 259.561 99.231 cv
260.32 103.102 259.972 107.926 258.606 112.465 cv
244.266 104.131 li
245.632 99.5925 245.98 94.7685 245.22 90.8975 cv
244.607 87.7692 243.356 85.5985 241.626 84.5933 cv
cp
clp
258.606 112.465 mo
244.266 104.131 li
245.632 99.5925 245.98 94.7685 245.22 90.8975 cv
244.607 87.7692 243.356 85.5985 241.626 84.5933 cv
255.966 92.9268 li
257.696 93.932 258.947 96.1027 259.561 99.231 cv
260.32 103.102 259.972 107.926 258.606 112.465 cv
cp
.980392 .678431 .00784314 rgb
f
grestore
217.702 138.553 mo
217.702 140.55 li
224.141 144.292 li
225.05 144.82 226.351 144.909 228.032 144.556 cv
217.702 138.553 li
cp
.980392 .678431 .00784314 rgb
f
235.446 119.554 mo
234.207 121.068 232.865 122.574 231.431 124.057 cv
227.337 128.289 222.966 131.818 219.252 133.963 cv
218.72 134.27 218.204 134.545 217.702 134.793 cv
217.702 138.553 li
228.032 144.556 li
228.582 144.44 229.174 144.278 229.805 144.067 cv
230.948 143.687 232.226 143.086 233.592 142.297 cv
237.307 140.152 241.677 136.623 245.771 132.39 cv
247.205 130.907 248.547 129.402 249.787 127.887 cv
235.446 119.554 li
cp
f
249.787 127.887 mo
235.446 119.554 li
239.741 114.309 242.812 108.966 244.266 104.131 cv
258.606 112.465 li
257.152 117.299 254.081 122.643 249.787 127.887 cv
cp
f
233.411 111.432 mo
235.239 108.261 237.263 105.315 239.391 102.716 cv
225.05 94.3824 li
222.923 96.9812 220.899 99.9275 219.071 103.099 cv
214.717 110.652 211.059 119.389 209.153 126.659 cv
217.702 132.709 li
217.702 140.718 li
224.068 144.417 li
223.753 144.234 223.484 144 223.262 143.713 cv
222.402 142.604 222.238 140.698 222.776 138.049 cv
224.352 130.277 228.428 120.077 233.411 111.432 cv
cp
.992157 .854902 .298039 rgb
f
239.391 102.716 mo
225.05 94.3824 li
226.275 92.8855 227.535 91.504 228.811 90.2612 cv
229.07 90.0099 li
231.305 87.8599 233.319 86.2673 235.101 85.2383 cv
236.232 84.5853 237.27 84.1597 238.211 83.9619 cv
252.551 92.2954 li
251.609 92.4932 250.572 92.9188 249.442 93.5718 cv
247.659 94.6008 245.645 96.1934 243.411 98.3434 cv
243.151 98.5947 li
241.875 99.8375 240.615 101.219 239.391 102.716 cv
cp
f
252.551 92.2954 mo
238.211 83.9619 li
238.87 83.8233 239.482 83.7971 240.046 83.8835 cv
240.636 83.9738 241.188 84.1702 241.699 84.4669 cv
256.039 92.8005 li
255.528 92.5037 254.976 92.3073 254.386 92.217 cv
253.822 92.1306 253.21 92.1572 252.551 92.2954 cv
cp
f
258.606 112.465 mo
259.972 107.926 260.32 103.102 259.561 99.231 cv
258.768 95.1885 256.91 92.7451 254.331 92.3493 cv
252.979 92.1421 251.344 92.5925 249.441 93.6912 cv
247.671 94.7132 245.667 96.2973 243.443 98.4365 cv
243.185 98.6874 li
239.708 102.074 236.353 106.496 233.484 111.474 cv
228.513 120.097 224.448 130.27 222.875 138.023 cv
222.346 140.634 222.505 142.511 223.35 143.601 cv
224.419 144.98 226.591 145.137 229.805 144.067 cv
230.948 143.687 232.226 143.086 233.592 142.297 cv
237.307 140.152 241.677 136.623 245.771 132.39 cv
252.174 125.77 256.732 118.695 258.606 112.465 cv
cp
259.661 99.1491 mo
260.424 103.04 260.075 107.891 258.701 112.456 cv
256.815 118.721 252.238 125.832 245.809 132.478 cv
241.703 136.723 237.318 140.264 233.59 142.416 cv
232.217 143.209 230.933 143.814 229.784 144.196 cv
226.541 145.275 224.347 145.113 223.262 143.713 cv
222.402 142.603 222.238 140.698 222.776 138.049 cv
224.352 130.277 228.428 120.077 233.411 111.432 cv
236.292 106.435 239.66 101.996 243.151 98.5947 cv
243.411 98.3434 li
245.645 96.1934 247.659 94.6008 249.442 93.5718 cv
251.364 92.4617 253.017 92.0077 254.386 92.217 cv
256.99 92.616 258.863 95.0779 259.661 99.1491 cv
cp
.980392 .678431 .00784314 rgb
f
203.164 121.166 mo
217.505 129.5 li
220.535 131.261 222.924 133.724 224.407 136.668 cv
226.058 139.944 224.396 144.345 219.468 149.749 cv
205.127 141.416 li
210.057 136.011 211.718 131.611 210.067 128.335 cv
208.584 125.39 206.195 122.927 203.164 121.166 cv
cp
f
gsave
203.164 121.166 mo
217.505 129.5 li
220.535 131.261 222.924 133.724 224.407 136.668 cv
226.058 139.944 224.396 144.345 219.468 149.749 cv
205.127 141.416 li
210.057 136.011 211.718 131.611 210.067 128.335 cv
208.584 125.39 206.195 122.927 203.164 121.166 cv
cp
clp
219.468 149.749 mo
205.127 141.416 li
205.636 140.858 206.11 140.311 206.549 139.775 cv
220.889 148.108 li
220.45 148.644 219.976 149.191 219.468 149.749 cv
cp
f
220.889 148.108 mo
206.549 139.775 li
210.364 135.115 211.547 131.273 210.067 128.335 cv
208.584 125.39 206.195 122.927 203.164 121.166 cv
217.505 129.5 li
220.535 131.261 222.924 133.724 224.407 136.668 cv
225.888 139.606 224.704 143.448 220.889 148.108 cv
cp
f
grestore
191.406 160.673 mo
177.066 152.339 li
179.928 154.003 184.368 153.785 189.83 151.669 cv
191.756 150.923 193.704 149.977 195.584 148.891 cv
199.241 146.78 202.642 144.141 205.127 141.416 cv
219.468 149.749 li
216.982 152.474 213.581 155.114 209.924 157.225 cv
208.045 158.31 206.096 159.256 204.17 160.002 cv
198.708 162.119 194.268 162.336 191.406 160.673 cv
cp
f
gsave
191.406 160.673 mo
177.066 152.339 li
179.928 154.003 184.368 153.785 189.83 151.669 cv
191.756 150.923 193.704 149.977 195.584 148.891 cv
199.241 146.78 202.642 144.141 205.127 141.416 cv
219.468 149.749 li
216.982 152.474 213.581 155.114 209.924 157.225 cv
208.045 158.31 206.096 159.256 204.17 160.002 cv
198.708 162.119 194.268 162.336 191.406 160.673 cv
cp
clp
191.406 160.673 mo
177.066 152.339 li
179.094 153.518 181.914 153.752 185.329 153.036 cv
199.669 161.369 li
196.254 162.086 193.434 161.851 191.406 160.673 cv
cp
f
199.669 161.369 mo
185.329 153.036 li
186.733 152.741 188.238 152.285 189.83 151.669 cv
191.756 150.923 193.704 149.977 195.584 148.891 cv
199.241 146.78 202.642 144.141 205.127 141.416 cv
219.468 149.749 li
216.982 152.474 213.581 155.114 209.924 157.225 cv
208.045 158.31 206.096 159.256 204.17 160.002 cv
202.578 160.619 201.073 161.075 199.669 161.369 cv
cp
f
grestore
191.333 160.798 mo
176.993 152.465 li
176.453 152.151 175.969 151.771 175.545 151.325 cv
173.584 149.267 172.418 145.696 172.346 141.529 cv
172.27 137.169 173.373 132.8 175.452 129.225 cv
177.437 125.81 180.583 123 183.353 121.4 cv
184.167 120.931 184.946 120.566 185.656 120.321 cv
191.326 118.358 195.722 118.046 199.491 119.337 cv
200.823 119.794 202.076 120.365 203.235 121.039 cv
217.575 129.373 li
216.416 128.699 215.163 128.127 213.831 127.671 cv
210.062 126.379 205.666 126.692 199.996 128.654 cv
199.286 128.9 198.506 129.265 197.694 129.734 cv
194.923 131.333 191.777 134.144 189.792 137.558 cv
187.713 141.133 186.61 145.503 186.686 149.862 cv
186.759 154.029 187.924 157.601 189.884 159.659 cv
190.309 160.105 190.793 160.484 191.333 160.798 cv
cp
.992157 .854902 .298039 rgb
f
gsave
191.333 160.798 mo
176.993 152.465 li
176.453 152.151 175.969 151.771 175.545 151.325 cv
173.584 149.267 172.418 145.696 172.346 141.529 cv
172.27 137.169 173.373 132.8 175.452 129.225 cv
177.437 125.81 180.583 123 183.353 121.4 cv
184.167 120.931 184.946 120.566 185.656 120.321 cv
191.326 118.358 195.722 118.046 199.491 119.337 cv
200.823 119.794 202.076 120.365 203.235 121.039 cv
217.575 129.373 li
216.416 128.699 215.163 128.127 213.831 127.671 cv
210.062 126.379 205.666 126.692 199.996 128.654 cv
199.286 128.9 198.506 129.265 197.694 129.734 cv
194.923 131.333 191.777 134.144 189.792 137.558 cv
187.713 141.133 186.61 145.503 186.686 149.862 cv
186.759 154.029 187.924 157.601 189.884 159.659 cv
190.309 160.105 190.793 160.484 191.333 160.798 cv
cp
clp
191.333 160.798 mo
176.993 152.465 li
176.453 152.151 175.969 151.771 175.545 151.325 cv
173.584 149.267 172.418 145.696 172.346 141.529 cv
172.27 137.169 173.373 132.8 175.452 129.225 cv
175.983 128.311 176.598 127.44 177.266 126.625 cv
191.606 134.958 li
190.938 135.774 190.323 136.644 189.792 137.558 cv
187.713 141.133 186.61 145.503 186.686 149.862 cv
186.759 154.029 187.924 157.601 189.884 159.659 cv
190.309 160.105 190.793 160.484 191.333 160.798 cv
cp
f
191.606 134.958 mo
177.266 126.625 li
179.094 124.393 181.324 122.572 183.353 121.4 cv
184.167 120.931 184.946 120.566 185.656 120.321 cv
187.225 119.777 188.697 119.361 190.084 119.069 cv
204.424 127.403 li
203.037 127.694 201.565 128.111 199.996 128.654 cv
199.286 128.9 198.506 129.265 197.694 129.734 cv
195.665 130.905 193.434 132.726 191.606 134.958 cv
cp
f
204.424 127.403 mo
190.084 119.069 li
193.711 118.308 196.765 118.403 199.491 119.337 cv
200.823 119.794 202.076 120.365 203.235 121.039 cv
217.575 129.373 li
216.416 128.699 215.163 128.127 213.831 127.671 cv
211.105 126.737 208.051 126.642 204.424 127.403 cv
cp
f
grestore
219.468 149.749 mo
224.396 144.345 226.058 139.944 224.407 136.668 cv
222.358 132.599 218.578 129.45 213.766 127.802 cv
210.012 126.513 205.63 126.825 199.976 128.782 cv
199.272 129.025 198.497 129.388 197.69 129.854 cv
194.945 131.439 191.829 134.221 189.865 137.6 cv
187.806 141.141 186.713 145.474 186.789 149.8 cv
186.861 153.944 188.02 157.494 189.969 159.542 cv
192.642 162.351 197.686 162.515 204.17 160.002 cv
206.096 159.256 208.045 158.31 209.924 157.225 cv
213.581 155.114 216.982 152.474 219.468 149.749 cv
cp
224.502 136.565 mo
226.181 139.897 224.501 144.36 219.51 149.832 cv
217.012 152.571 213.595 155.224 209.923 157.344 cv
208.038 158.433 206.084 159.381 204.154 160.129 cv
197.643 162.652 192.575 162.485 189.884 159.659 cv
187.924 157.601 186.759 154.029 186.686 149.862 cv
186.61 145.503 187.713 141.133 189.792 137.558 cv
191.777 134.144 194.923 131.333 197.694 129.734 cv
198.506 129.265 199.286 128.9 199.996 128.654 cv
205.666 126.692 210.062 126.379 213.831 127.671 cv
218.655 129.324 222.445 132.484 224.502 136.565 cv
cp
.980392 .678431 .00784314 rgb
f
120.602 222.489 mo
116.068 219.854 li
115.184 218.003 115.841 214.526 117.822 210.559 cv
120.252 205.693 123.83 201.183 127.637 198.188 cv
132.171 200.822 li
128.364 203.818 124.785 208.327 122.355 213.193 cv
120.374 217.161 119.718 220.637 120.602 222.489 cv
cp
.992157 .827451 .0117647 rgb
f
132.171 200.822 mo
132.199 200.978 li
128.426 203.947 124.881 208.415 122.473 213.235 cv
120.528 217.132 119.881 220.534 120.741 222.339 cv
120.602 222.489 li
119.718 220.637 120.374 217.161 122.355 213.193 cv
124.785 208.327 128.364 203.818 132.171 200.822 cv
cp
f
179.874 110.766 mo
175.341 108.131 li
175.457 108.177 li
179.991 110.812 li
179.874 110.766 li
cp
f
169.329 117.287 mo
164.795 114.652 li
165.991 115.347 167.61 115.312 169.305 114.496 cv
169.493 114.405 169.683 114.305 169.872 114.196 cv
171.946 112.998 174.002 110.732 175.341 108.131 cv
179.874 110.766 li
178.536 113.367 176.48 115.633 174.405 116.831 cv
174.216 116.94 174.027 117.04 173.839 117.131 cv
172.144 117.947 170.524 117.982 169.329 117.287 cv
cp
f
169.221 117.472 mo
164.687 114.837 li
164.278 114.599 163.917 114.277 163.618 113.874 cv
168.152 116.508 li
168.45 116.912 168.811 117.234 169.221 117.472 cv
cp
f
168.152 116.508 mo
163.618 113.874 li
163.748 113.709 li
168.281 116.343 li
168.152 116.508 li
cp
f
168.281 116.343 mo
169.446 117.918 171.575 118.22 173.839 117.131 cv
174.027 117.04 174.216 116.94 174.405 116.831 cv
176.48 115.633 178.536 113.367 179.874 110.766 cv
179.991 110.812 li
178.623 113.469 176.525 115.783 174.405 117.007 cv
174.211 117.119 174.018 117.221 173.825 117.313 cv
171.515 118.425 169.341 118.116 168.152 116.508 cv
168.281 116.343 li
cp
f
144.7 142.774 mo
149.597 144.649 li
149.721 144.673 li
144.824 142.798 li
144.7 142.774 li
cp
1 .196078 .384314 rgb
f
157.179 137.647 mo
152.283 135.772 li
151.96 135.648 151.601 135.613 151.249 135.656 cv
148.821 135.951 145.999 139.088 144.824 142.798 cv
149.721 144.673 li
150.896 140.962 153.718 137.826 156.146 137.531 cv
156.498 137.488 156.857 137.523 157.179 137.647 cv
cp
f
157.253 137.447 mo
152.356 135.572 li
152.94 135.795 153.413 136.298 153.544 137.136 cv
158.44 139.011 li
158.31 138.173 157.837 137.67 157.253 137.447 cv
cp
f
153.44 137.776 mo
158.337 139.651 li
158.476 139.584 li
153.579 137.709 li
153.44 137.776 li
cp
f
153.579 137.709 mo
158.476 139.584 li
158.481 139.378 158.468 139.187 158.44 139.011 cv
153.544 137.136 li
153.571 137.312 153.584 137.503 153.579 137.709 cv
cp
f
153.544 137.136 mo
153.338 135.82 152.287 135.33 151.289 135.452 cv
148.8 135.754 145.905 138.97 144.7 142.774 cv
144.824 142.798 li
145.999 139.088 148.821 135.951 151.249 135.656 cv
152.206 135.539 153.213 136 153.407 137.243 cv
153.433 137.407 153.445 137.585 153.44 137.776 cv
153.579 137.709 li
153.584 137.503 153.571 137.312 153.544 137.136 cv
cp
f
119.222 157.688 mo
114.689 155.054 li
113.705 153.474 113.461 151.042 114.021 148.382 cv
114.58 145.723 115.934 142.882 117.734 140.587 cv
122.268 143.221 li
120.467 145.516 119.113 148.357 118.555 151.017 cv
117.994 153.677 118.239 156.109 119.222 157.688 cv
cp
f
122.268 143.221 mo
122.346 143.325 li
120.58 145.578 119.251 148.368 118.701 150.979 cv
118.152 153.591 118.391 155.979 119.358 157.53 cv
119.222 157.688 li
118.239 156.109 117.994 153.677 118.555 151.017 cv
119.113 148.357 120.467 145.516 122.268 143.221 cv
cp
f
273.877 99.9467 mo
269.343 97.3123 li
268.36 95.7324 268.116 93.3006 268.676 90.6406 cv
269.234 87.9813 270.588 85.1403 272.389 82.845 cv
276.922 85.4795 li
275.122 87.7751 273.768 90.6157 273.209 93.275 cv
272.649 95.9351 272.893 98.3672 273.877 99.9467 cv
cp
f
276.922 85.4795 mo
277.001 85.5838 li
275.234 87.8361 273.905 90.6266 273.356 93.2376 cv
272.806 95.8489 273.045 98.237 274.012 99.7886 cv
273.877 99.9467 li
272.893 98.3672 272.649 95.9351 273.209 93.275 cv
273.768 90.6157 275.122 87.7751 276.922 85.4795 cv
cp
f
174.981 174.684 mo
172.778 173.404 li
172.708 173.363 172.617 173.356 172.508 173.394 cv
174.711 174.674 li
174.82 174.636 174.911 174.643 174.981 174.684 cv
cp
1 .768627 0 rgb
f
gsave
174.981 174.684 mo
172.778 173.404 li
172.708 173.363 172.617 173.356 172.508 173.394 cv
174.711 174.674 li
174.82 174.636 174.911 174.643 174.981 174.684 cv
cp
clp
174.981 174.684 mo
172.778 173.404 li
172.708 173.363 172.617 173.356 172.508 173.394 cv
174.711 174.674 li
174.82 174.636 174.911 174.643 174.981 174.684 cv
cp
f
grestore
162.146 188.682 mo
164.348 189.963 li
164.242 189.901 164.18 189.761 164.199 189.553 cv
161.996 188.272 li
161.977 188.481 162.04 188.62 162.146 188.682 cv
cp
f
gsave
162.146 188.682 mo
164.348 189.963 li
164.242 189.901 164.18 189.761 164.199 189.553 cv
161.996 188.272 li
161.977 188.481 162.04 188.62 162.146 188.682 cv
cp
clp
164.199 189.553 mo
161.996 188.272 li
161.977 188.481 162.04 188.62 162.146 188.682 cv
164.348 189.963 li
164.242 189.901 164.18 189.761 164.199 189.553 cv
cp
f
grestore
174.711 174.674 mo
172.508 173.394 li
168.898 174.641 li
171.101 175.921 li
174.711 174.674 li
cp
f
168.628 174.629 mo
170.83 175.909 li
170.903 175.952 170.997 175.957 171.101 175.921 cv
168.898 174.641 li
168.795 174.677 168.701 174.672 168.628 174.629 cv
cp
f
gsave
168.628 174.629 mo
170.83 175.909 li
170.903 175.952 170.997 175.957 171.101 175.921 cv
168.898 174.641 li
168.795 174.677 168.701 174.672 168.628 174.629 cv
cp
clp
171.101 175.921 mo
168.898 174.641 li
168.795 174.677 168.701 174.672 168.628 174.629 cv
170.83 175.909 li
170.903 175.952 170.997 175.957 171.101 175.921 cv
cp
f
grestore
164.611 185.109 mo
162.408 183.829 li
161.996 188.272 li
164.199 189.553 li
164.611 185.109 li
cp
f
164.473 184.707 mo
162.271 183.427 li
162.375 183.497 162.425 183.643 162.408 183.829 cv
164.611 185.109 li
164.628 184.923 164.577 184.777 164.473 184.707 cv
cp
f
gsave
164.473 184.707 mo
162.271 183.427 li
162.375 183.497 162.425 183.643 162.408 183.829 cv
164.611 185.109 li
164.628 184.923 164.577 184.777 164.473 184.707 cv
cp
clp
164.473 184.707 mo
162.271 183.427 li
162.375 183.497 162.425 183.643 162.408 183.829 cv
164.611 185.109 li
164.628 184.923 164.577 184.777 164.473 184.707 cv
cp
f
grestore
166.214 178.445 mo
164.012 177.165 li
163.936 177.363 163.807 177.546 163.657 177.667 cv
165.859 178.948 li
166.01 178.826 166.139 178.643 166.214 178.445 cv
cp
f
gsave
166.214 178.445 mo
164.012 177.165 li
163.936 177.363 163.807 177.546 163.657 177.667 cv
165.859 178.948 li
166.01 178.826 166.139 178.643 166.214 178.445 cv
cp
clp
166.214 178.445 mo
164.012 177.165 li
163.936 177.363 163.807 177.546 163.657 177.667 cv
165.859 178.948 li
166.01 178.826 166.139 178.643 166.214 178.445 cv
cp
f
grestore
168.843 173.107 mo
166.64 171.827 li
166.538 171.767 166.401 171.787 166.265 171.865 cv
168.468 173.145 li
168.604 173.067 168.741 173.047 168.843 173.107 cv
cp
f
gsave
168.843 173.107 mo
166.64 171.827 li
166.538 171.767 166.401 171.787 166.265 171.865 cv
168.468 173.145 li
168.604 173.067 168.741 173.047 168.843 173.107 cv
cp
clp
168.843 173.107 mo
166.64 171.827 li
166.538 171.767 166.401 171.787 166.265 171.865 cv
168.468 173.145 li
168.604 173.067 168.741 173.047 168.843 173.107 cv
cp
f
grestore
168.01 173.719 mo
165.807 172.439 li
164.012 177.165 li
166.214 178.445 li
168.01 173.719 li
cp
f
168.468 173.145 mo
166.265 171.865 li
166.086 171.969 165.907 172.175 165.807 172.439 cv
168.01 173.719 li
168.11 173.455 168.289 173.249 168.468 173.145 cv
cp
f
gsave
168.468 173.145 mo
166.265 171.865 li
166.086 171.969 165.907 172.175 165.807 172.439 cv
168.01 173.719 li
168.11 173.455 168.289 173.249 168.468 173.145 cv
cp
clp
168.468 173.145 mo
166.265 171.865 li
166.086 171.969 165.907 172.175 165.807 172.439 cv
168.01 173.719 li
168.11 173.455 168.289 173.249 168.468 173.145 cv
cp
f
grestore
161.974 183.033 mo
159.771 181.753 li
162.271 183.427 li
164.473 184.707 li
161.974 183.033 li
cp
f
165.859 178.948 mo
163.657 177.667 li
160.053 180.585 li
162.255 181.865 li
165.859 178.948 li
cp
f
168.468 173.145 mo
168.289 173.249 168.11 173.455 168.01 173.719 cv
166.214 178.445 li
166.139 178.643 166.01 178.826 165.859 178.948 cv
162.255 181.865 li
161.853 182.191 161.694 182.846 161.974 183.033 cv
164.473 184.707 li
164.577 184.777 164.628 184.923 164.611 185.109 cv
164.199 189.553 li
164.162 189.952 164.426 190.1 164.725 189.928 cv
164.945 189.745 li
168.285 186.053 li
168.504 185.871 li
168.724 185.799 li
172.074 185.628 li
172.294 185.557 li
172.593 185.385 172.855 184.933 172.816 184.577 cv
172.381 180.623 li
172.363 180.457 172.412 180.254 172.516 180.063 cv
174.998 175.514 li
175.275 175.006 175.113 174.535 174.711 174.674 cv
171.101 175.921 li
170.951 175.973 170.821 175.94 170.745 175.83 cv
168.929 173.188 li
168.827 173.041 168.647 173.042 168.468 173.145 cv
cp
1 .831373 .219608 rgb
f
162.255 181.865 mo
160.053 180.585 li
159.65 180.911 159.492 181.566 159.771 181.753 cv
161.974 183.033 li
161.694 182.846 161.853 182.191 162.255 181.865 cv
cp
1 .768627 0 rgb
f
gsave
162.255 181.865 mo
160.053 180.585 li
159.65 180.911 159.492 181.566 159.771 181.753 cv
161.974 183.033 li
161.694 182.846 161.853 182.191 162.255 181.865 cv
cp
clp
162.255 181.865 mo
160.053 180.585 li
159.65 180.911 159.492 181.566 159.771 181.753 cv
161.974 183.033 li
161.694 182.846 161.853 182.191 162.255 181.865 cv
cp
f
grestore
140.089 153.216 mo
138.926 152.54 li
138.783 152.535 li
139.946 153.211 li
140.089 153.216 li
cp
f
gsave
140.089 153.216 mo
138.926 152.54 li
138.783 152.535 li
139.946 153.211 li
140.089 153.216 li
cp
clp
140.089 153.216 mo
138.926 152.54 li
138.783 152.535 li
139.946 153.211 li
140.089 153.216 li
cp
f
grestore
133.308 160.612 mo
134.472 161.288 li
134.416 161.256 134.383 161.182 134.393 161.072 cv
133.229 160.395 li
133.219 160.505 133.252 160.579 133.308 160.612 cv
cp
f
gsave
133.308 160.612 mo
134.472 161.288 li
134.416 161.256 134.383 161.182 134.393 161.072 cv
133.229 160.395 li
133.219 160.505 133.252 160.579 133.308 160.612 cv
cp
clp
134.393 161.072 mo
133.229 160.395 li
133.219 160.505 133.252 160.579 133.308 160.612 cv
134.472 161.288 li
134.416 161.256 134.383 161.182 134.393 161.072 cv
cp
f
grestore
139.946 153.211 mo
138.783 152.535 li
136.875 153.194 li
138.039 153.87 li
139.946 153.211 li
cp
f
136.732 153.187 mo
137.896 153.864 li
138.039 153.87 li
136.875 153.194 li
136.732 153.187 li
cp
f
gsave
136.732 153.187 mo
137.896 153.864 li
138.039 153.87 li
136.875 153.194 li
136.732 153.187 li
cp
clp
138.039 153.87 mo
136.875 153.194 li
136.732 153.187 li
137.896 153.864 li
138.039 153.87 li
cp
f
grestore
134.61 158.724 mo
133.447 158.048 li
133.229 160.395 li
134.393 161.072 li
134.61 158.724 li
cp
f
134.538 158.512 mo
133.374 157.835 li
133.429 157.872 133.456 157.95 133.447 158.048 cv
134.61 158.724 li
134.619 158.626 134.593 158.549 134.538 158.512 cv
cp
f
gsave
134.538 158.512 mo
133.374 157.835 li
133.429 157.872 133.456 157.95 133.447 158.048 cv
134.61 158.724 li
134.619 158.626 134.593 158.549 134.538 158.512 cv
cp
clp
134.538 158.512 mo
133.374 157.835 li
133.429 157.872 133.456 157.95 133.447 158.048 cv
134.61 158.724 li
134.619 158.626 134.593 158.549 134.538 158.512 cv
cp
f
grestore
135.458 155.204 mo
134.294 154.528 li
134.254 154.631 134.186 154.728 134.106 154.792 cv
135.27 155.469 li
135.349 155.404 135.418 155.308 135.458 155.204 cv
cp
f
gsave
135.458 155.204 mo
134.294 154.528 li
134.254 154.631 134.186 154.728 134.106 154.792 cv
135.27 155.469 li
135.349 155.404 135.418 155.308 135.458 155.204 cv
cp
clp
135.458 155.204 mo
134.294 154.528 li
134.254 154.631 134.186 154.728 134.106 154.792 cv
135.27 155.469 li
135.349 155.404 135.418 155.308 135.458 155.204 cv
cp
f
grestore
136.846 152.383 mo
135.682 151.707 li
135.485 151.727 li
136.648 152.403 li
136.846 152.383 li
cp
f
gsave
136.846 152.383 mo
135.682 151.707 li
135.485 151.727 li
136.648 152.403 li
136.846 152.383 li
cp
clp
136.846 152.383 mo
135.682 151.707 li
135.485 151.727 li
136.648 152.403 li
136.846 152.383 li
cp
f
grestore
136.406 152.706 mo
135.242 152.03 li
134.294 154.528 li
135.458 155.204 li
136.406 152.706 li
cp
f
136.648 152.403 mo
135.485 151.727 li
135.39 151.782 135.295 151.891 135.242 152.03 cv
136.406 152.706 li
136.459 152.567 136.554 152.458 136.648 152.403 cv
cp
f
gsave
136.648 152.403 mo
135.485 151.727 li
135.39 151.782 135.295 151.891 135.242 152.03 cv
136.406 152.706 li
136.459 152.567 136.554 152.458 136.648 152.403 cv
cp
clp
136.648 152.403 mo
135.485 151.727 li
135.39 151.782 135.295 151.891 135.242 152.03 cv
136.406 152.706 li
136.459 152.567 136.554 152.458 136.648 152.403 cv
cp
f
grestore
133.217 157.627 mo
132.054 156.951 li
133.374 157.835 li
134.538 158.512 li
133.217 157.627 li
cp
f
135.27 155.469 mo
134.106 154.792 li
132.202 156.334 li
133.366 157.01 li
135.27 155.469 li
cp
f
136.648 152.403 mo
136.554 152.458 136.459 152.567 136.406 152.706 cv
135.458 155.204 li
135.418 155.308 135.349 155.404 135.27 155.469 cv
133.366 157.01 li
133.153 157.182 133.07 157.529 133.217 157.627 cv
134.538 158.512 li
134.593 158.549 134.619 158.626 134.61 158.724 cv
134.393 161.072 li
134.373 161.283 134.513 161.361 134.671 161.27 cv
134.787 161.173 li
136.551 159.223 li
136.667 159.127 li
136.783 159.089 li
138.553 158.998 li
138.67 158.961 li
138.828 158.87 138.966 158.631 138.945 158.443 cv
138.715 156.354 li
138.706 156.267 138.732 156.159 138.786 156.058 cv
140.098 153.655 li
140.244 153.386 140.159 153.138 139.946 153.211 cv
138.039 153.87 li
137.851 153.822 li
136.892 152.426 li
136.838 152.348 136.743 152.349 136.648 152.403 cv
cp
1 .831373 .219608 rgb
f
133.366 157.01 mo
132.202 156.334 li
131.99 156.506 131.906 156.852 132.054 156.951 cv
133.217 157.627 li
133.07 157.529 133.153 157.182 133.366 157.01 cv
cp
1 .768627 0 rgb
f
gsave
133.366 157.01 mo
132.202 156.334 li
131.99 156.506 131.906 156.852 132.054 156.951 cv
133.217 157.627 li
133.07 157.529 133.153 157.182 133.366 157.01 cv
cp
clp
133.366 157.01 mo
132.202 156.334 li
131.99 156.506 131.906 156.852 132.054 156.951 cv
133.217 157.627 li
133.07 157.529 133.153 157.182 133.366 157.01 cv
cp
f
grestore
144.288 127.813 mo
142.552 126.804 li
142.339 126.796 li
144.075 127.805 li
144.288 127.813 li
cp
f
gsave
144.288 127.813 mo
142.552 126.804 li
142.339 126.796 li
144.075 127.805 li
144.288 127.813 li
cp
clp
144.288 127.813 mo
142.552 126.804 li
142.339 126.796 li
144.075 127.805 li
144.288 127.813 li
cp
f
grestore
134.174 138.844 mo
135.91 139.852 li
135.826 139.804 135.776 139.693 135.792 139.529 cv
134.056 138.521 li
134.041 138.685 134.09 138.795 134.174 138.844 cv
cp
f
gsave
134.174 138.844 mo
135.91 139.852 li
135.826 139.804 135.776 139.693 135.792 139.529 cv
134.056 138.521 li
134.041 138.685 134.09 138.795 134.174 138.844 cv
cp
clp
135.792 139.529 mo
134.056 138.521 li
134.041 138.685 134.09 138.795 134.174 138.844 cv
135.91 139.852 li
135.826 139.804 135.776 139.693 135.792 139.529 cv
cp
f
grestore
144.075 127.805 mo
142.339 126.796 li
139.495 127.779 li
141.231 128.787 li
144.075 127.805 li
cp
f
139.281 127.77 mo
141.017 128.778 li
141.231 128.787 li
139.495 127.779 li
139.281 127.77 li
cp
f
gsave
139.281 127.77 mo
141.017 128.778 li
141.231 128.787 li
139.495 127.779 li
139.281 127.77 li
cp
clp
141.231 128.787 mo
139.495 127.779 li
139.281 127.77 li
141.017 128.778 li
141.231 128.787 li
cp
f
grestore
136.116 136.028 mo
134.38 135.019 li
134.056 138.521 li
135.792 139.529 li
136.116 136.028 li
cp
f
136.008 135.711 mo
134.272 134.702 li
134.354 134.757 134.394 134.873 134.38 135.019 cv
136.116 136.028 li
136.129 135.881 136.09 135.766 136.008 135.711 cv
cp
f
gsave
136.008 135.711 mo
134.272 134.702 li
134.354 134.757 134.394 134.873 134.38 135.019 cv
136.116 136.028 li
136.129 135.881 136.09 135.766 136.008 135.711 cv
cp
clp
136.008 135.711 mo
134.272 134.702 li
134.354 134.757 134.394 134.873 134.38 135.019 cv
136.116 136.028 li
136.129 135.881 136.09 135.766 136.008 135.711 cv
cp
f
grestore
137.38 130.777 mo
135.644 129.768 li
135.585 129.924 135.483 130.067 135.364 130.164 cv
137.1 131.172 li
137.219 131.076 137.32 130.932 137.38 130.777 cv
cp
f
gsave
137.38 130.777 mo
135.644 129.768 li
135.585 129.924 135.483 130.067 135.364 130.164 cv
137.1 131.172 li
137.219 131.076 137.32 130.932 137.38 130.777 cv
cp
clp
137.38 130.777 mo
135.644 129.768 li
135.585 129.924 135.483 130.067 135.364 130.164 cv
137.1 131.172 li
137.219 131.076 137.32 130.932 137.38 130.777 cv
cp
f
grestore
139.451 126.57 mo
137.715 125.561 li
137.635 125.514 137.527 125.53 137.42 125.592 cv
139.156 126.6 li
139.263 126.538 139.37 126.523 139.451 126.57 cv
cp
f
gsave
139.451 126.57 mo
137.715 125.561 li
137.635 125.514 137.527 125.53 137.42 125.592 cv
139.156 126.6 li
139.263 126.538 139.37 126.523 139.451 126.57 cv
cp
clp
139.451 126.57 mo
137.715 125.561 li
137.635 125.514 137.527 125.53 137.42 125.592 cv
139.156 126.6 li
139.263 126.538 139.37 126.523 139.451 126.57 cv
cp
f
grestore
138.795 127.052 mo
137.059 126.043 li
135.644 129.768 li
137.38 130.777 li
138.795 127.052 li
cp
f
139.156 126.6 mo
137.42 125.592 li
137.279 125.673 137.138 125.836 137.059 126.043 cv
138.795 127.052 li
138.873 126.845 139.014 126.682 139.156 126.6 cv
cp
f
gsave
139.156 126.6 mo
137.42 125.592 li
137.279 125.673 137.138 125.836 137.059 126.043 cv
138.795 127.052 li
138.873 126.845 139.014 126.682 139.156 126.6 cv
cp
clp
139.156 126.6 mo
137.42 125.592 li
137.279 125.673 137.138 125.836 137.059 126.043 cv
138.795 127.052 li
138.873 126.845 139.014 126.682 139.156 126.6 cv
cp
f
grestore
134.038 134.392 mo
132.303 133.383 li
134.272 134.702 li
136.008 135.711 li
134.038 134.392 li
cp
f
137.1 131.172 mo
135.364 130.164 li
132.524 132.463 li
134.26 133.471 li
137.1 131.172 li
cp
f
139.156 126.6 mo
139.014 126.682 138.873 126.845 138.795 127.052 cv
137.38 130.777 li
137.32 130.932 137.219 131.076 137.1 131.172 cv
134.26 133.471 li
133.943 133.728 133.818 134.245 134.038 134.392 cv
136.008 135.711 li
136.09 135.766 136.129 135.881 136.116 136.028 cv
135.792 139.529 li
135.763 139.844 135.97 139.961 136.206 139.825 cv
136.379 139.68 li
139.011 136.772 li
139.184 136.628 li
139.357 136.572 li
141.997 136.437 li
142.171 136.381 li
142.406 136.245 142.613 135.889 142.582 135.609 cv
142.239 132.493 li
142.225 132.362 142.263 132.202 142.345 132.052 cv
144.301 128.467 li
144.52 128.066 144.392 127.695 144.075 127.805 cv
141.231 128.787 li
141.112 128.828 141.01 128.802 140.95 128.715 cv
139.519 126.634 li
139.439 126.518 139.297 126.519 139.156 126.6 cv
cp
1 .831373 .219608 rgb
f
134.26 133.471 mo
132.524 132.463 li
132.207 132.72 132.082 133.236 132.303 133.383 cv
134.038 134.392 li
133.818 134.245 133.943 133.728 134.26 133.471 cv
cp
1 .768627 0 rgb
f
gsave
134.26 133.471 mo
132.524 132.463 li
132.207 132.72 132.082 133.236 132.303 133.383 cv
134.038 134.392 li
133.818 134.245 133.943 133.728 134.26 133.471 cv
cp
clp
134.26 133.471 mo
132.524 132.463 li
132.207 132.72 132.082 133.236 132.303 133.383 cv
134.038 134.392 li
133.818 134.245 133.943 133.728 134.26 133.471 cv
cp
f
grestore
117.041 165.997 mo
114.626 164.594 li
114.55 164.549 114.45 164.541 114.33 164.582 cv
116.745 165.986 li
116.865 165.945 116.965 165.953 117.041 165.997 cv
cp
f
gsave
117.041 165.997 mo
114.626 164.594 li
114.55 164.549 114.45 164.541 114.33 164.582 cv
116.745 165.986 li
116.865 165.945 116.965 165.953 117.041 165.997 cv
cp
clp
117.041 165.997 mo
114.626 164.594 li
114.55 164.549 114.45 164.541 114.33 164.582 cv
116.745 165.986 li
116.865 165.945 116.965 165.953 117.041 165.997 cv
cp
f
grestore
102.969 181.344 mo
105.384 182.748 li
105.268 182.68 105.199 182.527 105.22 182.299 cv
102.806 180.895 li
102.785 181.123 102.852 181.277 102.969 181.344 cv
cp
f
gsave
102.969 181.344 mo
105.384 182.748 li
105.268 182.68 105.199 182.527 105.22 182.299 cv
102.806 180.895 li
102.785 181.123 102.852 181.277 102.969 181.344 cv
cp
clp
105.22 182.299 mo
102.806 180.895 li
102.785 181.123 102.852 181.277 102.969 181.344 cv
105.384 182.748 li
105.268 182.68 105.199 182.527 105.22 182.299 cv
cp
f
grestore
116.745 165.986 mo
114.33 164.582 li
110.373 165.95 li
112.788 167.353 li
116.745 165.986 li
cp
f
110.075 165.937 mo
112.491 167.341 li
112.57 167.387 112.674 167.392 112.788 167.353 cv
110.373 165.95 li
110.259 165.989 110.156 165.984 110.075 165.937 cv
cp
f
gsave
110.075 165.937 mo
112.491 167.341 li
112.57 167.387 112.674 167.392 112.788 167.353 cv
110.373 165.95 li
110.259 165.989 110.156 165.984 110.075 165.937 cv
cp
clp
112.788 167.353 mo
110.373 165.95 li
110.259 165.989 110.156 165.984 110.075 165.937 cv
112.491 167.341 li
112.57 167.387 112.674 167.392 112.788 167.353 cv
cp
f
grestore
105.671 177.427 mo
103.256 176.023 li
102.806 180.895 li
105.22 182.299 li
105.671 177.427 li
cp
f
105.521 176.986 mo
103.106 175.582 li
103.22 175.659 103.275 175.82 103.256 176.023 cv
105.671 177.427 li
105.69 177.223 105.635 177.063 105.521 176.986 cv
cp
f
gsave
105.521 176.986 mo
103.106 175.582 li
103.22 175.659 103.275 175.82 103.256 176.023 cv
105.671 177.427 li
105.69 177.223 105.635 177.063 105.521 176.986 cv
cp
clp
105.521 176.986 mo
103.106 175.582 li
103.22 175.659 103.275 175.82 103.256 176.023 cv
105.671 177.427 li
105.69 177.223 105.635 177.063 105.521 176.986 cv
cp
f
grestore
107.43 170.121 mo
105.015 168.718 li
104.932 168.934 104.79 169.134 104.625 169.268 cv
107.041 170.671 li
107.205 170.538 107.347 170.337 107.43 170.121 cv
cp
f
gsave
107.43 170.121 mo
105.015 168.718 li
104.932 168.934 104.79 169.134 104.625 169.268 cv
107.041 170.671 li
107.205 170.538 107.347 170.337 107.43 170.121 cv
cp
clp
107.43 170.121 mo
105.015 168.718 li
104.932 168.934 104.79 169.134 104.625 169.268 cv
107.041 170.671 li
107.205 170.538 107.347 170.337 107.43 170.121 cv
cp
f
grestore
110.312 164.268 mo
107.897 162.864 li
107.784 162.799 107.635 162.82 107.486 162.907 cv
109.901 164.31 li
110.05 164.224 110.199 164.203 110.312 164.268 cv
cp
f
gsave
110.312 164.268 mo
107.897 162.864 li
107.784 162.799 107.635 162.82 107.486 162.907 cv
109.901 164.31 li
110.05 164.224 110.199 164.203 110.312 164.268 cv
cp
clp
110.312 164.268 mo
107.897 162.864 li
107.784 162.799 107.635 162.82 107.486 162.907 cv
109.901 164.31 li
110.05 164.224 110.199 164.203 110.312 164.268 cv
cp
f
grestore
109.398 164.939 mo
106.983 163.536 li
105.015 168.718 li
107.43 170.121 li
109.398 164.939 li
cp
f
109.901 164.31 mo
107.486 162.907 li
107.289 163.02 107.093 163.246 106.983 163.536 cv
109.398 164.939 li
109.508 164.65 109.704 164.424 109.901 164.31 cv
cp
f
gsave
109.901 164.31 mo
107.486 162.907 li
107.289 163.02 107.093 163.246 106.983 163.536 cv
109.398 164.939 li
109.508 164.65 109.704 164.424 109.901 164.31 cv
cp
clp
109.901 164.31 mo
107.486 162.907 li
107.289 163.02 107.093 163.246 106.983 163.536 cv
109.398 164.939 li
109.508 164.65 109.704 164.424 109.901 164.31 cv
cp
f
grestore
102.781 175.151 mo
100.366 173.747 li
103.106 175.582 li
105.521 176.986 li
102.781 175.151 li
cp
f
107.041 170.671 mo
104.625 169.268 li
100.674 172.467 li
103.089 173.87 li
107.041 170.671 li
cp
f
109.901 164.31 mo
109.704 164.424 109.508 164.65 109.398 164.939 cv
107.43 170.121 li
107.347 170.337 107.205 170.538 107.041 170.671 cv
103.089 173.87 li
102.648 174.228 102.474 174.946 102.781 175.151 cv
105.521 176.986 li
105.635 177.063 105.69 177.223 105.671 177.427 cv
105.22 182.299 li
105.18 182.737 105.469 182.899 105.797 182.709 cv
106.038 182.509 li
109.699 178.462 li
109.94 178.262 li
110.182 178.184 li
113.854 177.996 li
114.096 177.918 li
114.423 177.729 114.711 177.234 114.668 176.844 cv
114.191 172.508 li
114.171 172.327 114.225 172.103 114.338 171.895 cv
117.06 166.907 li
117.363 166.35 117.186 165.834 116.745 165.986 cv
112.788 167.353 li
112.623 167.41 112.48 167.374 112.397 167.253 cv
110.406 164.357 li
110.294 164.196 110.097 164.197 109.901 164.31 cv
cp
1 .831373 .219608 rgb
f
103.089 173.87 mo
100.674 172.467 li
100.232 172.824 100.059 173.543 100.366 173.747 cv
102.781 175.151 li
102.474 174.946 102.648 174.228 103.089 173.87 cv
cp
1 .768627 0 rgb
f
gsave
103.089 173.87 mo
100.674 172.467 li
100.232 172.824 100.059 173.543 100.366 173.747 cv
102.781 175.151 li
102.474 174.946 102.648 174.228 103.089 173.87 cv
cp
clp
103.089 173.87 mo
100.674 172.467 li
100.232 172.824 100.059 173.543 100.366 173.747 cv
102.781 175.151 li
102.474 174.946 102.648 174.228 103.089 173.87 cv
cp
f
grestore
149.121 186.285 mo
147.686 185.451 li
147.51 185.444 li
148.945 186.278 li
149.121 186.285 li
cp
f
gsave
149.121 186.285 mo
147.686 185.451 li
147.51 185.444 li
148.945 186.278 li
149.121 186.285 li
cp
clp
149.121 186.285 mo
147.686 185.451 li
147.51 185.444 li
148.945 186.278 li
149.121 186.285 li
cp
f
grestore
140.758 195.406 mo
142.193 196.24 li
142.124 196.2 142.083 196.109 142.096 195.973 cv
140.66 195.139 li
140.648 195.275 140.689 195.366 140.758 195.406 cv
cp
f
gsave
140.758 195.406 mo
142.193 196.24 li
142.124 196.2 142.083 196.109 142.096 195.973 cv
140.66 195.139 li
140.648 195.275 140.689 195.366 140.758 195.406 cv
cp
clp
142.096 195.973 mo
140.66 195.139 li
140.648 195.275 140.689 195.366 140.758 195.406 cv
142.193 196.24 li
142.124 196.2 142.083 196.109 142.096 195.973 cv
cp
f
grestore
148.945 186.278 mo
147.51 185.444 li
145.158 186.257 li
146.593 187.091 li
148.945 186.278 li
cp
f
144.981 186.25 mo
146.417 187.084 li
146.593 187.091 li
145.158 186.257 li
144.981 186.25 li
cp
f
gsave
144.981 186.25 mo
146.417 187.084 li
146.593 187.091 li
145.158 186.257 li
144.981 186.25 li
cp
clp
146.593 187.091 mo
145.158 186.257 li
144.981 186.25 li
146.417 187.084 li
146.593 187.091 li
cp
f
grestore
142.364 193.078 mo
140.928 192.244 li
140.66 195.139 li
142.096 195.973 li
142.364 193.078 li
cp
f
142.274 192.816 mo
140.839 191.982 li
140.908 192.028 140.94 192.123 140.928 192.244 cv
142.364 193.078 li
142.375 192.957 142.343 192.862 142.274 192.816 cv
cp
f
gsave
142.274 192.816 mo
140.839 191.982 li
140.908 192.028 140.94 192.123 140.928 192.244 cv
142.364 193.078 li
142.375 192.957 142.343 192.862 142.274 192.816 cv
cp
clp
142.274 192.816 mo
140.839 191.982 li
140.908 192.028 140.94 192.123 140.928 192.244 cv
142.364 193.078 li
142.375 192.957 142.343 192.862 142.274 192.816 cv
cp
f
grestore
143.409 188.736 mo
141.974 187.902 li
141.925 188.03 141.841 188.15 141.742 188.229 cv
143.178 189.063 li
143.276 188.984 143.36 188.864 143.409 188.736 cv
cp
f
gsave
143.409 188.736 mo
141.974 187.902 li
141.925 188.03 141.841 188.15 141.742 188.229 cv
143.178 189.063 li
143.276 188.984 143.36 188.864 143.409 188.736 cv
cp
clp
143.409 188.736 mo
141.974 187.902 li
141.925 188.03 141.841 188.15 141.742 188.229 cv
143.178 189.063 li
143.276 188.984 143.36 188.864 143.409 188.736 cv
cp
f
grestore
145.121 185.258 mo
143.686 184.423 li
143.442 184.448 li
144.878 185.283 li
145.121 185.258 li
cp
f
gsave
145.121 185.258 mo
143.686 184.423 li
143.442 184.448 li
144.878 185.283 li
145.121 185.258 li
cp
clp
145.121 185.258 mo
143.686 184.423 li
143.442 184.448 li
144.878 185.283 li
145.121 185.258 li
cp
f
grestore
144.579 185.656 mo
143.143 184.822 li
141.974 187.902 li
143.409 188.736 li
144.579 185.656 li
cp
f
144.878 185.283 mo
143.442 184.448 li
143.325 184.516 143.209 184.65 143.143 184.822 cv
144.579 185.656 li
144.644 185.485 144.761 185.35 144.878 185.283 cv
cp
f
gsave
144.878 185.283 mo
143.442 184.448 li
143.325 184.516 143.209 184.65 143.143 184.822 cv
144.579 185.656 li
144.644 185.485 144.761 185.35 144.878 185.283 cv
cp
clp
144.878 185.283 mo
143.442 184.448 li
143.325 184.516 143.209 184.65 143.143 184.822 cv
144.579 185.656 li
144.644 185.485 144.761 185.35 144.878 185.283 cv
cp
f
grestore
140.646 191.725 mo
139.211 190.891 li
140.839 191.982 li
142.274 192.816 li
140.646 191.725 li
cp
f
143.178 189.063 mo
141.742 188.229 li
139.394 190.13 li
140.829 190.964 li
143.178 189.063 li
cp
f
144.878 185.283 mo
144.761 185.35 144.644 185.485 144.579 185.656 cv
143.409 188.736 li
143.36 188.864 143.276 188.984 143.178 189.063 cv
140.829 190.964 li
140.567 191.176 140.464 191.604 140.646 191.725 cv
142.274 192.816 li
142.343 192.862 142.375 192.957 142.364 193.078 cv
142.096 195.973 li
142.072 196.234 142.244 196.33 142.438 196.217 cv
142.581 196.098 li
144.758 193.693 li
144.901 193.574 li
145.044 193.527 li
147.227 193.416 li
147.371 193.37 li
147.565 193.257 147.736 192.964 147.71 192.732 cv
147.427 190.155 li
147.415 190.047 147.447 189.915 147.515 189.791 cv
149.132 186.826 li
149.312 186.495 149.208 186.187 148.945 186.278 cv
146.593 187.091 li
146.495 187.125 146.41 187.103 146.361 187.031 cv
145.177 185.311 li
145.111 185.214 144.994 185.215 144.878 185.283 cv
cp
1 .831373 .219608 rgb
f
140.829 190.964 mo
139.394 190.13 li
139.131 190.342 139.028 190.77 139.211 190.891 cv
140.646 191.725 li
140.464 191.604 140.567 191.176 140.829 190.964 cv
cp
1 .768627 0 rgb
f
gsave
140.829 190.964 mo
139.394 190.13 li
139.131 190.342 139.028 190.77 139.211 190.891 cv
140.646 191.725 li
140.464 191.604 140.567 191.176 140.829 190.964 cv
cp
clp
140.829 190.964 mo
139.394 190.13 li
139.131 190.342 139.028 190.77 139.211 190.891 cv
140.646 191.725 li
140.464 191.604 140.567 191.176 140.829 190.964 cv
cp
f
grestore
255.109 111.27 mo
250.576 108.635 li
252.305 109.64 254.566 109.956 257.151 109.505 cv
259.982 109.012 263.139 107.721 267.214 105.368 cv
267.801 105.029 268.407 104.669 269.034 104.285 cv
273.567 106.919 li
272.94 107.303 272.334 107.664 271.747 108.003 cv
267.673 110.355 264.516 111.647 261.684 112.14 cv
259.099 112.591 256.838 112.275 255.109 111.27 cv
cp
.992157 .827451 .0117647 rgb
f
255.001 111.455 mo
250.467 108.82 li
249.433 108.219 248.587 107.374 247.973 106.301 cv
252.506 108.935 li
253.12 110.008 253.967 110.853 255.001 111.455 cv
cp
f
252.506 108.935 mo
247.973 106.301 li
248.109 106.145 li
252.643 108.779 li
252.506 108.935 li
cp
f
252.643 108.779 mo
254.276 111.632 257.57 112.858 261.684 112.14 cv
264.516 111.647 267.673 110.355 271.747 108.003 cv
272.334 107.664 272.94 107.303 273.567 106.919 cv
273.572 107.093 li
272.948 107.474 272.343 107.834 271.758 108.172 cv
267.661 110.537 264.486 111.838 261.634 112.334 cv
257.483 113.058 254.157 111.819 252.506 108.935 cv
252.643 108.779 li
cp
f
197.818 98.2877 mo
193.284 95.653 li
195.013 96.6578 197.274 96.9739 199.859 96.5227 cv
202.691 96.0295 205.848 94.7384 209.922 92.386 cv
210.509 92.0469 211.115 91.6864 211.742 91.3024 cv
216.276 93.9369 li
215.649 94.3209 215.043 94.6817 214.456 95.0205 cv
210.381 97.3729 207.224 98.664 204.393 99.1575 cv
201.808 99.6083 199.547 99.2922 197.818 98.2877 cv
cp
1 .196078 .384314 rgb
f
197.709 98.4725 mo
193.176 95.8378 li
192.142 95.2365 191.295 94.3912 190.681 93.3184 cv
195.214 95.9529 li
195.829 97.026 196.675 97.8713 197.709 98.4725 cv
cp
f
195.214 95.9529 mo
190.681 93.3184 li
190.818 93.1624 li
195.351 95.7968 li
195.214 95.9529 li
cp
f
195.351 95.7968 mo
196.984 98.6497 200.278 99.8754 204.393 99.1575 cv
207.224 98.664 210.381 97.3729 214.456 95.0205 cv
215.043 94.6817 215.649 94.3209 216.276 93.9369 cv
216.28 94.1108 li
215.656 94.4916 215.051 94.8518 214.467 95.1896 cv
210.369 97.5549 207.195 98.8555 204.343 99.3517 cv
200.191 100.075 196.865 98.8365 195.214 95.9529 cv
195.351 95.7968 li
cp
f
242.369 77.2969 mo
237.835 74.662 li
237.823 74.4948 li
242.356 77.1292 li
242.369 77.2969 li
cp
f
242.356 77.1292 mo
237.823 74.4948 li
239.966 73.0398 241.966 70.5314 243.171 67.7863 cv
244.375 65.0427 244.725 62.1982 244.105 60.1801 cv
248.638 62.8149 li
249.258 64.833 248.908 67.6771 247.704 70.4208 cv
246.5 73.1661 244.5 75.6743 242.356 77.1292 cv
cp
f
248.638 62.8149 mo
244.105 60.1801 li
244.251 60.0453 li
248.785 62.6798 li
248.638 62.8149 li
cp
f
248.785 62.6798 mo
249.417 64.7413 249.061 67.6445 247.83 70.4473 cv
246.6 73.2484 244.559 75.8104 242.369 77.2969 cv
242.356 77.1292 li
244.5 75.6743 246.5 73.1661 247.704 70.4208 cv
248.908 67.6771 249.258 64.833 248.638 62.8149 cv
248.785 62.6798 li
cp
f
272.394 134.711 mo
267.861 132.076 li
267.805 131.946 li
272.339 134.581 li
272.394 134.711 li
cp
f
272.339 134.581 mo
267.805 131.946 li
269.934 129.762 271.7 126.712 272.529 123.783 cv
273.359 120.854 273.253 118.038 272.25 116.249 cv
276.783 118.883 li
277.787 120.672 277.892 123.488 277.063 126.417 cv
276.233 129.346 274.468 132.397 272.339 134.581 cv
cp
f
276.783 118.883 mo
272.25 116.249 li
272.387 116.093 li
276.92 118.727 li
276.783 118.883 li
cp
f
276.92 118.727 mo
277.943 120.549 278.048 123.417 277.204 126.399 cv
276.36 129.382 274.562 132.488 272.394 134.711 cv
272.339 134.581 li
274.468 132.397 276.233 129.346 277.063 126.417 cv
277.892 123.488 277.787 120.672 276.783 118.883 cv
276.92 118.727 li
cp
f
262.188 119.798 mo
261.025 119.122 li
260.882 119.117 li
262.046 119.793 li
262.188 119.798 li
cp
1 .768627 0 rgb
f
gsave
262.188 119.798 mo
261.025 119.122 li
260.882 119.117 li
262.046 119.793 li
262.188 119.798 li
cp
clp
262.188 119.798 mo
261.025 119.122 li
260.882 119.117 li
262.046 119.793 li
262.188 119.798 li
cp
f
grestore
255.408 127.194 mo
256.571 127.87 li
256.515 127.837 256.482 127.763 256.492 127.653 cv
255.328 126.977 li
255.318 127.087 255.351 127.161 255.408 127.194 cv
cp
f
gsave
255.408 127.194 mo
256.571 127.87 li
256.515 127.837 256.482 127.763 256.492 127.653 cv
255.328 126.977 li
255.318 127.087 255.351 127.161 255.408 127.194 cv
cp
clp
256.492 127.653 mo
255.328 126.977 li
255.318 127.087 255.351 127.161 255.408 127.194 cv
256.571 127.87 li
256.515 127.837 256.482 127.763 256.492 127.653 cv
cp
f
grestore
262.046 119.793 mo
260.882 119.117 li
258.975 119.775 li
260.139 120.451 li
262.046 119.793 li
cp
f
258.832 119.769 mo
259.995 120.446 li
260.139 120.451 li
258.975 119.775 li
258.832 119.769 li
cp
f
gsave
258.832 119.769 mo
259.995 120.446 li
260.139 120.451 li
258.975 119.775 li
258.832 119.769 li
cp
clp
260.139 120.451 mo
258.975 119.775 li
258.832 119.769 li
259.995 120.446 li
260.139 120.451 li
cp
f
grestore
256.709 125.306 mo
255.546 124.63 li
255.328 126.977 li
256.492 127.653 li
256.709 125.306 li
cp
f
256.637 125.093 mo
255.473 124.417 li
255.528 124.454 255.555 124.531 255.546 124.63 cv
256.709 125.306 li
256.719 125.208 256.692 125.13 256.637 125.093 cv
cp
f
gsave
256.637 125.093 mo
255.473 124.417 li
255.528 124.454 255.555 124.531 255.546 124.63 cv
256.709 125.306 li
256.719 125.208 256.692 125.13 256.637 125.093 cv
cp
clp
256.637 125.093 mo
255.473 124.417 li
255.528 124.454 255.555 124.531 255.546 124.63 cv
256.709 125.306 li
256.719 125.208 256.692 125.13 256.637 125.093 cv
cp
f
grestore
257.557 121.785 mo
256.393 121.109 li
256.353 121.213 256.285 121.31 256.206 121.374 cv
257.369 122.051 li
257.448 121.986 257.517 121.89 257.557 121.785 cv
cp
f
gsave
257.557 121.785 mo
256.393 121.109 li
256.353 121.213 256.285 121.31 256.206 121.374 cv
257.369 122.051 li
257.448 121.986 257.517 121.89 257.557 121.785 cv
cp
clp
257.557 121.785 mo
256.393 121.109 li
256.353 121.213 256.285 121.31 256.206 121.374 cv
257.369 122.051 li
257.448 121.986 257.517 121.89 257.557 121.785 cv
cp
f
grestore
258.945 118.965 mo
257.782 118.289 li
257.584 118.309 li
258.748 118.985 li
258.945 118.965 li
cp
f
gsave
258.945 118.965 mo
257.782 118.289 li
257.584 118.309 li
258.748 118.985 li
258.945 118.965 li
cp
clp
258.945 118.965 mo
257.782 118.289 li
257.584 118.309 li
258.748 118.985 li
258.945 118.965 li
cp
f
grestore
258.505 119.288 mo
257.342 118.612 li
256.393 121.109 li
257.557 121.785 li
258.505 119.288 li
cp
f
258.748 118.985 mo
257.584 118.309 li
257.489 118.364 257.395 118.473 257.342 118.612 cv
258.505 119.288 li
258.558 119.149 258.653 119.04 258.748 118.985 cv
cp
f
gsave
258.748 118.985 mo
257.584 118.309 li
257.489 118.364 257.395 118.473 257.342 118.612 cv
258.505 119.288 li
258.558 119.149 258.653 119.04 258.748 118.985 cv
cp
clp
258.748 118.985 mo
257.584 118.309 li
257.489 118.364 257.395 118.473 257.342 118.612 cv
258.505 119.288 li
258.558 119.149 258.653 119.04 258.748 118.985 cv
cp
f
grestore
255.317 124.209 mo
254.153 123.533 li
255.473 124.417 li
256.637 125.093 li
255.317 124.209 li
cp
f
257.369 122.051 mo
256.206 121.374 li
254.302 122.915 li
255.465 123.592 li
257.369 122.051 li
cp
f
258.748 118.985 mo
258.653 119.04 258.558 119.149 258.505 119.288 cv
257.557 121.785 li
257.517 121.89 257.448 121.986 257.369 122.051 cv
255.465 123.592 li
255.252 123.764 255.169 124.11 255.317 124.209 cv
256.637 125.093 li
256.692 125.13 256.719 125.208 256.709 125.306 cv
256.492 127.653 li
256.473 127.865 256.612 127.943 256.77 127.852 cv
256.886 127.755 li
258.651 125.805 li
258.766 125.708 li
258.883 125.671 li
260.653 125.58 li
260.769 125.543 li
260.927 125.452 261.065 125.213 261.045 125.025 cv
260.815 122.935 li
260.805 122.848 260.831 122.741 260.886 122.64 cv
262.197 120.237 li
262.344 119.968 262.258 119.719 262.046 119.793 cv
260.139 120.451 li
259.951 120.403 li
258.991 119.008 li
258.937 118.93 258.842 118.931 258.748 118.985 cv
cp
1 .831373 .219608 rgb
f
255.465 123.592 mo
254.302 122.915 li
254.089 123.088 254.005 123.434 254.153 123.533 cv
255.317 124.209 li
255.169 124.11 255.252 123.764 255.465 123.592 cv
cp
1 .768627 0 rgb
f
gsave
255.465 123.592 mo
254.302 122.915 li
254.089 123.088 254.005 123.434 254.153 123.533 cv
255.317 124.209 li
255.169 124.11 255.252 123.764 255.465 123.592 cv
cp
clp
255.465 123.592 mo
254.302 122.915 li
254.089 123.088 254.005 123.434 254.153 123.533 cv
255.317 124.209 li
255.169 124.11 255.252 123.764 255.465 123.592 cv
cp
f
grestore
208.566 105.405 mo
207.402 104.728 li
207.259 104.723 li
208.423 105.399 li
208.566 105.405 li
cp
f
gsave
208.566 105.405 mo
207.402 104.728 li
207.259 104.723 li
208.423 105.399 li
208.566 105.405 li
cp
clp
208.566 105.405 mo
207.402 104.728 li
207.259 104.723 li
208.423 105.399 li
208.566 105.405 li
cp
f
grestore
201.785 112.8 mo
202.948 113.477 li
202.893 113.444 202.859 113.37 202.869 113.26 cv
201.706 112.584 li
201.696 112.694 201.728 112.768 201.785 112.8 cv
cp
f
gsave
201.785 112.8 mo
202.948 113.477 li
202.893 113.444 202.859 113.37 202.869 113.26 cv
201.706 112.584 li
201.696 112.694 201.728 112.768 201.785 112.8 cv
cp
clp
202.869 113.26 mo
201.706 112.584 li
201.696 112.694 201.728 112.768 201.785 112.8 cv
202.948 113.477 li
202.893 113.444 202.859 113.37 202.869 113.26 cv
cp
f
grestore
208.423 105.399 mo
207.259 104.723 li
205.352 105.382 li
206.516 106.058 li
208.423 105.399 li
cp
f
205.209 105.376 mo
206.373 106.052 li
206.516 106.058 li
205.352 105.382 li
205.209 105.376 li
cp
f
gsave
205.209 105.376 mo
206.373 106.052 li
206.516 106.058 li
205.352 105.382 li
205.209 105.376 li
cp
clp
206.516 106.058 mo
205.352 105.382 li
205.209 105.376 li
206.373 106.052 li
206.516 106.058 li
cp
f
grestore
203.087 110.913 mo
201.923 110.236 li
201.706 112.584 li
202.869 113.26 li
203.087 110.913 li
cp
f
203.014 110.7 mo
201.851 110.024 li
201.906 110.061 201.932 110.138 201.923 110.236 cv
203.087 110.913 li
203.096 110.814 203.069 110.737 203.014 110.7 cv
cp
f
gsave
203.014 110.7 mo
201.851 110.024 li
201.906 110.061 201.932 110.138 201.923 110.236 cv
203.087 110.913 li
203.096 110.814 203.069 110.737 203.014 110.7 cv
cp
clp
203.014 110.7 mo
201.851 110.024 li
201.906 110.061 201.932 110.138 201.923 110.236 cv
203.087 110.913 li
203.096 110.814 203.069 110.737 203.014 110.7 cv
cp
f
grestore
203.934 107.392 mo
202.77 106.716 li
202.73 106.82 202.662 106.916 202.583 106.981 cv
203.747 107.657 li
203.826 107.593 203.894 107.496 203.934 107.392 cv
cp
f
gsave
203.934 107.392 mo
202.77 106.716 li
202.73 106.82 202.662 106.916 202.583 106.981 cv
203.747 107.657 li
203.826 107.593 203.894 107.496 203.934 107.392 cv
cp
clp
203.934 107.392 mo
202.77 106.716 li
202.73 106.82 202.662 106.916 202.583 106.981 cv
203.747 107.657 li
203.826 107.593 203.894 107.496 203.934 107.392 cv
cp
f
grestore
205.323 104.571 mo
204.159 103.895 li
203.961 103.915 li
205.125 104.592 li
205.323 104.571 li
cp
f
gsave
205.323 104.571 mo
204.159 103.895 li
203.961 103.915 li
205.125 104.592 li
205.323 104.571 li
cp
clp
205.323 104.571 mo
204.159 103.895 li
203.961 103.915 li
205.125 104.592 li
205.323 104.571 li
cp
f
grestore
204.883 104.895 mo
203.719 104.219 li
202.77 106.716 li
203.934 107.392 li
204.883 104.895 li
cp
f
205.125 104.592 mo
203.961 103.915 li
203.867 103.97 203.772 104.079 203.719 104.219 cv
204.883 104.895 li
204.936 104.755 205.03 104.647 205.125 104.592 cv
cp
f
gsave
205.125 104.592 mo
203.961 103.915 li
203.867 103.97 203.772 104.079 203.719 104.219 cv
204.883 104.895 li
204.936 104.755 205.03 104.647 205.125 104.592 cv
cp
clp
205.125 104.592 mo
203.961 103.915 li
203.867 103.97 203.772 104.079 203.719 104.219 cv
204.883 104.895 li
204.936 104.755 205.03 104.647 205.125 104.592 cv
cp
f
grestore
201.694 109.816 mo
200.53 109.14 li
201.851 110.024 li
203.014 110.7 li
201.694 109.816 li
cp
f
203.747 107.657 mo
202.583 106.981 li
200.679 108.522 li
201.843 109.199 li
203.747 107.657 li
cp
f
205.125 104.592 mo
205.03 104.647 204.936 104.755 204.883 104.895 cv
203.934 107.392 li
203.894 107.496 203.826 107.593 203.747 107.657 cv
201.843 109.199 li
201.63 109.37 201.546 109.717 201.694 109.816 cv
203.014 110.7 li
203.069 110.737 203.096 110.814 203.087 110.913 cv
202.869 113.26 li
202.85 113.471 202.99 113.549 203.147 113.458 cv
203.264 113.362 li
205.028 111.411 li
205.144 111.315 li
205.26 111.277 li
207.03 111.187 li
207.146 111.149 li
207.304 111.058 207.443 110.82 207.422 110.632 cv
207.192 108.542 li
207.182 108.455 207.208 108.347 207.263 108.247 cv
208.574 105.843 li
208.721 105.575 208.636 105.326 208.423 105.399 cv
206.516 106.058 li
206.328 106.01 li
205.368 104.614 li
205.315 104.537 205.22 104.537 205.125 104.592 cv
cp
1 .831373 .219608 rgb
f
201.843 109.199 mo
200.679 108.522 li
200.466 108.695 200.382 109.041 200.53 109.14 cv
201.694 109.816 li
201.546 109.717 201.63 109.37 201.843 109.199 cv
cp
1 .768627 0 rgb
f
gsave
201.843 109.199 mo
200.679 108.522 li
200.466 108.695 200.382 109.041 200.53 109.14 cv
201.694 109.816 li
201.546 109.717 201.63 109.37 201.843 109.199 cv
cp
clp
201.843 109.199 mo
200.679 108.522 li
200.466 108.695 200.382 109.041 200.53 109.14 cv
201.694 109.816 li
201.546 109.717 201.63 109.37 201.843 109.199 cv
cp
f
grestore
231.424 78.9979 mo
230.26 78.3217 li
230.117 78.3164 li
231.281 78.9926 li
231.424 78.9979 li
cp
f
gsave
231.424 78.9979 mo
230.26 78.3217 li
230.117 78.3164 li
231.281 78.9926 li
231.424 78.9979 li
cp
clp
231.424 78.9979 mo
230.26 78.3217 li
230.117 78.3164 li
231.281 78.9926 li
231.424 78.9979 li
cp
f
grestore
224.643 86.3937 mo
225.806 87.0699 li
225.75 87.0374 225.717 86.9631 225.728 86.8533 cv
224.564 86.1771 li
224.554 86.2869 224.587 86.3608 224.643 86.3937 cv
cp
f
gsave
224.643 86.3937 mo
225.806 87.0699 li
225.75 87.0374 225.717 86.9631 225.728 86.8533 cv
224.564 86.1771 li
224.554 86.2869 224.587 86.3608 224.643 86.3937 cv
cp
clp
225.728 86.8533 mo
224.564 86.1771 li
224.554 86.2869 224.587 86.3608 224.643 86.3937 cv
225.806 87.0699 li
225.75 87.0374 225.717 86.9631 225.728 86.8533 cv
cp
f
grestore
231.281 78.9926 mo
230.117 78.3164 li
228.21 78.9755 li
229.374 79.6517 li
231.281 78.9926 li
cp
f
228.067 78.9691 mo
229.231 79.6453 li
229.374 79.6517 li
228.21 78.9755 li
228.067 78.9691 li
cp
f
gsave
228.067 78.9691 mo
229.231 79.6453 li
229.374 79.6517 li
228.21 78.9755 li
228.067 78.9691 li
cp
clp
229.374 79.6517 mo
228.21 78.9755 li
228.067 78.9691 li
229.231 79.6453 li
229.374 79.6517 li
cp
f
grestore
225.945 84.5058 mo
224.781 83.8296 li
224.564 86.1771 li
225.728 86.8533 li
225.945 84.5058 li
cp
f
225.872 84.2933 mo
224.708 83.6168 li
224.764 83.6539 224.79 83.7313 224.781 83.8296 cv
225.945 84.5058 li
225.954 84.4075 225.927 84.3301 225.872 84.2933 cv
cp
f
gsave
225.872 84.2933 mo
224.708 83.6168 li
224.764 83.6539 224.79 83.7313 224.781 83.8296 cv
225.945 84.5058 li
225.954 84.4075 225.927 84.3301 225.872 84.2933 cv
cp
clp
225.872 84.2933 mo
224.708 83.6168 li
224.764 83.6539 224.79 83.7313 224.781 83.8296 cv
225.945 84.5058 li
225.954 84.4075 225.927 84.3301 225.872 84.2933 cv
cp
f
grestore
226.792 80.9852 mo
225.628 80.309 li
225.589 80.4133 225.52 80.5098 225.441 80.5742 cv
226.604 81.2504 li
226.684 81.186 226.752 81.0894 226.792 80.9852 cv
cp
f
gsave
226.792 80.9852 mo
225.628 80.309 li
225.589 80.4133 225.52 80.5098 225.441 80.5742 cv
226.604 81.2504 li
226.684 81.186 226.752 81.0894 226.792 80.9852 cv
cp
clp
226.792 80.9852 mo
225.628 80.309 li
225.589 80.4133 225.52 80.5098 225.441 80.5742 cv
226.604 81.2504 li
226.684 81.186 226.752 81.0894 226.792 80.9852 cv
cp
f
grestore
228.181 78.1649 mo
227.017 77.4886 li
226.819 77.5086 li
227.983 78.1851 li
228.181 78.1649 li
cp
f
gsave
228.181 78.1649 mo
227.017 77.4886 li
226.819 77.5086 li
227.983 78.1851 li
228.181 78.1649 li
cp
clp
228.181 78.1649 mo
227.017 77.4886 li
226.819 77.5086 li
227.983 78.1851 li
228.181 78.1649 li
cp
f
grestore
227.741 78.4882 mo
226.577 77.8117 li
225.628 80.309 li
226.792 80.9852 li
227.741 78.4882 li
cp
f
227.983 78.1851 mo
226.819 77.5086 li
226.724 77.5635 226.63 77.6724 226.577 77.8117 cv
227.741 78.4882 li
227.794 78.3489 227.888 78.2397 227.983 78.1851 cv
cp
f
gsave
227.983 78.1851 mo
226.819 77.5086 li
226.724 77.5635 226.63 77.6724 226.577 77.8117 cv
227.741 78.4882 li
227.794 78.3489 227.888 78.2397 227.983 78.1851 cv
cp
clp
227.983 78.1851 mo
226.819 77.5086 li
226.724 77.5635 226.63 77.6724 226.577 77.8117 cv
227.741 78.4882 li
227.794 78.3489 227.888 78.2397 227.983 78.1851 cv
cp
f
grestore
224.552 83.4089 mo
223.388 82.7327 li
224.708 83.6168 li
225.872 84.2933 li
224.552 83.4089 li
cp
f
226.604 81.2504 mo
225.441 80.5742 li
223.537 82.1157 li
224.7 82.7919 li
226.604 81.2504 li
cp
f
227.983 78.1851 mo
227.888 78.2397 227.794 78.3489 227.741 78.4882 cv
226.792 80.9852 li
226.752 81.0894 226.684 81.186 226.604 81.2504 cv
224.7 82.7919 li
224.488 82.9641 224.404 83.3102 224.552 83.4089 cv
225.872 84.2933 li
225.927 84.3301 225.954 84.4075 225.945 84.5058 cv
225.728 86.8533 li
225.708 87.0643 225.847 87.1427 226.005 87.0513 cv
226.121 86.9548 li
227.886 85.0045 li
228.002 84.908 li
228.118 84.8705 li
229.888 84.7802 li
230.004 84.7424 li
230.162 84.6514 230.301 84.413 230.28 84.2247 cv
230.05 82.1356 li
230.04 82.0481 230.067 81.9407 230.121 81.8402 cv
231.432 79.4368 li
231.579 79.168 231.494 78.9191 231.281 78.9926 cv
229.374 79.6517 li
229.186 79.6033 li
228.226 78.2079 li
228.173 78.1298 228.078 78.1306 227.983 78.1851 cv
cp
1 .831373 .219608 rgb
f
224.7 82.7919 mo
223.537 82.1157 li
223.324 82.2878 223.24 82.634 223.388 82.7327 cv
224.552 83.4089 li
224.404 83.3102 224.488 82.9641 224.7 82.7919 cv
cp
1 .768627 0 rgb
f
gsave
224.7 82.7919 mo
223.537 82.1157 li
223.324 82.2878 223.24 82.634 223.388 82.7327 cv
224.552 83.4089 li
224.404 83.3102 224.488 82.9641 224.7 82.7919 cv
cp
clp
224.7 82.7919 mo
223.537 82.1157 li
223.324 82.2878 223.24 82.634 223.388 82.7327 cv
224.552 83.4089 li
224.404 83.3102 224.488 82.9641 224.7 82.7919 cv
cp
f
grestore
268.176 67.3561 mo
265.761 65.9526 li
265.685 65.9082 265.585 65.9005 265.465 65.9418 cv
267.88 67.3453 li
268 67.304 268.1 67.3117 268.176 67.3561 cv
cp
f
gsave
268.176 67.3561 mo
265.761 65.9526 li
265.685 65.9082 265.585 65.9005 265.465 65.9418 cv
267.88 67.3453 li
268 67.304 268.1 67.3117 268.176 67.3561 cv
cp
clp
268.176 67.3561 mo
265.761 65.9526 li
265.685 65.9082 265.585 65.9005 265.465 65.9418 cv
267.88 67.3453 li
268 67.304 268.1 67.3117 268.176 67.3561 cv
cp
f
grestore
254.104 82.704 mo
256.52 84.1075 li
256.403 84.0396 256.334 83.8863 256.355 83.6581 cv
253.941 82.2546 li
253.92 82.4828 253.988 82.6361 254.104 82.704 cv
cp
f
gsave
254.104 82.704 mo
256.52 84.1075 li
256.403 84.0396 256.334 83.8863 256.355 83.6581 cv
253.941 82.2546 li
253.92 82.4828 253.988 82.6361 254.104 82.704 cv
cp
clp
256.355 83.6581 mo
253.941 82.2546 li
253.92 82.4828 253.988 82.6361 254.104 82.704 cv
256.52 84.1075 li
256.403 84.0396 256.334 83.8863 256.355 83.6581 cv
cp
f
grestore
267.88 67.3453 mo
265.465 65.9418 li
261.508 67.3093 li
263.923 68.7128 li
267.88 67.3453 li
cp
f
261.211 67.2966 mo
263.626 68.7001 li
263.706 68.7467 263.809 68.7516 263.923 68.7128 cv
261.508 67.3093 li
261.394 67.3484 261.291 67.3432 261.211 67.2966 cv
cp
f
gsave
261.211 67.2966 mo
263.626 68.7001 li
263.706 68.7467 263.809 68.7516 263.923 68.7128 cv
261.508 67.3093 li
261.394 67.3484 261.291 67.3432 261.211 67.2966 cv
cp
clp
263.923 68.7128 mo
261.508 67.3093 li
261.394 67.3484 261.291 67.3432 261.211 67.2966 cv
263.626 68.7001 li
263.706 68.7467 263.809 68.7516 263.923 68.7128 cv
cp
f
grestore
256.806 78.7864 mo
254.391 77.3829 li
253.941 82.2546 li
256.355 83.6581 li
256.806 78.7864 li
cp
f
256.656 78.3451 mo
254.241 76.942 li
254.355 77.0186 254.41 77.1789 254.391 77.3829 cv
256.806 78.7864 li
256.825 78.5824 256.77 78.4218 256.656 78.3451 cv
cp
f
gsave
256.656 78.3451 mo
254.241 76.942 li
254.355 77.0186 254.41 77.1789 254.391 77.3829 cv
256.806 78.7864 li
256.825 78.5824 256.77 78.4218 256.656 78.3451 cv
cp
clp
256.656 78.3451 mo
254.241 76.942 li
254.355 77.0186 254.41 77.1789 254.391 77.3829 cv
256.806 78.7864 li
256.825 78.5824 256.77 78.4218 256.656 78.3451 cv
cp
f
grestore
258.565 71.4805 mo
256.15 70.077 li
256.067 70.2933 255.926 70.4935 255.761 70.6273 cv
258.176 72.0308 li
258.34 71.897 258.482 71.6968 258.565 71.4805 cv
cp
f
gsave
258.565 71.4805 mo
256.15 70.077 li
256.067 70.2933 255.926 70.4935 255.761 70.6273 cv
258.176 72.0308 li
258.34 71.897 258.482 71.6968 258.565 71.4805 cv
cp
clp
258.565 71.4805 mo
256.15 70.077 li
256.067 70.2933 255.926 70.4935 255.761 70.6273 cv
258.176 72.0308 li
258.34 71.897 258.482 71.6968 258.565 71.4805 cv
cp
f
grestore
261.447 65.6271 mo
259.032 64.2236 li
258.919 64.1586 258.77 64.1799 258.621 64.266 cv
261.036 65.6695 li
261.185 65.5834 261.334 65.5621 261.447 65.6271 cv
cp
f
gsave
261.447 65.6271 mo
259.032 64.2236 li
258.919 64.1586 258.77 64.1799 258.621 64.266 cv
261.036 65.6695 li
261.185 65.5834 261.334 65.5621 261.447 65.6271 cv
cp
clp
261.447 65.6271 mo
259.032 64.2236 li
258.919 64.1586 258.77 64.1799 258.621 64.266 cv
261.036 65.6695 li
261.185 65.5834 261.334 65.5621 261.447 65.6271 cv
cp
f
grestore
260.533 66.2981 mo
258.119 64.895 li
256.15 70.077 li
258.565 71.4805 li
260.533 66.2981 li
cp
f
261.036 65.6695 mo
258.621 64.266 li
258.424 64.3798 258.228 64.6058 258.119 64.895 cv
260.533 66.2981 li
260.643 66.009 260.839 65.7829 261.036 65.6695 cv
cp
f
gsave
261.036 65.6695 mo
258.621 64.266 li
258.424 64.3798 258.228 64.6058 258.119 64.895 cv
260.533 66.2981 li
260.643 66.009 260.839 65.7829 261.036 65.6695 cv
cp
clp
261.036 65.6695 mo
258.621 64.266 li
258.424 64.3798 258.228 64.6058 258.119 64.895 cv
260.533 66.2981 li
260.643 66.009 260.839 65.7829 261.036 65.6695 cv
cp
f
grestore
253.916 76.5104 mo
251.501 75.1069 li
254.241 76.942 li
256.656 78.3451 li
253.916 76.5104 li
cp
f
258.176 72.0308 mo
255.761 70.6273 li
251.809 73.8259 li
254.224 75.2297 li
258.176 72.0308 li
cp
f
261.036 65.6695 mo
260.839 65.7829 260.643 66.009 260.533 66.2981 cv
258.565 71.4805 li
258.482 71.6968 258.34 71.897 258.176 72.0308 cv
254.224 75.2297 li
253.783 75.5871 253.609 76.3053 253.916 76.5104 cv
256.656 78.3451 li
256.77 78.4218 256.825 78.5824 256.806 78.7864 cv
256.355 83.6581 li
256.315 84.0963 256.604 84.2584 256.932 84.069 cv
257.173 83.8685 li
260.835 79.8214 li
261.075 79.6212 li
261.317 79.5432 li
264.99 79.3555 li
265.231 79.2775 li
265.558 79.0885 265.846 78.5939 265.803 78.2037 cv
265.326 73.8676 li
265.306 73.6862 265.36 73.4626 265.473 73.2547 cv
268.194 68.2668 li
268.498 67.7093 268.322 67.1927 267.88 67.3453 cv
263.923 68.7128 li
263.758 68.7695 263.615 68.733 263.532 68.6123 cv
261.541 65.7167 li
261.43 65.5551 261.233 65.5561 261.036 65.6695 cv
cp
1 .831373 .219608 rgb
f
254.224 75.2297 mo
251.809 73.8259 li
251.368 74.1836 251.194 74.9022 251.501 75.1069 cv
253.916 76.5104 li
253.609 76.3053 253.783 75.5871 254.224 75.2297 cv
cp
1 .768627 0 rgb
f
gsave
254.224 75.2297 mo
251.809 73.8259 li
251.368 74.1836 251.194 74.9022 251.501 75.1069 cv
253.916 76.5104 li
253.609 76.3053 253.783 75.5871 254.224 75.2297 cv
cp
clp
254.224 75.2297 mo
251.809 73.8259 li
251.368 74.1836 251.194 74.9022 251.501 75.1069 cv
253.916 76.5104 li
253.609 76.3053 253.783 75.5871 254.224 75.2297 cv
cp
f
grestore
311.418 366.204 mo
311.504 367.041 311.568 367.909 311.514 368.751 cv
311.464 369.559 310.863 369.103 310.377 368.918 cv
309.426 368.557 308.616 367.91 307.835 367.26 cv
307.134 366.678 306.282 366.045 305.4 366.277 cv
304.205 366.59 303.474 368.149 302.906 369.118 cv
302.702 369.467 302.492 369.832 302.468 370.235 cv
302.419 371.026 303.081 371.672 303.74 372.113 cv
304.771 372.804 305.924 373.293 306.97 373.961 cv
307.609 374.37 308.205 374.843 308.799 375.316 cv
309.351 375.755 309.954 376.167 310.47 376.646 cv
310.937 377.077 311.345 377.599 311.8 378.051 cv
312.675 378.92 314.288 379.286 315.482 378.992 cv
316.267 378.798 316.951 378.237 317.292 377.507 cv
317.865 376.281 317.454 374.853 317.198 373.525 cv
316.869 371.817 316.827 369.072 317.053 367.347 cv
311.418 366.204 li
cp
.933333 .611765 .462745 rgb
f
317.11 372.981 mo
316.051 374.496 313.973 375.169 312.147 374.805 cv
310.087 373.778 306.441 370.541 308.403 368.621 cv
308.715 368.317 308.918 368.361 309.469 368.462 cv
308.891 368.115 308.354 367.692 307.835 367.26 cv
307.134 366.678 306.282 366.045 305.4 366.276 cv
304.205 366.59 303.474 368.149 302.906 369.118 cv
302.702 369.467 302.492 369.832 302.468 370.235 cv
302.419 371.026 303.081 371.672 303.74 372.113 cv
304.771 372.804 305.924 373.293 306.97 373.961 cv
307.609 374.37 308.205 374.843 308.799 375.316 cv
309.351 375.755 309.954 376.167 310.47 376.646 cv
310.936 377.077 311.345 377.599 311.8 378.05 cv
312.674 378.92 314.288 379.286 315.482 378.992 cv
316.267 378.798 316.951 378.237 317.292 377.507 cv
317.865 376.281 317.454 374.853 317.198 373.525 cv
317.165 373.356 317.137 373.169 317.11 372.981 cv
cp
.0901961 .0666667 .745098 rgb
f
311.508 368.825 mo
311.384 370.563 312.118 369.567 312.706 370.087 cv
314.07 371.296 315.481 371.097 316.477 370.104 cv
316.991 369.482 316.896 368.515 316.997 367.751 cv
317.458 364.255 318.112 363.277 318.701 361.273 cv
319.484 358.605 319.53 355.764 319.178 353.007 cv
318.825 350.249 318.083 347.557 317.311 344.887 cv
317.119 344.224 316.854 343.51 316.853 342.813 cv
316.852 342.355 317.024 341.925 317.032 341.469 cv
317.058 340.031 316.222 338.656 316.038 337.24 cv
315.92 336.323 315.898 335.29 315.327 334.514 cv
314.307 333.129 312.139 333.063 310.639 333.91 cv
309.487 334.561 308.441 335.599 307.781 336.74 cv
307.136 337.852 307.175 339.426 307.187 340.687 cv
307.203 342.238 307.313 343.786 307.517 345.324 cv
308.005 349.008 309.026 352.592 309.82 356.217 cv
310.136 357.656 310.409 359.104 310.657 360.557 cv
311.03 362.749 311.658 366.714 311.508 368.825 cv
cp
.933333 .611765 .462745 rgb
f
318.995 276.012 mo
319.707 273.105 320.428 270.037 320.016 267.033 cv
319.827 265.652 319.362 264.288 318.511 263.185 cv
317.59 261.99 316.154 261.034 314.622 261.238 cv
312.79 261.483 311.083 261.899 309.381 262.641 cv
307.115 263.63 305.023 264.964 302.931 266.268 cv
302.778 266.363 296.648 269.816 296.188 270.165 cv
295.477 270.704 294.772 271.247 294.116 271.852 cv
293.609 272.319 293.324 272.969 292.838 273.447 cv
292.369 273.911 292.012 274.29 291.69 274.884 cv
291.027 276.108 290.385 277.356 289.995 278.693 cv
289.198 281.421 289.541 284.453 290.89 286.953 cv
291.227 287.577 291.657 288.096 291.944 288.746 cv
292.246 289.429 292.495 290.135 292.696 290.854 cv
293.091 292.262 293.302 293.715 293.438 295.17 cv
293.677 297.745 293.607 300.349 293.224 302.907 cv
293.158 303.346 293.091 303.828 293.328 304.204 cv
293.598 304.633 294.158 304.763 294.664 304.809 cv
296.728 304.999 297.787 308.724 299.743 308.045 cv
303.143 306.865 307.094 307.552 310.174 305.695 cv
312.382 304.363 316.12 306.784 315.389 303.608 cv
315.145 302.557 315.204 301.247 315.449 300.204 cv
315.715 299.078 316.103 298.052 315.681 296.879 cv
315.507 296.392 315.209 295.958 314.995 295.486 cv
314.474 294.338 314.476 293.025 314.599 291.771 cv
314.735 290.385 315.005 289.015 315.329 287.66 cv
315.708 286.076 316.161 284.509 316.686 282.967 cv
317.354 281.002 318.14 279.075 318.711 277.08 cv
318.813 276.726 318.907 276.37 318.995 276.012 cv
cp
1 .196078 .384314 rgb
f
295.696 341.545 mo
295.839 341.617 295.754 343.559 295.765 343.804 cv
295.801 344.561 295.882 345.323 295.866 346.081 cv
295.844 347.083 295.657 348.015 295.815 349.02 cv
296.31 352.158 296.046 355.241 296.189 358.397 cv
296.395 362.963 297.863 367.381 298.394 371.922 cv
298.634 373.978 298.687 376.081 299.345 378.044 cv
299.588 378.767 300.115 379.672 300.796 380.066 cv
301.43 380.434 302.754 380.734 303.361 380.191 cv
303.636 379.945 303.755 379.573 303.837 379.214 cv
303.997 378.519 304.063 377.806 304.148 377.097 cv
304.712 372.38 306.11 367.798 306.822 363.1 cv
307.208 360.548 306.933 358.088 306.799 355.537 cv
306.661 352.934 306.215 350.325 305.291 347.878 cv
304.957 346.994 304.453 346.026 303.533 345.801 cv
295.696 341.545 li
cp
1 .74902 .635294 rgb
f
317.863 300.781 mo
318.12 301.351 318.352 301.926 318.543 302.506 cv
319.285 304.75 319.429 307.234 319.773 309.56 cv
320.269 312.985 320.57 316.433 320.872 319.879 cv
321.116 322.654 321.358 325.429 321.601 328.204 cv
321.839 330.911 322.367 333.651 322.037 336.372 cv
321.735 338.863 320.661 341.096 318.726 342.677 cv
316.791 344.26 314.638 345.576 312.353 346.596 cv
307.879 348.593 302.887 349.461 298.002 348.982 cv
296.241 348.809 294.438 348.444 292.876 347.581 cv
291.024 346.558 290.652 345.393 290.376 343.369 cv
289.981 340.477 289.85 337.556 289.853 334.639 cv
289.855 332.128 290.14 329.63 290.131 327.115 cv
290.122 324.523 290.218 321.93 290.417 319.346 cv
290.821 314.12 291.648 308.926 292.894 303.833 cv
292.868 303.935 295.593 304.716 295.967 304.832 cv
297.412 305.283 299.257 305.155 300.746 305.026 cv
306.382 304.537 312.907 301.357 315.387 296.02 cv
316.189 297.568 317.129 299.155 317.863 300.781 cv
cp
.0901961 .0666667 .745098 rgb
f
312.442 256.645 mo
312.482 257.585 312.524 258.526 312.565 259.466 cv
312.599 260.247 312.637 261.046 312.935 261.769 cv
313.287 262.619 313.741 263.036 313.665 263.994 cv
313.585 265.016 313.097 265.89 312.408 266.639 cv
311.107 268.052 309.344 269.036 307.455 269.402 cv
306.18 269.65 304.743 269.571 303.587 268.937 cv
301.939 268.032 302.408 266.808 302.527 265.18 cv
302.653 263.44 302.59 261.239 301.082 259.728 cv
312.442 256.645 li
cp
1 .780392 .678431 rgb
f
297.808 243.409 mo
297.191 244.138 296.705 244.96 296.546 245.93 cv
296.245 247.763 296.887 249.589 296.668 251.413 cv
296.476 253.014 297.4 254.995 297.824 256.558 cv
298.092 257.543 298.444 258.637 299.35 259.112 cv
299.895 259.397 300.56 259.405 301.082 259.728 cv
301.402 259.925 301.644 260.226 301.943 260.455 cv
302.826 261.133 304.448 260.791 305.456 260.656 cv
306.475 260.52 307.576 260.354 308.518 259.921 cv
310.306 259.096 311.501 257.398 312.574 255.752 cv
321.368 242.251 303.743 236.411 297.808 243.409 cv
cp
f
314.348 241.627 mo
314.182 241.243 314.01 240.863 313.739 240.513 cv
312.608 239.048 311.023 237.947 309.285 237.317 cv
307.138 236.54 304.767 236.463 302.532 236.93 cv
302.08 237.025 301.631 237.141 301.21 237.328 cv
300.395 237.69 299.72 238.298 299.06 238.895 cv
298.339 239.547 297.355 240.168 296.865 241.005 cv
296.079 242.349 295.781 243.869 295.841 245.42 cv
295.853 245.728 295.907 246.082 296.171 246.243 cv
296.317 246.332 296.497 246.339 296.665 246.376 cv
297.179 246.486 297.593 246.884 297.849 247.342 cv
298.157 247.894 298.246 248.529 298.497 249.101 cv
298.75 249.68 299.042 250.243 299.204 250.859 cv
299.334 251.35 299.518 251.851 299.892 252.197 cv
300.266 252.544 300.874 252.683 301.294 252.395 cv
301.486 252.264 301.616 252.064 301.753 251.876 cv
302.632 250.674 303.153 251.897 303.366 252.734 cv
303.567 253.522 303.585 254.188 303.673 254.97 cv
303.763 255.763 303.976 256.612 304.525 257.218 cv
305.755 258.579 308.162 258.535 309.793 258.198 cv
310.383 258.076 310.977 257.946 311.524 257.693 cv
314.365 256.377 316.055 252.51 316.386 249.596 cv
316.461 248.936 316.48 248.271 316.475 247.608 cv
316.47 246.904 316.437 246.194 316.262 245.512 cv
315.999 244.484 315.43 243.576 314.868 242.688 cv
314.651 242.344 314.503 241.984 314.348 241.627 cv
cp
1 .196078 .384314 rgb
f
317.578 239.183 mo
315.707 237.57 312.893 238.009 311.414 240.177 cv
310.468 241.564 310.166 243.537 310.485 245.301 cv
310.834 247.226 311.99 248.674 313.493 249.214 cv
314.526 249.585 315.958 249.903 316.984 249.41 cv
317.944 248.948 318.721 247.957 319.165 246.801 cv
320.153 244.227 319.45 240.798 317.578 239.183 cv
cp
f
303.134 250.338 mo
304.79 250.351 305.054 252.42 303.804 253.91 cv
303.439 254.344 302.825 254.708 302.365 255.043 cv
299.224 257.326 298.687 254.56 299.689 253.777 cv
302.017 251.959 301.05 250.321 303.134 250.338 cv
cp
1 .780392 .678431 rgb
f
302.402 253.397 mo
302.605 253.238 304.565 252.275 303.343 251.426 cv
303.005 251.192 302.587 251.471 302.504 251.841 cv
302.462 252.033 302.507 252.236 302.464 252.427 cv
302.438 252.54 302.381 252.645 302.313 252.739 cv
302.126 252.998 301.537 253.215 301.618 253.619 cv
301.691 253.976 302.286 253.488 302.402 253.397 cv
cp
.952941 .662745 .517647 rgb
f
304.437 381.286 mo
304.108 379.578 304.055 377.817 304.281 376.093 cv
298.657 373.965 li
298.742 374.792 298.775 375.624 298.755 376.455 cv
298.717 378.158 296.879 377.885 295.582 377.633 cv
294.518 377.424 293.467 377.141 292.413 376.889 cv
292.413 381.646 li
288.314 381.646 li
290.105 383.752 293.678 383.583 296.101 384.561 cv
298.195 385.406 300.291 387.352 302.721 386.753 cv
303.506 386.559 304.19 385.998 304.531 385.268 cv
305.104 384.042 304.693 382.614 304.437 381.286 cv
cp
1 .74902 .635294 rgb
f
302.876 382.502 mo
299.287 384.035 292.127 382.006 292.571 376.926 cv
292.016 376.792 291.46 376.664 290.899 376.561 cv
290.62 376.509 290.339 376.463 290.057 376.425 cv
289.836 376.396 289.545 376.314 289.328 376.37 cv
288.509 376.585 287.833 377.288 287.548 378.064 cv
287.259 378.852 287.312 379.739 287.592 380.53 cv
287.66 380.707 li
287.819 381.084 288.121 381.441 288.397 381.745 cv
288.654 382.029 288.95 382.274 289.271 382.482 cv
289.932 382.912 290.684 383.183 291.441 383.391 cv
292.981 383.817 294.612 383.96 296.101 384.561 cv
298.195 385.406 300.291 387.352 302.721 386.753 cv
303.506 386.559 304.19 385.998 304.531 385.268 cv
305.104 384.042 304.693 382.614 304.437 381.286 cv
304.36 380.888 304.302 380.485 304.255 380.082 cv
303.822 381.202 303.61 382.502 302.876 382.502 cv
cp
.0901961 .0666667 .745098 rgb
f
297.543 271.1 mo
294.117 270.548 291.1 274.191 291.019 281.251 cv
290.981 284.55 290.824 287.846 290.652 291.14 cv
290.555 292.996 290.544 294.866 290.237 296.703 cv
289.908 298.673 289.166 300.104 288.092 301.753 cv
286.268 304.552 284.465 307.343 282.903 310.3 cv
282.564 310.638 282.182 310.855 281.781 311.037 cv
281.306 311.255 280.808 311.434 280.344 311.747 cv
278.977 312.668 277.628 313.761 276.976 315.333 cv
276.839 315.663 276.751 316.067 276.962 316.356 cv
277.25 316.286 277.538 316.216 277.826 316.145 cv
277.979 316.145 li
278.061 316.274 li
278.229 316.904 277.564 317.674 277.279 318.194 cv
276.89 318.904 276.505 319.616 276.117 320.327 cv
276.028 320.49 275.938 320.657 275.91 320.84 cv
275.882 321.023 275.93 321.23 276.077 321.344 cv
276.353 321.51 li
276.514 321.647 276.527 321.891 276.489 322.098 cv
276.41 322.53 276.236 323.016 276.324 323.457 cv
276.501 324.345 277.166 323.413 277.582 323.386 cv
278.163 323.349 277.973 324.149 278.421 324.276 cv
278.735 324.366 278.992 324.03 279.145 323.743 cv
279.538 323.001 279.792 322.253 280.551 321.795 cv
280.676 321.755 li
280.787 321.77 280.792 321.926 280.813 322.036 cv
280.889 322.443 281.352 322.411 281.661 322.401 cv
282.047 322.39 282.22 322.318 282.426 321.945 cv
283.617 319.787 284.673 317.555 285.587 315.267 cv
285.828 314.662 286.061 314.052 286.374 313.481 cv
288.027 310.472 290.947 308.646 293.074 306.074 cv
295.303 303.378 297.377 300.599 298.314 297.172 cv
299.331 293.453 299.991 289.756 300.557 285.92 cv
302.181 274.891 300.202 271.529 297.543 271.1 cv
cp
1 .74902 .635294 rgb
f
349.991 247.183 mo
350.091 246.839 344.758 242.958 342.058 240.868 cv
341.35 240.319 339.807 238.442 339.4 237.233 cv
338.812 235.494 338.862 235.027 337.797 234.384 cv
337.256 234.057 336.881 233.592 336.459 233.137 cv
336.037 232.682 335.514 232.378 334.902 232.259 cv
334.279 232.137 333.629 232.206 333.023 232.391 cv
332.926 232.42 332.824 232.457 332.766 232.539 cv
332.711 232.614 332.705 232.712 332.7 232.804 cv
332.688 233.02 332.677 233.235 332.665 233.451 cv
332.656 233.622 332.653 233.812 332.768 233.939 cv
332.864 234.043 333.014 234.074 333.155 234.086 cv
333.474 234.113 333.794 234.07 334.113 234.057 cv
334.432 234.044 334.763 234.064 335.049 234.205 cv
335.23 234.292 335.01 234.658 334.975 234.839 cv
334.916 235.152 334.981 235.247 334.747 235.368 cv
334.527 235.481 334.409 235.709 334.327 235.933 cv
334.074 236.626 334.141 237.389 334.224 238.121 cv
334.309 238.877 334.372 239.723 334.747 240.405 cv
335.18 241.191 335.985 242.513 336.725 242.981 cv
337.917 243.736 345.661 252.712 346.147 252.943 cv
346.824 253.265 349.535 248.759 349.991 247.183 cv
cp
1 .737255 .6 rgb
f
330.94 243.865 mo
331.652 243.941 li
331.447 243.919 331.261 243.769 331.173 243.524 cv
330.462 243.448 li
330.549 243.693 330.735 243.843 330.94 243.865 cv
cp
.0901961 .0666667 .745098 rgb
f
gsave
330.94 243.865 mo
331.652 243.941 li
331.447 243.919 331.261 243.769 331.173 243.524 cv
330.462 243.448 li
330.549 243.693 330.735 243.843 330.94 243.865 cv
cp
clp
331.173 243.524 mo
330.462 243.448 li
330.549 243.693 330.735 243.843 330.94 243.865 cv
331.652 243.941 li
331.447 243.919 331.261 243.769 331.173 243.524 cv
cp
f
grestore
332.449 226.169 mo
331.737 226.094 li
331.633 226.083 331.525 226.105 331.421 226.164 cv
332.133 226.24 li
332.236 226.18 332.345 226.158 332.449 226.169 cv
cp
f
gsave
332.449 226.169 mo
331.737 226.094 li
331.633 226.083 331.525 226.105 331.421 226.164 cv
332.133 226.24 li
332.236 226.18 332.345 226.158 332.449 226.169 cv
cp
clp
332.449 226.169 mo
331.737 226.094 li
331.633 226.083 331.525 226.105 331.421 226.164 cv
332.133 226.24 li
332.236 226.18 332.345 226.158 332.449 226.169 cv
cp
f
grestore
332.133 226.24 mo
331.421 226.164 li
326.045 229.268 li
326.757 229.344 li
332.133 226.24 li
cp
f
326.439 230.332 mo
325.727 230.256 li
330.462 243.448 li
331.173 243.524 li
326.439 230.332 li
cp
f
326.757 229.344 mo
326.045 229.268 li
325.738 229.446 325.596 229.888 325.727 230.256 cv
326.439 230.332 li
326.307 229.963 326.45 229.521 326.757 229.344 cv
cp
f
gsave
326.757 229.344 mo
326.045 229.268 li
325.738 229.446 325.596 229.888 325.727 230.256 cv
326.439 230.332 li
326.307 229.963 326.45 229.521 326.757 229.344 cv
cp
clp
326.757 229.344 mo
326.045 229.268 li
325.738 229.446 325.596 229.888 325.727 230.256 cv
326.439 230.332 li
326.307 229.963 326.45 229.521 326.757 229.344 cv
cp
f
grestore
326.439 230.332 mo
331.173 243.524 li
331.305 243.892 331.661 244.047 331.968 243.87 cv
337.344 240.766 li
337.652 240.589 337.794 240.146 337.662 239.778 cv
332.928 226.585 li
332.796 226.217 332.44 226.063 332.133 226.24 cv
330.871 226.968 li
330.743 227.043 li
328.014 228.618 li
327.817 228.732 li
326.757 229.344 li
326.45 229.521 326.307 229.963 326.439 230.332 cv
cp
.721569 .901961 .964706 rgb
f
330.899 226.994 mo
327.667 228.864 li
327.82 229.293 li
327.886 229.476 328.064 229.553 328.217 229.465 cv
330.896 227.918 li
331.049 227.83 331.12 227.61 331.054 227.426 cv
330.899 226.994 li
cp
.172549 .164706 .843137 rgb
f
326.797 229.415 mo
327.858 228.803 li
328.055 228.689 li
330.784 227.114 li
332.174 226.311 li
332.398 226.249 li
332.596 226.249 332.77 226.388 332.851 226.614 cv
337.356 239.175 li
337.475 239.507 337.349 239.906 337.075 240.065 cv
331.698 243.168 li
331.475 243.23 li
331.276 243.23 331.103 243.091 331.022 242.866 cv
326.517 230.304 li
326.398 229.972 326.524 229.573 326.797 229.415 cv
cp
326.439 230.332 mo
331.173 243.524 li
331.305 243.892 331.661 244.047 331.968 243.87 cv
337.344 240.766 li
337.652 240.589 337.794 240.146 337.662 239.778 cv
332.928 226.585 li
332.796 226.217 332.44 226.063 332.133 226.24 cv
330.871 226.968 li
330.743 227.043 li
328.014 228.618 li
327.817 228.732 li
326.757 229.344 li
326.45 229.521 326.307 229.963 326.439 230.332 cv
cp
f
334.831 235.767 mo
335.561 236.354 335.891 236.604 336.055 236.758 cv
336.212 236.959 li
336.267 237.115 li
336.948 239.24 336.596 239.297 336.798 240.127 cv
336.992 240.92 337.962 241.2 338.681 240.966 cv
339.994 240.538 340.439 238.46 338.466 236.502 cv
338.23 236.269 337.994 236.035 337.758 235.801 cv
337.589 235.632 337.459 235.422 337.259 235.288 cv
336.717 234.925 336.293 234.709 335.922 234.537 cv
335.676 234.423 335.453 234.328 335.235 234.224 cv
335.046 234.134 334.85 234.105 334.676 234.127 cv
334.077 234.204 333.741 234.892 334.831 235.767 cv
cp
.980392 .784314 .678431 rgb
f
350.184 352.41 mo
350.182 352.226 350.186 352.042 350.198 351.857 cv
350.322 349.963 349.594 348.364 348.903 346.614 cv
348.645 345.961 348.365 345.276 347.816 344.839 cv
346.565 343.842 344.583 344.716 343.789 346.104 cv
343.421 346.748 343.218 347.472 342.888 348.136 cv
342.261 349.396 340.999 350.898 339.479 350.967 cv
337.435 351.059 335.139 350.356 333.07 350.231 cv
332.264 350.182 331.428 350.155 330.68 350.458 cv
328.914 351.171 328.405 354.019 329.035 355.609 cv
329.425 356.59 330.31 357.301 331.263 357.755 cv
332.693 358.437 334.578 358.829 336.158 358.711 cv
337.851 358.585 339.472 358.753 341.026 359.486 cv
343.693 360.745 346.794 362.555 349.487 360.102 cv
350.206 359.446 350.559 358.464 350.643 357.495 cv
350.791 355.777 350.208 354.115 350.184 352.41 cv
cp
.172549 .164706 .843137 rgb
f
364.373 348.969 mo
364.166 348.318 363.704 348.496 363.195 348.349 cv
362.562 348.168 361.97 347.719 361.484 347.29 cv
360.858 346.737 360.319 346.095 359.738 345.495 cv
358.234 343.939 356.443 342.662 354.482 341.747 cv
353.88 341.466 353.252 341.216 352.59 341.154 cv
351.334 341.036 350.126 341.602 348.992 342.154 cv
347.893 342.688 347.895 343.394 347.838 344.488 cv
347.811 345.01 347.827 345.54 347.959 346.046 cv
348.224 347.064 348.931 347.904 349.653 348.67 cv
350.487 349.554 351.385 350.405 352.464 350.962 cv
353.346 351.416 354.333 351.666 355.158 352.216 cv
355.714 352.585 356.173 353.078 356.575 353.606 cv
357.729 355.123 359.483 356.263 361.452 356.074 cv
363.313 355.896 364.769 354.482 364.84 352.588 cv
364.87 351.773 364.727 350.964 364.584 350.162 cv
364.495 349.658 364.468 349.264 364.373 348.969 cv
cp
.0901961 .0666667 .745098 rgb
f
348.174 292.996 mo
348.636 292.386 349.476 292.245 350.23 292.11 cv
353.537 291.521 356.77 290.208 360.026 289.418 cv
361.489 289.064 362.957 288.82 364.438 288.789 cv
367.661 285.881 li
368.06 288.684 368.296 291.534 367.974 294.347 cv
367.272 300.474 365.671 314.616 365.253 321.359 cv
364.934 326.502 365.522 348.021 364.599 349.715 cv
364.166 350.512 362.791 350.772 361.977 350.945 cv
360.889 351.174 359.759 351.206 358.662 351.025 cv
357.433 350.823 356.173 350.301 355.494 349.256 cv
354.867 348.291 354.848 347.067 354.848 345.916 cv
354.85 340.452 354.846 335.025 354.469 329.571 cv
354.348 327.808 354.207 326.046 354.053 324.286 cv
353.968 323.315 353.878 322.343 353.786 321.373 cv
353.705 320.545 353.86 318.932 353.468 318.213 cv
351.782 315.118 350.335 311.791 350.085 309.965 cv
349.731 307.367 349.742 304.74 349.475 302.135 cv
349.23 299.751 348.359 297.553 347.934 295.198 cv
347.8 294.449 347.713 293.602 348.174 292.996 cv
cp
.854902 .160784 .317647 rgb
f
341.65 325.605 mo
341.654 325.722 341.657 325.836 341.659 325.95 cv
341.753 331.275 341.379 336.592 341.25 341.914 cv
341.211 343.506 341.289 345.113 341.213 346.69 cv
341.152 347.928 340.489 349.921 341.378 350.986 cv
342.32 352.114 344.182 352.771 345.581 352.981 cv
346.774 353.161 348.006 353.064 349.158 352.709 cv
349.584 352.578 350.353 352.4 350.613 352.027 cv
350.829 351.716 350.881 351.1 350.972 350.736 cv
351.432 348.895 351.785 347.018 352.061 345.142 cv
352.886 339.531 353.318 333.861 353.623 328.201 cv
353.69 326.947 353.75 325.694 353.801 324.439 cv
353.858 323.021 353.705 323.542 353.79 322.125 cv
353.858 320.992 354.314 319.374 353.993 318.278 cv
353.378 316.175 350.595 317.367 349.234 317.836 cv
347.254 318.518 344.776 318.855 343.077 320.168 cv
341.38 321.48 341.591 323.667 341.65 325.605 cv
cp
1 .196078 .384314 rgb
f
341.252 288.73 mo
343.041 287.114 348.563 289.095 350.637 289.217 cv
352.553 289.329 354.473 289.35 356.391 289.332 cv
357.241 289.324 358.333 289.484 359.157 289.283 cv
359.873 289.109 360.438 288.551 361.187 288.373 cv
361.775 288.233 363.426 287.015 363.89 287.401 cv
364.599 287.99 363.617 290.357 363.419 291.258 cv
361.665 299.262 356.377 306.007 354.809 314.024 cv
354.149 317.394 354.286 320.866 353.936 324.283 cv
353.893 324.705 353.841 325.134 353.673 325.525 cv
353.382 326.2 352.78 326.686 352.167 327.093 cv
350.659 328.091 348.941 328.762 347.162 329.079 cv
346.209 329.248 345.237 329.316 344.27 329.277 cv
343.536 329.247 342.599 328.898 341.931 329.269 cv
341.513 326.411 341.818 323.46 341.222 320.65 cv
340.595 317.698 340.73 314.503 340.629 311.473 cv
340.406 304.816 340.287 298.154 340.464 291.495 cv
340.486 290.666 340.524 289.795 340.956 289.087 cv
341.038 288.952 341.138 288.834 341.252 288.73 cv
cp
f
338.116 255.102 mo
338.056 255.862 338.184 257.345 338.927 257.844 cv
339.538 258.256 340.879 258.104 341.573 258.168 cv
343.757 258.371 345.94 258.512 348.123 258.652 cv
349.114 258.717 350.105 258.781 351.094 258.813 cv
353.995 258.904 356.882 258.714 359.707 258.246 cv
360.804 258.064 362.626 257.8 363.499 257.071 cv
364.364 256.349 364.445 255.179 364.3 254.014 cv
364.041 251.934 363.013 249.894 361.034 249.099 cv
359.049 248.301 357.086 248.642 355.119 248.894 cv
350.569 249.475 346.074 250.346 341.665 251.502 cv
340.881 251.708 340.084 251.93 339.429 252.404 cv
338.678 252.945 338.202 254.001 338.116 255.102 cv
cp
.968627 .968627 .968627 rgb
f
339.448 252.734 mo
339.666 251.734 340.039 250.825 340.427 249.884 cv
340.726 249.157 341.555 248.543 342.132 248.012 cv
343.479 246.772 344.949 245.666 346.511 244.711 cv
348.228 243.661 350.056 242.794 351.957 242.135 cv
353.711 241.526 355.389 240.617 357.121 239.91 cv
360.521 238.522 364.194 237.7 367.576 239.611 cv
368.13 239.923 368.654 240.292 369.11 240.736 cv
371.908 243.461 371.589 247.859 371.151 251.385 cv
370.585 255.927 369.237 260.322 368.446 264.824 cv
368.281 265.763 368.141 266.706 368.022 267.65 cv
367.612 270.918 367.906 274.276 367.462 277.514 cv
367.076 280.331 367.958 283.547 368.328 286.376 cv
368.556 288.119 368.749 290.031 367.794 291.508 cv
366.766 293.1 364.745 293.672 362.898 294.096 cv
356.131 295.649 348.893 296.839 342.373 294.451 cv
341.212 294.026 339.992 293.392 339.53 292.245 cv
339.227 291.491 339.308 290.643 339.389 289.834 cv
340.302 280.698 340.545 271.471 339.63 262.335 cv
339.531 261.348 339.502 260.428 339.508 259.448 cv
339.515 258.381 339.165 257.299 339.131 256.219 cv
339.095 255.051 339.198 253.876 339.448 252.734 cv
cp
.0901961 .0666667 .745098 rgb
f
350.486 238.337 mo
350.29 236.991 349.272 237.304 349.786 236.082 cv
350.223 235.045 350.886 234.091 351.777 233.403 cv
352.666 232.715 353.791 232.307 354.914 232.37 cv
355.301 232.392 355.56 232.613 355.944 232.614 cv
357.004 232.618 358.07 232.415 359.127 232.568 cv
360.18 232.721 361.154 232.798 361.153 233.986 cv
361.153 235.57 361.081 237.094 361.586 238.651 cv
361.857 239.484 362.268 240.286 362.34 241.158 cv
362.483 242.872 361.231 244.471 359.682 245.22 cv
357.778 246.141 355.626 246.056 353.599 245.762 cv
352.582 245.615 351.152 245.412 350.556 244.444 cv
350.107 243.713 350.299 242.756 350.396 241.958 cv
350.541 240.748 350.664 239.553 350.486 238.337 cv
cp
1 .74902 .635294 rgb
f
345.969 221.109 mo
345.329 221.887 344.83 222.762 344.677 223.788 cv
344.336 226.074 345.256 228.424 344.76 230.693 cv
344.279 232.891 345.221 237.882 349.556 239.161 cv
351.748 239.808 356.075 239.051 357.468 238.384 cv
359.336 237.488 360.569 235.678 361.674 233.925 cv
370.727 219.55 352.109 213.638 345.969 221.109 cv
cp
f
364.321 218.285 mo
363.881 217.833 363.343 217.445 362.686 217.139 cv
362.488 217.047 362.276 216.96 362.135 216.792 cv
362.03 216.667 361.976 216.508 361.907 216.36 cv
361.598 215.697 360.983 215.229 360.344 214.874 cv
357.929 213.53 355 213.466 352.264 213.859 cv
351.34 213.992 350.415 214.176 349.557 214.544 cv
348.578 214.963 347.713 215.613 346.931 216.335 cv
345.824 217.355 344.773 218.555 344.198 219.964 cv
343.931 220.618 343.878 221.311 343.688 221.976 cv
343.518 222.574 343.727 223.28 344.225 223.661 cv
344.439 223.824 344.693 223.929 344.916 224.08 cv
345.834 224.698 346.005 226.129 346.402 227.097 cv
346.653 227.709 347.149 228.043 347.291 228.7 cv
347.439 229.384 347.426 230.098 347.643 230.769 cv
347.746 231.086 347.958 231.43 348.291 231.45 cv
348.428 231.459 348.564 231.408 348.681 231.335 cv
349.068 231.096 349.268 230.647 349.396 230.21 cv
349.524 229.773 349.606 229.313 349.848 228.928 cv
349.989 228.79 li
350.151 228.786 li
350.617 228.877 350.923 229.223 351.146 229.617 cv
351.415 230.092 351.559 230.626 351.7 231.154 cv
351.923 231.982 351.951 232.685 352.055 233.509 cv
352.161 234.345 352.397 235.237 352.983 235.869 cv
354.297 237.288 356.827 237.208 358.537 236.828 cv
359.156 236.691 359.779 236.545 360.35 236.271 cv
361.67 235.635 362.57 234.389 363.411 233.19 cv
364.18 232.094 364.958 230.976 365.363 229.7 cv
365.592 228.981 365.697 228.229 365.8 227.481 cv
366.22 224.451 366.537 220.564 364.321 218.285 cv
cp
.172549 .164706 .843137 rgb
f
350.87 227.414 mo
352.572 227.044 353.324 229.113 352.388 230.937 cv
352.115 231.468 351.568 231.986 351.175 232.436 cv
348.482 235.515 347.289 232.791 348.135 231.753 cv
350.101 229.341 348.728 227.88 350.87 227.414 cv
cp
1 .74902 .635294 rgb
f
350.83 230.733 mo
351.001 230.523 352.789 229.076 351.338 228.486 cv
350.936 228.323 350.572 228.707 350.573 229.107 cv
350.574 229.315 350.668 229.513 350.667 229.72 cv
350.667 229.843 350.633 229.964 350.586 230.076 cv
350.454 230.386 349.9 230.746 350.078 231.143 cv
350.235 231.495 350.732 230.854 350.83 230.733 cv
cp
.952941 .662745 .517647 rgb
f
337.468 261.853 mo
337.281 264.127 337.062 266.398 336.843 268.669 cv
336.618 271.005 335.796 273.916 337.458 275.985 cv
339.338 278.322 342.134 277.218 343.402 274.976 cv
345.455 271.352 346.523 265.369 347.06 262.564 cv
337.468 261.853 li
cp
1 .74902 .635294 rgb
f
346.688 267.279 mo
347.122 266.609 347.211 265.621 347.4 264.856 cv
348.216 261.538 348.643 258.114 348.536 254.695 cv
348.453 252.032 348.572 248.773 345.507 247.767 cv
343.601 247.142 341.787 247.964 340.659 249.509 cv
339.193 251.518 338.483 254.045 338.021 256.454 cv
337.548 258.923 336.969 261.315 336.825 263.851 cv
336.79 264.471 336.781 265.13 337.098 265.663 cv
337.444 266.242 338.1 266.547 338.718 266.818 cv
340.108 267.429 341.525 268.048 343.034 268.216 cv
343.981 268.322 345.023 268.256 345.919 267.916 cv
346.26 267.787 346.504 267.561 346.688 267.279 cv
cp
.172549 .164706 .843137 rgb
f
330.358 288.964 mo
330.146 289.697 329.574 292.834 329.838 293.55 cv
330.1 294.266 330.887 294.849 331.612 294.613 cv
331.97 294.496 334.337 290.803 334.539 290.485 cv
335.937 288.285 337.399 286.124 338.759 283.899 cv
340.031 281.82 341.963 278.79 342.88 276.527 cv
343.438 275.146 344.354 273.261 344.432 272.05 cv
344.516 270.781 342.018 270.954 340.998 270.351 cv
340.063 269.797 338.919 269.617 337.857 269.839 cv
336.959 270.026 336.735 271.044 336.432 271.832 cv
335.812 273.442 335.41 275.126 334.796 276.737 cv
332.921 281.667 331.852 283.798 330.358 288.964 cv
cp
1 .74902 .635294 rgb
f
329.495 289.605 mo
329.069 289.915 328.615 290.191 328.221 290.591 cv
327.06 291.773 325.951 293.122 325.624 294.804 cv
325.555 295.157 325.549 295.574 325.814 295.818 cv
326.083 295.691 326.353 295.564 326.622 295.437 cv
326.773 295.406 li
326.879 295.518 li
327.17 296.107 326.67 297 326.494 297.569 cv
326.252 298.348 326.016 299.128 325.776 299.908 cv
325.721 300.086 325.665 300.269 325.675 300.455 cv
325.684 300.642 325.773 300.836 325.94 300.92 cv
326.036 300.969 326.15 300.977 326.245 301.029 cv
326.431 301.131 326.492 301.37 326.496 301.583 cv
326.505 302.025 326.431 302.539 326.606 302.958 cv
326.957 303.799 327.425 302.746 327.829 302.637 cv
328.394 302.484 328.366 303.313 328.833 303.35 cv
329.159 303.376 329.345 302.993 329.438 302.679 cv
329.678 301.868 329.778 301.078 330.432 300.475 cv
330.547 300.411 li
330.661 300.404 330.696 300.556 330.739 300.661 cv
330.895 301.048 331.344 300.924 331.646 300.853 cv
332.024 300.764 332.18 300.659 332.308 300.249 cv
333.048 297.881 333.642 295.467 334.084 293.025 cv
334.201 292.38 334.308 291.73 334.502 291.104 cv
334.709 290.438 334.977 289.803 335.372 289.236 cv
335.762 288.678 336.178 288.115 336.522 287.526 cv
336.897 286.884 336.749 285.957 336.612 285.256 cv
336.565 285.012 336.503 284.757 336.334 284.575 cv
336.193 284.423 335.993 284.34 335.798 284.269 cv
335.15 284.033 334.458 283.879 333.771 283.942 cv
333.084 284.006 332.399 284.306 331.974 284.85 cv
331.644 285.273 331.492 285.805 331.349 286.322 cv
331.142 287.072 330.934 287.833 330.547 288.508 cv
330.27 288.992 329.895 289.313 329.495 289.605 cv
cp
f
264.162 396.599 mo
264.16 396.415 264.164 396.231 264.175 396.046 cv
264.3 394.158 263.572 392.562 262.884 390.816 cv
262.626 390.164 262.347 389.481 261.799 389.044 cv
260.551 388.05 258.573 388.922 257.781 390.308 cv
257.414 390.95 257.211 391.672 256.882 392.334 cv
256.257 393.592 254.997 395.091 253.48 395.159 cv
251.442 395.251 249.151 394.549 247.086 394.425 cv
246.282 394.377 245.447 394.349 244.701 394.651 cv
242.94 395.363 242.432 398.204 243.061 399.79 cv
243.449 400.77 244.332 401.479 245.283 401.932 cv
246.71 402.613 248.591 403.004 250.168 402.886 cv
251.856 402.76 253.473 402.928 255.024 403.66 cv
257.686 404.916 260.779 406.721 263.466 404.273 cv
264.184 403.62 264.536 402.639 264.619 401.672 cv
264.767 399.958 264.186 398.3 264.162 396.599 cv
cp
1 .196078 .384314 rgb
f
278.776 392.709 mo
278.568 392.059 278.108 392.237 277.6 392.091 cv
276.968 391.911 276.378 391.462 275.893 391.034 cv
275.268 390.484 274.73 389.842 274.151 389.243 cv
272.65 387.691 270.863 386.417 268.907 385.503 cv
268.306 385.223 267.679 384.974 267.019 384.912 cv
265.766 384.795 264.561 385.359 263.429 385.91 cv
262.332 386.442 262.334 387.147 262.277 388.238 cv
262.251 388.759 262.266 389.288 262.398 389.793 cv
262.662 390.809 263.368 391.647 264.089 392.411 cv
264.92 393.293 265.816 394.142 266.894 394.698 cv
267.773 395.151 268.758 395.401 269.581 395.949 cv
270.136 396.318 270.594 396.809 270.995 397.337 cv
271.313 397.753 271.551 398.29 271.998 398.583 cv
272.926 399.19 274.029 399.681 275.144 399.761 cv
277.338 399.918 279.157 398.586 279.242 396.32 cv
279.272 395.508 279.129 394.7 278.986 393.899 cv
278.896 393.397 278.87 393.004 278.776 392.709 cv
cp
f
262.612 336.862 mo
263.074 336.254 263.912 336.112 264.664 335.978 cv
267.964 335.39 271.19 334.08 274.438 333.292 cv
275.898 332.938 277.362 332.695 278.84 332.665 cv
282.057 329.763 li
282.454 332.56 282.69 335.403 282.368 338.21 cv
281.668 344.324 280.07 358.434 279.653 365.16 cv
279.335 370.293 279.366 375.436 279.324 380.575 cv
279.283 385.747 280.966 391.482 279.245 394.446 cv
278.553 395.638 276.725 396.128 274.915 396.343 cv
273.305 396.535 271.63 395.928 270.481 394.785 cv
269.298 393.608 269.497 387.007 269.31 381.399 cv
269.221 378.715 269.079 376.034 268.894 373.355 cv
268.772 371.596 268.632 369.838 268.479 368.081 cv
268.394 367.112 268.305 366.144 268.212 365.175 cv
268.132 364.348 268.286 362.74 267.895 362.022 cv
266.212 358.934 264.768 355.614 264.52 353.793 cv
264.166 351.201 264.177 348.579 263.911 345.98 cv
263.667 343.602 262.797 341.408 262.374 339.059 cv
262.239 338.312 262.154 337.467 262.612 336.862 cv
cp
.0901961 .0666667 .745098 rgb
f
256.104 369.398 mo
256.107 369.514 256.11 369.628 256.112 369.742 cv
256.205 375.055 255.833 380.36 255.704 385.67 cv
255.654 387.735 254.078 392.061 254.131 394.833 cv
254.168 396.807 263.78 400.554 264.907 398.242 cv
267.903 392.096 268 373.848 268.227 368.234 cv
268.284 366.819 268.131 367.339 268.215 365.925 cv
268.283 364.795 268.739 363.181 268.419 362.087 cv
267.805 359.988 265.029 361.178 263.669 361.647 cv
261.694 362.327 259.223 362.662 257.528 363.973 cv
255.835 365.281 256.045 367.464 256.104 369.398 cv
cp
.172549 .164706 .843137 rgb
f
255.706 332.606 mo
257.491 330.993 263 332.97 265.07 333.092 cv
266.982 333.204 268.898 333.224 270.812 333.206 cv
271.66 333.199 272.75 333.358 273.571 333.158 cv
274.286 332.984 274.849 332.427 275.596 332.249 cv
276.183 332.11 277.83 330.894 278.294 331.279 cv
279.001 331.867 278.021 334.229 277.824 335.127 cv
276.073 343.114 270.798 349.844 269.233 357.843 cv
268.575 361.205 268.711 364.669 268.362 368.079 cv
268.319 368.5 268.267 368.928 268.099 369.318 cv
267.809 369.991 267.208 370.477 266.596 370.882 cv
265.092 371.878 263.379 372.548 261.603 372.864 cv
260.652 373.033 259.682 373.1 258.717 373.062 cv
257.986 373.031 257.051 372.684 256.384 373.053 cv
255.967 370.202 256.271 367.257 255.676 364.454 cv
255.051 361.509 255.185 358.321 255.084 355.297 cv
254.862 348.655 254.743 342.008 254.92 335.365 cv
254.942 334.537 254.98 333.668 255.411 332.962 cv
255.493 332.827 255.592 332.709 255.706 332.606 cv
cp
f
253.345 296.564 mo
253.35 296.357 li
253.377 295.163 253.379 293.776 254.07 292.737 cv
254.77 291.685 260.896 288.032 266.276 286.094 cv
271.359 284.263 276.548 280.533 281.971 283.596 cv
289.112 287.634 284.471 299.469 282.839 308.753 cv
281.745 314.989 282.204 317.304 282.345 321.579 cv
282.502 326.359 283.712 330.203 283.199 333.415 cv
282.873 335.454 281.141 337.078 277.304 337.959 cv
270.552 339.509 263.329 340.696 256.825 338.314 cv
253.576 337.124 253.664 335.542 253.847 333.707 cv
256.015 312.023 253.231 303.802 253.345 296.564 cv
cp
.721569 .901961 .964706 rgb
f
264.92 281.678 mo
264.724 280.334 263.708 280.646 264.222 279.428 cv
264.657 278.394 265.319 277.442 266.207 276.755 cv
267.095 276.068 268.217 275.661 269.338 275.724 cv
269.724 275.745 269.982 275.966 270.365 275.967 cv
271.423 275.971 272.487 275.769 273.541 275.922 cv
274.592 276.075 275.564 276.151 275.563 277.336 cv
275.562 278.917 275.49 280.438 275.995 281.991 cv
276.265 282.821 276.675 283.622 276.747 284.492 cv
276.89 286.203 275.641 287.797 274.095 288.545 cv
272.195 289.464 270.047 289.38 268.026 289.087 cv
267.011 288.939 265.584 288.737 264.99 287.77 cv
264.541 287.042 264.734 286.088 264.829 285.291 cv
264.974 284.083 265.097 282.891 264.92 281.678 cv
cp
1 .74902 .635294 rgb
f
260.412 264.488 mo
259.775 265.265 259.121 265.719 258.908 266.732 cv
258.42 269.048 259.701 271.787 259.206 274.05 cv
258.726 276.244 259.667 281.224 263.991 282.5 cv
266.179 283.146 270.496 282.39 271.886 281.724 cv
273.75 280.831 274.98 279.025 276.082 277.276 cv
285.115 262.933 266.539 257.033 260.412 264.488 cv
cp
f
278.723 261.67 mo
278.285 261.22 277.748 260.833 277.093 260.527 cv
276.894 260.435 276.683 260.348 276.542 260.181 cv
276.438 260.055 276.383 259.898 276.315 259.75 cv
276.007 259.089 275.393 258.622 274.756 258.267 cv
272.346 256.927 269.423 256.863 266.693 257.255 cv
265.771 257.388 264.849 257.57 263.992 257.938 cv
263.016 258.356 262.153 259.005 261.373 259.725 cv
260.268 260.743 259.22 261.94 258.645 263.345 cv
258.378 263.999 258.326 264.69 258.137 265.353 cv
257.968 265.95 258.175 266.654 258.673 267.034 cv
258.887 267.197 259.139 267.302 259.362 267.452 cv
260.277 268.069 260.449 269.497 260.844 270.463 cv
261.095 271.073 261.59 271.406 261.732 272.062 cv
261.879 272.746 261.866 273.457 262.082 274.126 cv
262.185 274.443 262.397 274.786 262.729 274.807 cv
262.866 274.816 263.001 274.764 263.118 274.692 cv
263.504 274.453 263.705 274.005 263.832 273.569 cv
263.96 273.133 264.041 272.674 264.284 272.29 cv
264.423 272.152 li
264.586 272.148 li
265.05 272.239 265.356 272.585 265.577 272.977 cv
265.846 273.452 265.99 273.984 266.131 274.51 cv
266.353 275.337 266.381 276.038 266.485 276.861 cv
266.59 277.695 266.826 278.585 267.411 279.215 cv
268.722 280.631 271.246 280.551 272.953 280.172 cv
273.57 280.035 274.192 279.89 274.762 279.615 cv
276.078 278.982 276.977 277.738 277.816 276.543 cv
278.583 275.449 279.359 274.333 279.763 273.06 cv
279.992 272.343 280.096 271.593 280.199 270.847 cv
280.618 267.823 280.935 263.944 278.723 261.67 cv
cp
.0901961 .0666667 .745098 rgb
f
265.302 270.779 mo
267.001 270.41 267.751 272.475 266.817 274.294 cv
266.545 274.825 265.999 275.341 265.607 275.79 cv
262.92 278.862 261.729 276.144 262.573 275.108 cv
264.536 272.703 263.165 271.244 265.302 270.779 cv
cp
1 .74902 .635294 rgb
f
265.262 274.091 mo
265.433 273.881 267.217 272.438 265.769 271.849 cv
265.369 271.686 265.006 272.069 265.007 272.468 cv
265.007 272.676 265.101 272.874 265.101 273.081 cv
265.101 273.203 265.067 273.323 265.019 273.435 cv
264.888 273.745 264.335 274.103 264.512 274.5 cv
264.669 274.85 265.165 274.211 265.262 274.091 cv
cp
.952941 .662745 .517647 rgb
f
249.962 306.834 mo
249.944 309.206 249.89 311.578 249.838 313.951 cv
249.785 316.391 249.156 319.473 251.039 321.49 cv
253.167 323.77 255.982 322.41 257.126 319.988 cv
258.975 316.071 259.624 309.784 259.966 306.834 cv
249.962 306.834 li
cp
1 .74902 .635294 rgb
f
260.347 312.075 mo
260.533 310.796 261.039 308.26 261.099 307.264 cv
261.837 294.972 261.447 291.47 257.145 290.973 cv
254.188 290.632 251.033 293.336 250.122 301.192 cv
249.858 303.465 249.465 308.599 249.374 310.689 cv
252.285 312.216 257.013 312.471 260.347 312.075 cv
cp
.956863 .960784 .980392 rgb
f
244.672 335.497 mo
244.509 336.273 244.157 339.571 244.484 340.293 cv
244.812 341.015 245.673 341.559 246.407 341.259 cv
246.77 341.11 248.941 337.099 249.125 336.753 cv
250.406 334.363 251.756 332.01 252.996 329.599 cv
254.155 327.345 255.926 324.054 256.702 321.636 cv
257.176 320.161 257.981 318.135 257.97 316.874 cv
257.958 315.552 255.38 315.923 254.276 315.375 cv
253.265 314.873 252.064 314.774 250.98 315.085 cv
250.063 315.349 249.91 316.421 249.655 317.262 cv
249.136 318.979 248.848 320.758 248.336 322.475 cv
246.77 327.733 245.825 330.025 244.672 335.497 cv
cp
1 .74902 .635294 rgb
f
243.826 336.228 mo
243.408 336.582 242.959 336.903 242.582 337.349 cv
241.467 338.664 240.421 340.148 240.211 341.917 cv
240.167 342.289 240.193 342.722 240.487 342.954 cv
240.756 342.802 241.026 342.649 241.296 342.496 cv
241.45 342.454 li
241.568 342.561 li
241.915 343.149 241.465 344.114 241.326 344.718 cv
241.135 345.545 240.95 346.372 240.761 347.199 cv
240.718 347.388 240.674 347.582 240.698 347.775 cv
240.723 347.967 240.829 348.162 241.009 348.236 cv
241.113 348.279 241.232 348.279 241.334 348.326 cv
241.535 348.417 241.616 348.661 241.637 348.881 cv
241.68 349.338 241.643 349.878 241.856 350.298 cv
242.285 351.144 242.69 350.016 243.101 349.872 cv
243.674 349.67 243.71 350.531 244.196 350.533 cv
244.537 350.535 244.7 350.124 244.772 349.79 cv
244.958 348.931 245.001 348.105 245.634 347.429 cv
245.748 347.354 li
245.865 347.338 245.914 347.493 245.966 347.598 cv
246.158 347.988 246.614 347.824 246.922 347.728 cv
247.307 347.607 247.461 347.485 247.562 347.051 cv
248.148 344.538 248.577 341.988 248.848 339.421 cv
248.92 338.743 248.981 338.062 249.135 337.398 cv
249.298 336.691 249.527 336.012 249.894 335.393 cv
250.255 334.785 250.643 334.168 250.955 333.533 cv
251.294 332.837 251.07 331.887 250.873 331.17 cv
250.805 330.921 250.722 330.662 250.533 330.486 cv
250.375 330.339 250.161 330.268 249.954 330.209 cv
249.263 330.015 248.534 329.908 247.826 330.026 cv
247.118 330.145 246.431 330.51 246.032 331.107 cv
245.722 331.57 245.605 332.133 245.497 332.681 cv
245.339 333.474 245.183 334.279 244.833 335.009 cv
244.583 335.532 244.219 335.894 243.826 336.228 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 19.2.1
%%For: (MSI) ()
%%Title: (2004.i039.010.P.m004.c33.lottery jackpot isometric icons-07.eps)
%%CreationDate: 3/18/2021 5:39 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9?5dcgXWSnJ%TZU4_ff$]_3,^@.Y"9JT:Z:mTD/VA\bGaV7NL\J:8>$A@NbI1LcC`f3.PAsd.<`aG2<SdW;;7bV`(!F#V
%FT(+)KJ76nYp)%";n+mdPe-P>Ii^b!=[)I]Oa:X*Khg1![1A`!K%FaKlBQ\%[?eo3b1@8Qq/^eD:OMdaQ28fp\rn^O_E4_;lSM\G
%Ge&.,RVsQa;PQ_AP[8gjK"#+fr(ZSPktVt^NkBNS-3IafpIC"nl/3q_Q2Xq]I-@,f>O?%:?*;en/7R5\NoZmp]LJJ7^gI-Tr3HA6
%'3VN'mo8$=bs\`Or+n#5E/:@/IKNeXoTk.@$2R.js7"p!dr"US=V:H/?FSm#pfgN2$'W,FE0/%WkhJI=$.FLH\p?XNI/mIeBTe%b
%B"_'d2_SA[(CYX2HdtS3htD;'D,![?A&lIdo_m&'%VqnS5ff`I@8u'G8a4%+Nfc0C`/87I8OHSXHR.SK;tb[C-!konU=W?pT5(fq
%b5[/12D#&,;pC)gMV!5W/%8sPP1j/I[(Ue5X2)2kYNIB\,(fkbkYKah38Zjmg-EFG8dEsa/`CCBZT"H?DZ5uX'IqU&p)@?*\Gi'H
%.L\T;MA0qp:[2ga=;!<^R>/J^n2I$G(>KuIa1r;bZ#*ah"!H=rB)0)E>?_]L(7&,(qfKGQ0)"M^ee8Pn6!tt/^q[&PYF7&YhJRZt
%J,2Jrc0PTn6VHhfiO?:2`D!t&MpT>UVL^+0^b1oK\U*!,$U'+c3Xl6$24VC[_[GQE%fFq.hXE>aoUsW`LYL("Vm0/Nec5Kl6E4-P
%o+J[sR[;rf$$s1M=J3*MZi.5e]S+&f'YSmTl]_-b@r]AY8!dPoE%s>RC;%a)n%D'"h?5#R-MGd"_d@?sPVJ$TB"e6V_r&(SU'q=.
%de)LRGNl=1J"sXe!XL.1)h;/%CB&ODH6Y*tpPUfd5p]m]2nMWP=6UfOP)!')%>c+=p4l1K!c9jr/Mp*"U.jnbGSKC@q=Y!U$a3TI
%F[tW0p1B?3E*JP=1\jY>I,<(+0$8l9]%Le',`_3`8pBohkM7cpT@"m21EmZQY?BV`0g*?\<?29.#XXR/RGtDmh[95n4Ii7Opk[TQ
%Q@\9j&GOg@7mHSfQ$1>`ObiPk=7rY$.CZ>5d=X"U+PY%mMKe]neb12,qb_nk(P\^a7pS6Vjssm)GCKd_X]2HSWK9+)PhTN*2s\uu
%g7jG!MgWDe%/E&IH:(l6T\"dACLq(O7M?\)4F4aO.\r%nb%gZp@L`>1@;klL=<R5t>:uR7O`15fn7Xtin8G^4K81t-J7eVYe+Q%g
%/ORQXZ^Dp%;n+5WMG:9D4nQ\X%LD:d6i<_X$c.RQ$UW;`/LFMZ@*mVQJ#@eeQ&b/&ZWq<RN9F<c=1K,@5kS?QC1&[,o(b^9!]5AH
%])j>e0`OUmj59)*iE$-nIbc"MWL_L;V/_V^'pCp4(F-_ISaHiP3gllH7sm'c-'DQp8OWW^YP3&o:o6r6[QD_in/c?KD_cM2Xbg`U
%%Xr$j9a7HY[5sR$Ema?#B0moD=d-Z^bI>,he,.ODKo@3b#5[3lE;F+dC7XX=Tq25(Mo(Rlc?BFjXa\bPK/l"2Zki>P!)XH_qKbXG
%2PVB+iuj^?,e`5066e2Sn`t-A96=/%1^i.uqkOf<>qLr.X5+f<NLXAVLjHsSk/$eL!(sH\FNa/oD3Xt^?Praeq1X4#(3sI'f]>':
%JrGu:'3NM*V8R]Hb"Wm1Yq%b=+O#]nB?%+0s+W%*C?EA-Xh:X">Hot#$I%<fEtRC]1[<.P&2URE(]/6X0,OM+U$E?gErWJ[S2jBZ
%>U3]h`g9oWkJ3RF#/p02F(t(bYB"`I0@kX0G(OTIrLL8eB9Wgp7HYeF!SqK,ZedoXWiqCmAd5m)'jPRK;(U^MmBaF3!k.]k<i_ao
%V+9"mFPG(5;Q8cca%Usu=X]_,R!KhsJg;a6;7XY-e@AFaLn\mI^[@WDpPDm^P05@h4^p9UJbFBe]GU%FoVn6cPpin'eaKY3$u;U3
%4/3R'(?Ln0+tO3hh5TJ)>Q6VH26Rc!XPm7K%)D)rAa6[(4+AROHEY6okXJrJW&SO7R\bDJ4"B<dM2K%81[8q\=IL"V6`8`Z(0Vt;
%VVE6tV`k_1s,@#uJ+)1432i0ZmG2GAU#k/jN?]`@GEpu<P=Emrf`dK]RX346GNk);7Q9Hcb;!iHTMf[V:<bd3!>-mG9-XKXf]fPH
%LnLk'8&Yr6?nh&<hrcBE*/1Pi#d$bumU4*pbO(4ff8d-Z1Sn?ZT_GXa=JhD[7hK5QTo&SBNjIpP?R9\G/(pFUYBfOZ-Kj1<REtR$
%Xg<haHu@-S&93u]-tr%]b/]A>c*W6`,;%$%#;oFAVjVkEP&>U&Ij66(idDd;Y\taQi+Q`>'N'Hidn[9bX^LC2<)k]j0)K7p=RJT9
%2o"BY5uT>pfo*Vkc+d2X\)(q+i5pQ_PggDY+nN'</'<m+Bbt9an;;p$/A.]4I"XKSlq"=*35$ijVQhQd?Rp+2lngEj*,^^"MkV##
%7:'\*[/>l#MiU\,3HNs7UCc>4l^'iD[sr]UJ/Lo_c1h;CB;;JIAl2Gr!G:UW58>>9OL`HaC0p#CX3aiN;6gBnYM9k?LCnPe=,1_h
%Q$EsZG61/87VYBJ>LD8+0tl/RbS7d'bH45[?h!R]Qb@cV-<3eu&&Uh,[EXH('>]Hq*W7u/L[k'*cUnWE'R`1n"%tkRR+6Z+WO@1d
%`1lCp_8Ze<l'?7#&Y/.>&IB&"R<ju,ARFmWSm;t#?JdNi:E-d.+r2Dgb*>T+MOhoG/SG8:%"Qk+p_s9B,&@A[mg@->]bY%inqBE.
%g)6*:m"6k9q6%N5P\XSh6Ie*+6Nt-t1'1RkY'1&629P\#VMLt:0uUcn$B1iP?;h!,.i-<QO^SrmlZTtJ`JNM?eY@@cor2!:V.RCZ
%7<2>947bKW0Zof-*_@<OIWkrf^@F)[.fq\<R^Vh4Ldiri]Mm-#?Ro2&WKZH$21mnKR&r&<PpfL[R<n%./h0_g\.W?[R!T;n;$unp
%M)*,\m6s$@DWY\2U6+9^CRDZ87>YOWbXgfB`bSEYo2LV\"dl:Pr4!MR[VJ`X>I`Jq&.s;B)6$&]A.?Jb."?2)k,K2n0Mf));1P'\
%rAgPOANjm,,$@)c@StHt/P9HCC/L]*1\Dr#?>EC^am0i'qV06Bb[O:@,Y"8c[@HX%o-0IW`@EZik>faO6N#D;guSt,lMSNKc=rTi
%ml8#B\Do.*YB`254%`a?5%S?g:76t#g/[4&N9/d+agDCI)U#NjY0EqNgM0&JCp)$T=IU[ZbsN\7V-5G#XsV\.@r:Y0g,p6gYuHXX
%g6JI;0I([cbEWC?.,6#>i20Z$R7[J!CijeXZ=>eMJ:a/J@Q#-8UP&-P?KIiCs)g@5)]8VM/Ne6`=^Og(&ZYbRY(r,Hr;qC[<;nbg
%C45/O$aY#$bG:u(rKCGR6EKKV6<N`TQ@OJ:iA^[Y*?HKgW.K.e:T.tbn;NgXJBcRM2'U2b)t=LtG6CpV<qK#Gg??_9qs'7^?G;ti
%ZrDUjG6M/tilh*pnJOFYA_KhQZUe/"cV3_T1iT>K=8;q.q]."6I`&"F1DPA+2Ao>i<u^fJ.*qieK^7+M9bpEL6>Y]cD]s`i)]?h%
%fr:M3q.Soe^c\1%('0`E;5H*833^l&3<9_"(mQW;K>G2^(p9`IVHtfD+fd#ClVbJbLTFWr?W=^^'JV_&.OMHlGngK=[JW7H+T$sh
%b`@pW`C.WZFmQ2S5k.Uajn[4%cGT1(EW.oBs2Oll=igUU%:]TEf@D1pF.Di]D^C6]^*CU(SF__]^2_FWcM8s<M0$C0kb#dRh\h;r
%b^@^F=>#k";6JfD))2[?U8aI^F-=%nE2Hm@dk$&]H5-$WmCr"4jq^@($CDSbobuI4[4'fdoYqS4a.+2ndJA1H'i_r\8u;N.12)sD
%q*c5`X;(.lh?_I;^(=-p9q+22WsDk(7@a<1):S6SH.2A"l_$&HF`<2\kOnLtb4UYD?>k//om/E$)jqCsj(EB0m'j!XpfcQ7IMTuM
%iqQXnX3>P\9L_QDGnp*Y`&LJan"#;M-N[!;s-B^Vp8IlaqP9V<o8^^FfeRhO]4_c4Bl-J.h7Hs(REd)2[i/QRbbXBKm1Kt-_A!@J
%Xa_9tIR`nkLL7SJ!$cHk5MI[k/;@NB.fe`X>S`/-B/*]sIV9^GM$#D>#/tB_?<!;G""u,26h-L&n.Gt4ikS2,G_lMUESr,Q]_j,R
%@La%KE<%Et+C/t28'9YJ,=k`L6+R\.;]ga]e)Md(b?j,=PYAE3fL2Rk500'\"r_,O$q/dD*M5.XVtb[h0#WRO-LjA8G6D%?U>tK&
%A0T0Q-N@k:9\cUfN)*l>[H$'\?;n$EitIfW=>=.0.@tkI(n\Tc4`&HKDOm'+M"0_&bC@dqkt=M_q-s;8I.bd-NaA/CaY[YBnfo+l
%(2miX()8UrgY(nh;Tik9oUB/Aio8/j/'UY:CP9knMk`*r?V/\\dg\Zt)f_k+*V91mZ-<6B%r`Ot0e8FbC<jW%Xit_-h9=0=`#dV`
%G\FtD*_iNYTB0OXH7.83Y1/moU&]8n74X#UG.]>E<eM1gS1(hc*L[noJ;@ZNr44s4H?"o=#jF=/0oO>DN8kb]@q`i$N+ln#3Jh6*
%EtHBJ!^dsJQuYn?a"aGkN5ops30#^<E=DKdgA+8C8?mY&&,o_2R4kr=PrJAVPe(FTD^&Z%_qtbkKa>MKRB_p_A;#SCcLNP?fCXN6
%]NQJ9SMnjpY$d0.(/_24h$4#[-dnt2_9UM'I8_d[C\=HG\Qp$eX6tmh@)(`B-.2kfotIaI\q=b4BbUAbFjNr!nMg@.%)ka)bg)>4
%nVK?&C$s8BgsM8s0%XghUY*-M.5qZ.c$D7)pnhqQ"j%aVJ.s(Eo_S\Sa.;?qVZJ>t2M6UDr.Jc[I`09Z6s6-b4!#XWPX^L8bYu>Z
%,[b5]i%#-g;dSl,"bc+np?JX@do!aQB.5;G-PRaIWBJ?SS$d>>!]3sb"`8]E$5!VJAhKeHVdf1?BqN\\0,I>N`89:A"t93-@W*mm
%k$i6]p?$8GRu:Z?`noK5G]Rq.*]A6A>_H#]B%3B0!*S[6`U7!tcGf3Vm*<T<>gEMXk/j0P"O,*"F":]0*4ffK9YX5E;Qgn_S,"J$
%,513^_4R4'its!.+eNr+NSs!Dn>R%A\+)=>=(7V06@IVq!4*pck2_&Opn5qn4<W[%K$b;e=8=cM[BiK>E4MRuVKsIo.(=].7>cf-
%g:o+7U=?4#?'-+X3CdO=,!8qhb'1rs3@)8*jJ'1cr[g0;0Q[,u2UsoGm3]X(7A?u0f$\pMUo-r$7D=FpAqX@[CF,laTZr<d';>?#
%eS1??"n/COO(N5%Fh]H:+rlQ8BJEGh[G(G=(C0[04G.QG0m(Y(;&?@<pK^)Xo-2W&kmD$NTYno3Rj&-ni!U->d^3]j!b3:3jH1#a
%9CaS%[tkXU5i4Y580`^/c2Y7Xm6o+GG'i)Nq33IpT\GHlOBqjV'-YK0X#PAOXgot<*',kk?'LQ!I)rerD:E?-,ZQr(aqX/FJ$N-0
%-&,c`%GBBqNK'ZJ)+Cf)'\c%UHT'96;B`;B1j):8'ebE9En*3p1%2XKH3tsLIt@P<M1GpnrGpD%1-mn(dknrrW`5Z&#4o"nrO3L0
%:$nB;&R(Oth8,1kQJ33U0@Ke-1Sn?NVmrn*=JdtLEB1$p+/+Nn3QB53lEh9Va(Za"WRm&*81N2KZf)Qn]l&eGqu:HCE>Be?nR[?Z
%DtM9:HMl>sbToX$i>Ffm%iC^'gO>_)At@,GhWF[#[(3g]I`;mFWoda"#j3,MKFHam[p*@B8nLqRMhIu,$2`7iR1(hKN$9eMNjGC8
%B15G>p9D;N]JeST@SZ[kc1`Y)F/EYareug7H/9nFqZ8^#Eu`doS2%8]_>B-$RJ?0mJ72_oO5p$s-MRr!p=-GGgm-Gr8(YZoG(3g>
%7+b!h1BKj1\Nb<cmHLZCnCXE5K?NhZj>D#?jue?FIZn63`M@H7Ihi1s1D-2-'+lu8"Ru;eTt7tpG:ZI/SQauk-H4%g&R!OWBSh!^
%ZgF.(m[DA<r!Tk'SJI!BMh=+ZO.5rKWtaYBKdigCKS"j(F(V1Qc1HtT++G3%.rR;&6Q^ee=fCC5<N5m;8MH&Dc;c1OX99>OXi0ch
%c/=JG+?`?a#jl`7<pX.I6u<\tS\D)T%U]u3/S%;XVnM\B/bnD1s1E'm1P_SC<''O352B`N'1s#*B3le<m'JAXHhgkEghS81Rmi_)
%Uk]8*R`SV\j`?`gWp=Z<?<MtH4,&TSa/b,TUm_hpd6F2Z!8<8)+U"QP\>[PdF>G'sNW-nHFKVaVrTUrl/CePYiITo=@)pm,qTg)Y
%%=)t;<MSL9)^#^S<ffcMGhqP`U]``d@dh%4L!3!">YB%&S>&'7s/P@j*<+Yh4(#M1qJ/sBQHlt^Kt^>?l^-K'QZW'sA\Y3*0+UT_
%^e)4fkS<AJPsp#A*>N;j[8A#prUh6anHs_nLUNhZWenF-k:^#5p_Q%T`/!j>,*%_cQN1W(#`R<q9DCJ%An(EUhe\(bQ*,A>iWNMF
%LOhqY#=4CP6=B)l+\'e*4;aK4Xk5)37tK%enh#t,Y4YLC#@5fogkg`//T9qsYI7e;7gJ"g4bW7PC+!:m=IK=V9M=#ubEu$3=)'Y%
%)NJM;1[uWL]rs[j@ZZP[+.mm(RNIpTSZRCT63emU&,g8M6UZ"4&U#^sA+:Osk?'iB1D.kB9NMtT:+VuHnJmJM=?KA8&^:h[<u'&!
%/=pAA*/iua'@08%'rGQ9PdY]>V)8,"1u"Z]&C;PhnV?3c\d:SHs+lAO/?C3+CL)jPFY'V(@=<L>g6#8O'#_#L=dl2.,UmQc10sf$
%9j=C5+LMY?QI<%&NZb/e/>Zi**D>X$OjZ1^M-/@.7[PAOb3t\)H7WiA=W>Q<gTu]Q.;XR/$L&D=@k*DhTQgY>T`8GBK;6\r76K*u
%H:f_t,F6c_P`DU4m7D!mdTNn2NpKjPAH4Rp@Ml8.;VI8ED,Ld':'JX83i\E&@jrEkku^R8Ss5P$VAgqED:c.#>=iN9-)1dK]-soR
%YpN^)@OW<jkm12@MPYDGV.1s&MZk%BNGZ&!*W.!J4Hc/1)3bre>a3M.6c/l-(Dt_l)[AQ9@3%d=b?.le_E&I`[jS77=#Wf(En5p3
%C+fI(F^:0[G$IrOI#.g1;/0$k3f\^._E*RYN].Tj_E&I`[jeC!f="@&L"9KBNFs[KTc7NM>8GaR4-o,G3n;rHW7I+9Li,#O[>SVi
%=IK+*g@Lk-qb'b!+-imd8l'-t)lDg@62rW=*E&chdW@%ZQaSCbK77JpV,+niPGV-#W@O+)nB$cpC$^J&NZ6ZO'a'5N9KolF+CFZm
%D3)Lm3/]uhL!PPDI]M;#o:!EF&dCPt(GXPAi33/#'Z.)]E,pM">H,Y?Z'?\_!sPT/4@o4>m)!eN6WnS@Z@**EN(WMYbqia\`Xe,Z
%<R9qF*:!P-:]D;G*VBRnl"n&[WHtsq2W"^<4??d@)iu-2YC1%d5ssS'X,tAsO,\b:h1ML%e1eB(Pu6^+4ZXU151cRYKu^UPks+uU
%COP4$>gO?19K_[I4.B:N?Y:E[BB<;/^n,om)>")s*dR-3KTc]*$?fdJ$=L]!T6sraoW-ILQX2BZOFGg9,`8'9@dF\?O%uIPFW!u!
%NPl]3<qjlUs6;pZm@WTO!W,UsOX$BM:9.[(:4`3;XX(L/b+fu43YV]kF@uKFHuh.?k+b.(TD;sX<pAc]d.[r>nlDSlQle&c]=ODp
%L1;T3&&!@%%,=(j`V-67RJRe,opcBZXh1$aFG/[LK^Zc.T3ju!1>T*3!TAoTYjtU-'-Wlj=Wbt!>2[hG*W0:!&eb;8G_$r2j4BLq
%-N$]s89iGFD(mnl]i'3l=[&I*hD%`:pnasp/4a=B&^P0MV+ue[!?,l+k#(g*q'+Hr[kJ]o`fk[E<.U6(1`,@M9q'D.l&+X=OVZgZ
%"rEqF$oPrPNZXt:jD4eV>=[fT%e3&(7u5)Ldqa6RJ%W_)pMW-u<@kWNBB;arrN#Za2'@#/7X`'7lSK6dq:^*AJ*nTmlA\QV#P%DW
%="JQqM*nIHYB3a2Xp]'u34TC#N`Yh@4I^L<i.MK=$Zp.(:$d/-Mo9&<eb5Hns&,dKn/_1ZU%Q+)he>#1m7Ar?aXPs\1W;gDWB-HI
%WDKcTrJsPM>E+$8fL$RP\=.>A%^tILjjr?fZl8U\DqS&NM,^BYmnVOT*.j:9dmi?&##9Re5Wiu9]?:cLlR!PG"sCBTY');j!6c\-
%.g'PWD(fm`Z#*T"e_AMHh<@giS&dPCBD$YYQmgnCis?b&G=bXBoP<L[,)n^(;;i<bZ!;s="Gq-:J?"7//AiD)<<4=j?2g?R`F.kc
%,7!.p3,l2C<1,^^YNrF#3nUZeV`'osOJX@I.sN44D\VDFC:[p=RN_P)"JLNUL,=%rG-FoL<rbpe4laeV2_"XkLD0FCNU<;W^9J3N
%K2d@ZCUJJXLoC"G8.UtYa7Vnu/G24i7+3d`f^^,&=6aGob+[GN<*F],lH::JoEa*&0=n>'_jEb;8mP;WYI2O[i3dq_F<5-okJ;u`
%Y=?;'54U0Vo5,%E]CeM)Jg.3`*Q"(i[l;OfC[Pa1q?EQ6UUuGV%Y7+X^]P!O.G)4#)s"B@VSZ'ma^?[l1:<>3<%>V0IIB$*Q1-Uu
%p4j+6U:dmp0f))78k.iBhKJIg+;2<C5@2<97Al(#"8HQIUH4$Ei:^)QnZ@;q4Z,-p1[;?]^;1]AM5*h@!@jh/TI`iIru\Gt^kBZ0
%n/B$(X8=RF+PJtZm<bU"U3G]@Ql7Y1ct0pl#ZID4G7'UU"1T=\4T>JLT-KDUU+N$gDGC?VX`"*lW&NsiW`0?_@-b5PUQsA;dW/`s
%Tqj$V?@UXO!JZi%5!.F/o!3S!pn7Pg=+S==GsOd0Rca';eO!&^)V]/lMe.8f?RmV^4]YeY>J!F`0QVPum#n'OqS+<h>6dZ"rtrKd
%j_I.n>-%D=-rI.pMQ?Vp+rW]Lj>`p4?`'MWJANjk_Q9YrK4ILtAs!!IMZ++_k\mEg^1-l45).ZYFZ]!tSKPsL+1>'Jh_V=/#?dn,
%n,=I07BmVJOeQ=nHVZsENu8O:gj(ZlqYQ8f(jCjn1,\&6c6`htItZ@D6b<--I[6cqns,)NOndu0coq/Yh\.QNF)O;p%/'kr#-GlO
%]pbTMROt^<GJ9%)g:Agoc2]YeMp]>/#YbE)RgD?chK=C2P@)kdG&!k",+sf@+aVY^ccYWi*d(5m'^:LH@/n5loeLfI(.l2=8og$0
%[j4K;YND=@XeG`&#jNMGe+,bcPPrs?^d,k1)!5dC4[MN_.gu/PX'J:4Gq<-^mK/0)MqqCJJC?TWDkgD<X05EZ5)VmMii&AmlLbQi
%;D:+1^N#'a:?oI*Q/c%>4`h"(CG:M/Qm*uM;*Ff.Tu'K\E3b"cjXLgdZ2te@o\SuHYIuMX,W0Xjmq,rWNc$5HOmmAj54VqY63G>3
%9Uu&RA=Hur2+LI_^0g1>n&+$2$mK\5Y<E)L)%7@Xj\>/e1"^E#'W;sr]b;Yrd;,#nCI+"d+"-*o<,?L>R+/HK.T[rg@MYFbQ;nT0
%BE*8dK3W+;X*m07BU;'!#0YlCBZE(lY\Vk/3hs!]0qFfQAA*hCh`tj"ZtB\er^FNrhk'EWg5QNP$'LcBI%D<RJZ=p+DAV$JDKI%K
%GI32Is-Wk$X3ddZIZ9Ilgo4+cNMU4Me1OgKB%1KB@DOGh7Kdh3NoL*^[H5rc*uZYtZ!485I6!18W>eM"!+UuP$P_JN[sKZje?+kE
%(kb'kHipZfN$=kCWR._*-M9Z'V@;%uUjgQR:#s7]@US:Kh].N?N4()8\gBc4FqCfJSV*phJfthq8VGs6R7-6YS4OP>Q"o\sYqeWA
%EMl:4<3M8rIFtaR3U?73&[kjp!4Nbj$+36+@"b913c<>LadRFFa3`$)?Kg<Vct*7f@7O-W[0`U."HJi;!Z3QQTO[:3%o.^8%U7T/
%CL[LE#4q0>,BUSLDK_E6s0n-WO7gll_R_U[b^0[gKQTEgo)uok.eOX7n:du]Y9QR'-?KEF2u]ip.*_M`as25`)hi8ELO->I/O/nV
%G/b@\d%dFHHp9@(=-&_L)Alt9\H3gh.tW)@DP^+10TNHKP6t*m`r"982ieRCak\:i*//.SjB?4;DPn.0>8\kp.9HA`_?6u!RR%$1
%C`/lZH=hSfeZ_et@'ri02:b7_orPVU\rL46".o)\?c<1Upq0P)F@aC$Ru-I@Z=3@D=WM$oVj(sfpJbT=(,3+LI6#Q.dJd>HJ.[`I
%3N-$%>r+$2k$0)#*%m6Kg$[C+otj/(?3M_VB8qfY_a9b9#OlfN!L.%[)"<p72`NBo*\3<MJQ0#E30<qTrt]&4?-=Hb3"FZ3j6!t5
%#g9]jj,6\*XHkM@r40ph0/`@91-LWj\m4QYJ.ZCbs5n=->hoL_i$@M_L/V8?;;d2=TK=n-SZLEEPij8Z>XI<2,I_[&,LZ#-8H94[
%B;]q+r!H+Le;!P/ZVTFu%]D/5D#^Rq06[NgM(p^3r%b)2>(^d^Tpdm\#!KbF0G'@-X,f,YH43(/-sYin5XCMIC8+*J8%=05)W2]^
%cI)'/A<1*HE7u@alA4]*E76/T;.Clse]?e?]"GFL"Mn:pQ+^d/l478pV)3U[W/m%h+lEjXQPi@]?YPf%KQ@Lu_m=`;2uh(elD="a
%*anZ7)..63NpG`#72,<%"P-YfGA7:X6P3n`jCIsd7FJ@QqPiFgkXkM;jN$i9^q,It<Y!9CBJiNE5RoRc!gKWf'*SiDBeN:`(?VUi
%qP2)4%P95iY`KM<U2\*\ZIN'`km6']=@2L_%hXl_V`2'$A3A:ZH36,G#7[$pQ##FHlE4q'No'".#E>T_^I0H,)$f5Figmb9HTrbI
%#0Qu]kLf9$h^!fJIc:&'`*3:Z`<8.+$'e(R^quc?fh21Tn7me\rZ;h5q-!hOe4"P-Pj+5A,EZp'_c3mijsAqAh3,3W!c1LL)#e@A
%H[Q"rWco'b0XMM/735[G1^tMu*02<mfD*$I^c5Xq^k]N(e,Z:4]8ct.]L80&"7h:@T&9F!"a]u6"%4#JCTCCD^^9JZZBPRW%E;aU
%hZF:1@+P!KDaNPdU/S\BIH/GsG(acN(7O>S7$6D#5`fN=f.]?:!U3DAW1C+,o?D:Cp7RrsSWY>SPU<(kjZXpa,2g$h)I=,k4BR4=
%:+\</h3R:dSA%(S0)Mefl6s!Fj&fH'B8a.As,m+ds7,9KNK\!Nf(0uL?Q"q!=43S_mHV[EH0sIhgqDg'-^f!=fm5((^"eb]ei)E&
%5Mn8(XR6#cA8eg-.G20_IF!0a9_3h4[Be\rkKDSsc1S9^VjeXKNRh_-[D!!?fj*FJfCXF'C8]Bb^>7W#0YO5Tq:Y@+2OSr554ku5
%i^`d:S]s<$ZTi<9ZerNnbtfk5WG6jjQ.e65?S"@,%m%8&q=#[.^%14e5*IR4YKfI)HYC#;qu,9qJ#A;_anMRF)XOs,ATQlepLSEJ
%Q)lTLQQL?j$erW5I"q-UqZc1P[e/\":00>(+4a'KMg"7"rZq=oo'LG*+Ei6NDS147_?7WM>FD\X?gI4InW3$3ET^YS`VKKeFgU_4
%`fp1Z06Z80me;F3_H+L!]9'QW:Y.O'O,V+Pkr6fCQ8UNphW6M!kNVU4Y9$rM(CKt2r)I(W.d^R3VhMRJ\!uK7hq#qW?PV%T7k^I8
%1me40Uiqe?s$-Q"2qMDB)"8ERrr1)QW`F@B?$`rg^1paLITEoEeQ0d_2%)KTl#KL?LFctC[GD#JlmJBQ@VE`gEb70>M_+Rn/Z^LM
%l&'mcAJdW!52+6ICcj]1>';J[T-:i<=[%(JBBiij2Vo67YN][1^<jC9CQAIkkORj>>aE_,7)#cHWh-+A(ZgMud.bLb9mh5jQX.jS
%4O2beqUEI08:9ol7\MI()=?eiN_+_'HCikf^G\iq???.jo%#`@:&h0\!!Rl!QC^=u>1U#5cC_(e:7c=((Vd`\8upX90oWT6[f"H:
%YOnm`'Ya4:+;UOh@P?''2X=[1HV3K+\bO%+TB,`5l8\Zh.9fu(rF7@MJ+>9Fcec?X%j$.DQeKc]&$i%,nrM$;?e3N]1MQI@nL5^T
%P:V1:3Yb<Ve)lG8IP1Nrj>9g7/m$XteOSf59^/MV*'XC7gP<aomt8p5O6Z&\rpJ7e\a3eq2.O\I27!:G5eE/+]Cb*2rWe)J>WV]*
%p#GcEeFBS_B,J,Zj9@<s0?/e04b'CTi1U#W*\+GfWVG[^s0hGAX6'?;1l)W"^2;r:5U0'kQdU$Nlem*^,<*-BraISW]XVWt#Yt_#
%&65oW[o93."OYK6;IfZ0DP?\`RF4!R5O"(:^M`O7qCs0ULTZtJGhcEF>fah+XejiaY",\2#9W7WClYr]8>r#n?.Hsqgk3Siq8HCX
%?8&rQ9\H'1PJMB$GZf=L2u*@=Xd/!(2f)XP9CI!-5*J%a.kZCWH1#:n],r]Dk"At^rO+rE-"*;r?.6:-]j^JG+641J.dOXHogrM:
%^ASM%h<9CoE"u!UXfQ*3ji[RLP!)D,o)1=l27r^enML3X?*'nR[J0@Dn\p9=0ZNFTmJr6Kjn]oZpNX[VS2r3,4Fu+u4AO(rh$YMi
%(UKqc0."iOI_d4JlhuU*^-m`0]`)qfj>P>VI6`)X/UM)9S>>").^]'L4\d"=J$(cg.k;Pah0OAJ5L\ppJ#."X0,GPggr?d)#`/=Q
%LJRM-["*$#Li/oWFg`'WrAa%USq3e1cjO^f*%'ki%<ZX(/ZnKK8g(kV&$3/%<'I4?^:h[fVf(eSk/PS<'"WI;&+X-&EE[bTS>M<-
%a(FchF[hc'/_/*X@I5d&=ccK^5An-dcdZe.FoHscWr73AHbE83Jj5-,mBn@>pt)R-cWp8<iAn:,2hPu,4ABbPB7aF\lHRogk8F<E
%n*k,?4lD[Vli%]F+<IYIK75H`iRdfTG>XnMl8.6&@^"]ToU0H;E/_U)]5P?n/8!FSGYU4[)?hHRT4(9)8=\7?qM<nUBET-"#%&Ij
%;KpQA?esO7fR`Q0Ra3VgYJ4i@Da:LM0Aqo;W?=+`q[6aiI7.tc%3U4!qWZ*@J!@.9*cgd,rMp[I^/nU!JX,GI7_cG"isV`aqL<t^
%UT+hLgopHR-5n'Mr:KJ(7R7]!=U562jU\>^pAG_?K@XW;H&SGV:\T$bE:rF+(gloc4qiZ(#+(G1@jD%3Fq2JA&P)n:Ku4t["p'LG
%e-ETqoM6jMXUO^^kC$^VnbB.,Sho9rQE5RM)1=IipBP5^Z&I[9Hk#lo8?2<amqQ^D_c>)IO_>$d*uMKfV0,kSpCd)XH0/;K8B[_-
%Au$#7j4>+/^Aj*V69lC=-\(mFKMPOempF[eRnp\,n,l:/:k-!S)JIIgh;#KQO)):Q:Qqa.2",8*nL]9VLLAG=0/lZJ]K=H(^Rf=\
%'eXtuB&+6,0s()bBQkh;M_(E\]7\sD^W/]?c(;*i^0mH"?t]#uT$lrra0Z)@n"2/@R>]ALVsNa$5LMiZd\gF:Ya4,&4Smbo6fYV\
%=V^n-=X)I,m>Y.,h,sK=Wt.C"]ta=[*7aeCXhsZ!C0E7U.fn7"UsI>mhUATn4d1d4W)k"KLDsfqrU&qV]XshJ!WFT1^htH"0<s1g
%1r'>0?<aD4mN):t_MOre"h)):kpF\K"ODc1W#IcN&Ngle*:+='$3J8.Fe=Heos3bs30e%GV-8XuO"Q^No\if=/DM;HH:,rJj$E[Q
%mr?&=48V&jT>26YcdH_j5<hlWIIs@1VR#o1>M(*t$G%]TrQjTkA9R.JSaTts*=kQ0>(T`@V>\-6H^rf>pDV*ofT^*W2j7*&#G^q%
%PY\o=Yaqr<o?ZJ:^h7u]_=1F;rTs7>,7jS9m08;0$LhiA^"p2Jk.44Ok*u?iG=VE^)c)^&fhNPf2OE@po,j]GpgRUfI!<n:md0IB
%&+F^U:'_?nT.V3r0)iSo"uAG+oh"(7&cb\$'M)U!/V0[;:boYAZA*hGfCYp=lsB-HQfb]`@^Vrh;SDAeUh)TrZ1W=H4,TU+qW6so
%gfCP0m&<3iWt*V1o#'#(Na::cQ%"(aH(Zg>XM.P1m<j;GHMcjg4hB_RK9PbY6?E+1Am]`,%^b%]ZEi<?pR22Vp=XNFlaQh,pe7#0
%F.:G:`B/-Xn)OY#@9n5brXBm`N)jsT4+Y6B)sN]'Z]itYo"3Jd^305K2<D!U?KjX52Ld!q.JD?$Q8b<-?bOZH?!K9RFIdpaZs9\`
%\iS's:)EA)+KWTF`nAttk/lASa(lJa7qL&%mWTlLJ?0e!FhCu$^1ok1VC6;KDXM@)kH8)cmMd_r)s]9PQrG9KCaO/-d>Lq`BB-d$
%OH%(\XHt^(<`r>q@HB9^'jEmX"%,P6"pDqoHOl@Occ1^lcFg;VQSmaWH\54(n`)nsp%kF3nle5(rMGr6<o%>Z";gKY49%XjAmRZ/
%jg7q#pH6Ou"-0g\4L<VODi[&8Wg<skkt:MC^n=1TZ:3\-r671hS1e*E?QX]Nl(?kfr/puicrFKj?0VM0/0@%WA@O_"K?gsO<^2lH
%/K9l1T?5&R.X^t1%4M*aYAr'qcag*i@;L3n?h_lA_.$P;fi))0.P,:`Vp#>=/Vq7WL[>3:IH/0+`f#&%ZTH_.kHsp]6Se?.l+qZ1
%n9?C;I.M%KMk.Qr`FdJI@0Q7=27rI*pF08gLXZK<ou9k]oUY$_&!(b/%j$5EQ2kL\MXtdIqeBPZJP;Z,'Hm#,r6ZfeL3nE`o^M&g
%jJsW+e\fthdSj9Ul8r7S`bG;8k50r$G5'ItYfu;)A:$7j:1;j;:9O4PHZDp:q7OD7`osF-MX0\Y09t,2:YtMjXgahCAO!nV)?sGR
%5ALQhZi6g#q<r=:hESF*'\<!`\u^6c(G@6*[eAj2]tCaXs!0j'=sA*"jh>P4gJ=GL^[GH:1IOkH>+f*n0%dg^+[9dUhIPKX(a'BT
%qe4j`$mtY.6WiTt*s&]F%Ab?O_^B[G0',kqefb?YqHD$S\K<I`ZB\^rB-=7/r;,>X[WM/DSgiQHBE<ONql/<@SU)+rdFo`1mFM^T
%GH\A';Yt66Y;b(^NM'FWk-hP!fj&MY.%rRup6Xd.CruXa](O0\59<(hqn;gd(i4c,+&hijrMPIYIZir!;=rJTHddaa^"<XQb4B8o
%#br%,1:;7pZJ@mR-Vq(F[k1S-/2bq)?TuPB;I@^jREb?@QOf^FSWpa4R0rDGHMW']rUEWH[ukM4V?:l7_>VWd'CU=tBf&U7PSs%[
%/Ud.<XV]@4_*q=*g&C:ZARi?X='^,iDne\goAe<ra6m[[+>pW3(ug#Q2"LV8k53SH-SY=:q5TWQ*Yqg8fA:ni$s;rea0E:LX(>8q
%VTZG5;EC[!dT+YLI7s(*Z?kJXrT9m01P6Ni\_kNCr7YmsQd9\V)iG4K]`X/ip`j)#Ir5]/c.i,gc7V>D!OXNq5j4Vs^kOpWc'FBZ
%i"'S!C4I%C>$o!\5K_f/^"If&[@Jo"S&l5QF[;([04Jtc6S;;`@J&3npM\DfYVCOKVH<3EL[SeK[k9>>gWpse@!B,D,I`C$T3C&j
%f5h<]`=m>Ys$g_m+mWum77X)YeFO9aBd2U%_P1Ntf2'1agA[\t(MNuanJ@O])p]H6JkYE58+<Rh)F1+L>5fe>^GE>sf#m<f-o+33
%B;cV@okR;e%TQF$F1\i^JlRG!Y9XoOnF\&<+78/t*BkO?lD`4KLsH(p?TY%&=9,*g4($`H1-i;i5J@qjAc&E5Xj&6ukf3"t2R)dm
%/Z%\bEc6N9^1gf*O%h.:q6KP.n%;mq6VfHpD1C?B;#8Qu3L68MqXc7f+AbF4dM7-#+aFtU+Y#3&@6a.PkVugO.;^oRYQeSPHS62C
%FJ[F\2W3a'-nV+7caM-+N@.$h?4A@Z6)p+B0W4F@P<E+7YeJl;0(8fgq?GG\V`X90I7'WP]N)Hp^OW5'YF4-c%UT]L+?s0RmZKZF
%?E-2<%,Ur,fe\aWXF`TshciZUE;[os6Y$(*CMEgj'&`9Fb.)oHpOF>m5D2hqP$su;cZHpNZFNiS/Hu[V_9n941Ec8ZO3F(FpDYQK
%V<=sVDGO*'kX;A@/\GBeL`Xd0eae@#%;"l%]lL$9<=&_*<]9=Uk?BBJ]@FnhqFYYae]RcJGZSaaHY\\C!;5;[nC,^5<6;cu$2pUV
%oo%*jauO7-#;cR?hbS1^0>RpqC[7gWf,PLCor$Kn^`2)L1JnWO3IV8.#`S;K>]0-QM#F8n>b"L-P!!6k"F:B$5XQn[(b$DNWMAQL
%=I\o[[D'ruNG]IlpJ4`59(G07MK46g5X3f3[!>e*b4kA=]Q`]YR?s>"cc,eFK&,>>G\_]O^4*b8^RKEgHk#JM>lO9Ek5(Eg@$0/]
%QSa-d7fe;BVb9k(V+0aS@\*.JjSXeXf&DJ^g"3D9T`,2\7[S;jMZ=5NfuL"])M[X>*b:jRcRjElA%D2T=[)lUF:6m"Va#2@\Ul$J
%Y,poG.:51dRFY8"a2-f4B:JVn//9DF9YP'(ULJWR:%cNDY:I;BkZY5n3*t)*:Ckm='lgnbiR<Q#XA(e4MuRd`2dall\Skh9(KeND
%KUes*g@DL?M\035NG^E-'e-8fSA=F)>=d;ic<FR7f/Mbl]h2H_:q+h2mX)0R^NKU4+!6&iHe[dJ<KqZi3dt]`pX&)0DLUIHi2\5R
%@8=c5[hI+k%BYoD2Vp7lJQ0KfqT6`sp1\f[Yd+,rFZSV8n)/GOb6SPsD:_N$KmeH%Pj,X\2HIDNg40&6o<.6u&JKKJSDN*-?/^3<
%c_&_%UPlaqp&.a*bH7,?^4*S:#I8"(@n?W<o%j<.mn27!k5HD^G]'e"?Jd6R74Z'\\6-1T4)^J,@35nf^BIhL0D>UJqVe?SQ&j49
%g,q)j![LVA\pU)1cF0=e+0Y8hSq.-[!8c=^kl5%7Pc)ihDpHodT4Pd%5<]@7>B_31s$6li7u^ric!5'#=0aoQbfPAQT]pCpIZRcY
%ST\sh%R)Jr""<AkTZaKs.&2i<D4M\c=ZnLmpZYIe9Y;oSUtZEWHu^\66CtQX(&R#ICKpUQhj79L(\\D[h\Nria:s,:?em5H]a=Of
%T71)'fme8qf06i/"),?;Z5nMSPh^M[@=T3^^I@q7hn_:e>^Prd;UprlSh=mI/\/ZF9?Y+Da/uJ\o9V/\]>ondm^oUI&)HgjoV>o5
%0/9>rr0f[\.(!u[s7cGpmWL<*:MNJf;c.$TOem[nr?=BgMeDNQZ(kLsJ:ld"K*+VI2=e0CQJ1XEr)0\'<a+m$U#$*A!n.(VS_@WV
%Y?D6MCpWO.K9UsQ"Y,0AHGusj;M]\KleHFJ:oW@aiQ!/`jo=lE3gFm!;=RNdVZ:keLZge0-s+'p3gSNl[_-ZLe&6]pI/@ApVkZSm
%rtGK`::`@W'J_COp8L[GaMT4FTsDtn:-t=qa:fVie?4"V@dG_nnB(qf1`Emqjq6I=K9Yq.i8u'6Ku)@c$$D^Mrb8tNTfWS:ZJ[AO
%[dKacoq)EQSIg^9h&9-.!"jB\q7E1K:`]9oL#,Kmg*q,nf0..`-[LXd*772M++F4^T2+>EJ+?c7@2gD)itdjoa46A-QCFgNZ]UK`
%-*UMt>slb&75Z#B2qj;P2i=C[*P\e[l.tKQOhpc@NC)KROVB,J)C*$8l#`p*lZcP#4!$dump5DQ5+,MT9RJh1*UJKr;]Q=ZSodZ\
%iF^Pi:K!\MR]9*6!/ldE+a%V=cakl/T\&^'3m1N/V<amO93SbgVJc#&RN\L']T?mPJU(jF'>\+`X834Y%gu*8\!,5o&8]C@:P"=T
%2F)u'YcHe0/^$&G:"W%nZn1X#1Eodhf1]A.,chkTh%9XpZn9(cD.&j&FJK418dg)^)IUV9S>:#4-GM2'*%&kiB%M\G3%8RbUeMMA
%2(]+[!>CQtKS?cArXpk%bfP!MS*/inNlB0Ddhe#p\QQC!>R=[_@9tRqg!ZN.+%"JZY/IqL,P@)^"\j[UkP=<'m<S)WH>ud:TU>%N
%OuJPJ/CUk05qHM*^qfHW&ro_g@lU>/n4H+'d0uB1>-f2n3%T<)6nH!d*!k%Oc(q5Qi`?"if/9cMd;CbfA$`4-Cpp^HB`a&URgi?W
%?k`+!%\d)-Y,*aj:s26Ejm`+VZS5[6>8fb64=CVG,#nY2-65b2'C,H19hQg-bOO?`V`L(npcIPB#j]hm%5So2'N[WLRKsqu+-6_@
%Zr'7W'C`G=+mYR>S8:MS1(fZV/X'loD>Z.Jj#AkD/.T>Yn-D9e!ZBffian\Y+ej_MM;GDN$^i#D@MflLZiSUsQ:Q$]AZfuHVG8.#
%b)0u%TEQ="==>nkY[JY[==j?G%e,mb;39ii7IMXn>`6]=:QJ8(;)T*#T!X/i\Z=3h6P2Fg`qG8DOurc,beS5NAgArqi^@pNdF(9V
%9tX%0W6ZR90neK\$d0`]Cf'2]A2kTbAEY_EArC$!/`X_!UZsf4bGC)2FoeAnlkkK1CUSr9K7IL=]?LFfc\B[Y6B0MM;L&uKaQJSX
%I`Hsf<5Q]TP=X),?.sr>:`;CN'<LGMDAQ$Y^gPUSi<%W"87nr2"ibX\l]JCRit3.NA;P*efVYF;jN>k$)Tp;J>X+1U_Dif&+F/']
%<NTjM2Tp4['cGm1P>@@Ca/:O_/U1P<b5AQ\37])B0d1Y)hhIihXQI?i6KN&e8Ib-'V0V?liH1&<f;.XM0RXVl[K1SCE/Y?b7PMI\
%^MFNDnC2JqAN<pc1<<^ON/-<!2:,X30GN[6D7!)Ik-Q$RQlXUT2P,QrOPF[*n.ODqL;U26J-*1L":i^O\n0X=J4J-[":k.%Tc%P%
%)JJ&l0aTWl5i=$,S>!e:f*V,,Ki9:=<-QuX"q";+.%k%VeJ_oSL75rn=dtFaX..5g!T?lr-YU<rFGSU$hu\9:kShtg[hpGj2(Z(,
%pq`;NY@E,g9oDOZ44m6DTZnc[3j=3opI.=d>+$r(OAQGZ\c`MY/&d(nOVa->U^`2[dd099RQ@u>NeLH*'W_GnU"0gOK-lH1nZjNI
%E#@CR4qV1LO?\Ej/&7do2?=5!fj2p%2i.?bL2:b3A#]R<\P3A#.tOO=OupH73g_@%ZBjG5?o(IX):CtT+UPp)5%s\0Rq7_=W.V#5
%$M?=:eKeUJP,@Q4b,`M<"M0>'"U63$81LbD$"0\\#siZi#*u-e6"0=FI7aRVdUkDfFj8i&a&L+kL;EI>9]a8;g;#7N'^<Q]Lg5R6
%>QA]p,]I`D/=%pn_QRcV>V_4$"!7Zo9^p2n!oF3T/DX,Z@'F#AHO6RM8-f4&PlK]on7<bV)RS9HZE9rR!d*XC,\l-_5bq?pegO6E
%ajuhj94_]pRZe$;LtOQ'DJ48'W3bc6$Ua+=!(OA$P)V_FG],PtZuBiFeM0md@WGEiX?+1''Z:_?-nq":o`G><5H^nqn<cHF3]DVJ
%BdU]/HHY0gnFW`pS'hO77JSc$L2NBaC`TJnjopXeAT;>j9ep-\lidI15^t76_F!AC$3j<_CaEqL?7kCkMZHl*:nF=OgkWbo[ZT@#
%Vg?Or(nP)7R4/6b<)g2gVOA]Rs+18q-j#9)"<l`ak0d(\%cR;(#n\@S66sh^g#R\A'1?MA+?0iKK8u/F290oB"cG8Tb\ta8e&h*5
%WcUM?Y`1&91uK2k%N5mH0q`bJQC!Vgeun'lLP$oum'/7n/]>LF@1.gYN?Qm7#Wia7,>!/g1RQi%C3+Lj^Mti!R0]RK>:.-/bS'j`
%0*>oXd"h+B_0XqSi$^!*5d!bO3%Am/=sMQ:p^++H$55Q1;^uPt^Ii?(WAdeXRNS'Kn1-uS#3?sXl!VR"L7gEQeQL]99h>8r[!;Yu
%4b=okiDqfa>/q8=NCuoX\;IGIEh1'8YauVoeKC;u4+oa&S0,lq^kA?9&0/@1OP<H?NIZFqF.4>n)(;_t3a4!Tk=kG69XMZALKsp7
%B9gRrOBV1@@DG7g3JBI,@89>&H\)P,WPAc!:cU;(D,#]sYT4B#BUVNq@Vkr\52lc?Mp?6tBNs[EP+hq*B^$uk,!gr3QQ06cM#k8H
%Ebc]T(C)gu@k(PaU,-DS.gJtnlq6*mZ,_SZ<[\TSoj%fH8&:g+J?!+p#PZ_g1",!Q4>@7O#%E[ZE]lgt_A\-0)8SoN5e[T@MjKiW
%_328>TFn4h!rT:-Im7!5'Gh:WY6TC/4>(8.?ooKdY@(VR2>dS1qupqq'f<ZjodRJZ_7Fj<RKB5lD%#u_T``r-/pGhSd`q:212OdD
%PcMsRl_seVC^!,mBJ-K\%4YRqC'LP0Nk?U"JmruSQ3`s,9B@8%%`?7ms+,kD=\!ICrGjF9g-:;=67>;R2l;I8da`8Sm3<5/>XG5W
%\+\t(&P3B/5=#bq-FD/n6HZPuru%t[.Lfr&=:uT7ckjiY"Nl8H@G))_"Uf,S`4B]YS/WaU%H^%d*Djp)pVt-J+N]&^bl3_mGFCu$
%Kd%pn$Bm4SC)WOR:S>oi&AM#8gk755^orKF?b$dDL#910Ysc.:7(Fo7!R61]TB<Gak>MmB2HkRffY`%k5Wp8Y270`Un?HUNUH5J8
%=[`iM=b[Qa:RJl'1"^FAW018"JKY7'$ucF\pW=m/kP(_3juu6?/Ce^\GEmshC:(4u!PDlpK'3NaU0n*ekucl^L='+8,h6k?NcAq&
%Xh.\"MrMh?]I"t[!1ZI0>Q`\mjoLlBRl3<2.lTh2+WRVLgRsTV;a]$8G^c8Q$!XX<KcR%A9Xl/73R0K>U!+9G]3%r9a,3eHH;^2t
%bEUsX>@m1YdknXRWG>=Q/lm742@Bc^Qu#(-'3nCl4qh[$$DQgM75e*a7XeDYJa#-h5uFt"@>%rJ)Glg[%r*4j*9D<7b)!rjFA*LR
%@%FU1d:+'G,+3DGhPtUI%iBht0%r%T?<,n5F=Q37X$DB-W0PP`,j$6bKE)h@.QBq(@:iRa):m9rB$J/G7mGP_W&DYqf[%M`"Iu\&
%&jn5_bf1o=$8=n+;iPL$FqLt^cE%?GW1"M,#$hj!R$*\oC'I`YA0<d78_qle<WKeFoGW[BH1;F[goC.r0]-?E$)^GJB(g7QSVaDC
%%TYH-)B_Kc`)VPO#suU2='-Q%/XTMPK/l)rjRF$W)MY)E=Qhf0S*!Vr]RY"$-jZ:^LRKp?B_sNS)8u>i8H1-<76n"./.Ir]"TJat
%-BauD3)Ge29P]Y`;i1f/fLD24nAB7u?F,?b/kXhaRmpdqRq5M910/p62?ql37Tl_u&%/*^HI9a4!RS^9(%XVhal+!E&O[_7bVR!B
%(e:E;A$_R;#07Nm"2:I^4LP8C9l@9G9\!O?"\N.8mU0p<FbL;@GL^N'X4K3[mceYbCj/@^Y*uUbfbVes_.EdS#W7.>%+V.^&HU/4
%_-6":XN2!bNt+!/YWRnC8NPDTUSb7lB2G:^j^9\VW(a*%,g9HW\4HNYfF]MI="q[nCQo_?.`4M1[UFFr<?so#Usa[-dk/go*>-.o
%-$mu2Fd21T:Xb=5MT/3snP12nS*m4cV%bUHM02u[C((1ZRA?XZ_bGY*bSap\O=><iP<rimTbS>9E2t;K>ssXR3h#9#:n':,F&ADM
%?2rBl'C%ZLb/6-aTsik/<c&=]E;g3q@I`ZNS$geeD+67e!JV?I+C7`Z,>uSYE_M!rk[e.B8k'KFCap`_2M9%;aeG2O9u&rC!;0p<
%("8$)_`46e.)W<DUHU5'7;@XUm^-8Og&OfMN$'r,;'0:odui'jUtJF,2VKa;R^\,HK?Y`D8*C_<gS*=V?pNLgV>%G:8R;*;'7jb_
%'?l*,WO]r\VM2Q\K.4TVM$1%f_fF8YObS*Y-C).;Zt@eH@]?Kq3o"=.L2)@K1V0B^JNVn'QW!cQe_mi=W[lV=TSUQj5&.B"g1G^r
%d>6-],g\oK-":#SRXsX4YW4--f^'0+D#[^oK?D"HN05JN2&cV2`e+<0;1UDR#&o5[9ABkECM(/pl>M<_2gmRj1kX4qI3>A?eMre=
%f+c[Q[\`jX,`V6HRd1;ujpDTcVX55#`LnCgBJO_b-U8A%R/o9%R;\!LV"rq)G+QG>oaG78A=$#2*^CEo$H#D6[i/Fl88f-NO2hq_
%Yl45,R/DUq)b[gA`A+>+#h-_hC9a$8_jrGk3b'\-TGI88No/<I;BK`(J2S*C:c%X@_)2\66d;(^WYn[<&;uE3NCn)/KH[m#lgcLG
%<N77JFlDXRJZ^0D27.'sLafT&8<Q_u?`'\L_uo9E%?3[s(RF>C-%f)6paq'i<$\SCMF_1Wk\@Xr?%FmJA@fWVT\2g50=\(N&96\:
%3)U27B]3p4<8rVs![Y)nbZ*c22dBdTFV=TRrPEEK6gLeJ[:(I/K*X;U&oi^==/\8s#(qQlFJp<a2c8:uN-,A1C%ZeUftsaCKb2aF
%Os^78>M!ssd1=eSO.`g=6ilYY-jKMP8#V>X?*_1p$0YW%Vr>epbKa=t!c:nHATgr12d9CPU7`;p0hA:C>tDPE403^%_e2Xm'@L-^
%\-;?)lV/%hTrtgCR?CPob">kJ+p:rI8$mhZXL40k(Jcr+K&sRhTf,IBRLD)01tPVUYF3%J\AM:GO5Wb(2OY\U+rdaa<"mW.IiB#c
%V7Bm3o:(<i?2o%?-OjK$>RhUH:)&3!Sc7rd`aZm'8nl%VQOFS`r8IF?)uG=`VGAHDBqkXK()[l_$<;Uc@,\)cRXm5-`ILup8#^0]
%CPQ3(2Rs.]Fe0Re*OQ6C9sfMK?FI/q>_<Dd;%p4Eekg<9Ko#N.8P!5d3nWJMbBqL,YGG'l[K]a=A".'cpL3$59<8NThY$-U;Y=O%
%8S55M%XJA!6B$tfFb[t'!t.U%]kk=[hE!occtH6TbrS=rYRX[t:>G;'PR:,m53Y2(#1,.o-Mgf@c(`+k*@8=tfq?P>2@Ic-`/9`7
%OT)bYhJK*(/fU(G@3bCk(B!2^'cRjP@6!)FP?;.'ZgXT,$5NkC2BiY?B%*IP4=4503k'[I1KDDs:0JCg2l@$Ig:kGf^.toD#enDt
%2V1r,m3>E__U<'=I`t16C7/m38o]]FL6X9(7Bno!Dl&UuScTh=gl*3'*J+:($'Pd%/@qY%ni!u^Y!F!Rd8_A*!R?npf<%oDX\JX5
%*=H(DXqqh[b7r]a7CCkcRdoTb?u[>,+Gs;R'N)qAd\Z'GSg^1Lf/Y`l2MjH;;*3@6c,Ong[p@5+f]m>-oo3gq\IZH-VSbZ_jXQON
%DOsGV,3i%M:t1"!XHl]-[\WuU-kf*#_P"JI'1_W<H!Q8NZ3cdT+IS;;o(3q*LLJ$/)?o04D;>X(4IoeSRqoXhB@(@(Lu*e_9L,B\
%)D')iFJT.,X83M@nk/,[$"2JEj,q&]G2bc\_7F`X%>,o_D/3Ta7XL1j&CbcSOC?Np./YdSi"-.BSdeC/F\=R!82TB#@u&,t@\LQ6
%N!'s?WLs]1Sqb-PJoppS""^P.Pfc`tA7;_\.53qWElLFu9e$MU90Kku4)E%<-lP:fda/1VK#;G54m@B30Vi3ZXDNHniV7bV"J)]G
%imbEY2hDnJd7]dGRa:(.pDVN$JXm5#nId)c("XVrRZ`76ct;PI0aVa[EG]#eBEhhrj^q<sQ9lNLTfl1f#M@!PnHs0?Z[D3P,I47L
%=6S9@Qg@r`^fWM.N"tXM0"PmXF[JsMa-q*IBG5_"[#X@K#L*dVnc9Q^A0Q$@gUc?a,`?\jJufV:FX7jS[P6+R&fAMPr@KXjP?aO4
%D++h_lmug*BRcCD+Y;C+2IROfV;ctA'Y7!n%b*]_;6UL0\S]g`/(/)hHCu*H7?&W6ANEFg3K!9um\=Jh>Rne5H8T!9))fT-JQVPq
%L1]CZ8fucI075)6G[pu4<ha;ORfQ8Q6_NVu?8DgsTNO<d,s[r-pk<8G*QD`GT\g"_/Tk.Z0abcs<AW!^V.@$n$O^[B([/)Va1;&K
%JorNRG'M$KDYVSP5+,niX@0$X!u66,W0p7.BoditR<:3\8^-OoBjqt8k.&js$ipc&Vg[LDV*iJn?jR#&B69T`2o))pAm.l5F=IY3
%(O=2]joC0)8N(JbGC;Ltdi:.G/h:4,^]'63bUYZ-cf:13/mq@ZB.RJoK3ZI22Moj,UL*+qh#?9*V7Jb<XRjG>R"1#.q(#QqDcoJO
%R(&_5%WM#p[!_NITRqfSh!\WuM.1E6*FaPV&+FGJ`'o2RhET-Wp:W'E@%/bRS\`MrN.UWID2[.*HqG>Q9`-7!$#IX`ispg?Cd3@+
%\F_gUfp)cN$'K3,)2VKgff6iGbjMtXZ4u)18l?&DL'ia*FHcFo\<p&<ksu+&8(ki-Cgse82/<tAHt[R@P=k:/0h@Jo0%Sd=Z%-\[
%+4+Q7k&@Y:&<nT^O?]\cF]=Pn8Jh5\l\eg\j2\$c]'b[Ul=-Pc;tI@IWS1#qgF((YHt$9pD82n>M53!a/O3'`I:+b_6.`aID.$4E
%^,lm>``#b4Y</m>QtB$OL`=+S9d"Rae*YH:2$n:gQXJP]g'l2_X>%55`*!:m"eM/"VY'%hO]')2\BID29@EMU<(l-fof(Q;??TuL
%\&+A'=/"9_F"Bj5dH3Y;"'?1IM!C#Cr=L1j^-ZsY;Q((omqbT8(pN-Lh:,DfdG;<c>Hr/5">u\076-T<;6%dS^bsTPCC"gQi,-JH
%'oV`,72qYC=eZ4?F`BLlDRfW1$g\&R12utY:HZ3@.qh%>7jnu.?uX*XeLX39ET3@4V$5=%n/Q8^*U)>HCOp)>:i)br22@#W)QjuU
%YXqRmAG\nb5>Nc?_UKAp#g;:.'spi@(#&k_4@3n>oPKs:UpuQ.G4Zrb.0P='&TWmc\j>.'N)LC]J9D'0C.,Y9P*Yapkq8&eL'!G]
%7=0<*Ct%N)E9Kum5u"\3S+;EN\_/+Sb-dI"MQ])OBnsD\bOT/1ge9"h0KVuY5Qf9@/XW%1(GY<W2N8>0[-,<QCee>1d?RUm*+<Rs
%/>H%SU-hL4D3MgV/tGOAF.;;?:*goRZ$kKukGR2p,ZFgF/08NR-7XT";\BgU"Z^<N4,>kKgSh?02iaU,T_pm=IhK4IWNC,-:U\(L
%HX@_\7brK*h.FgTdl)1c;A^1-3QohRJ)-8Skr[K]mgBdp)R;&[\>drSGm_j'2i(jN$oEWV1'.A!s-t:VLfY^KVCU_O7l[N'5amqQ
%eM,Um2<.T*77O"<.*+6He]=\u<AVop>5h8.;]QK9qG&j>DR2u%I,mmB'?nka"uaq0D!Bps#1Ou&18FV27OLU.?"C8KOCUr9<9n&!
%MK`=Qhh:MZIj\I0(%e#NVOncf.1Jp-d/'S7CQ8q9g1*j@Ug8(1PE)Kdm7>fu1pfr0iOJ&&#4oiCKm/SQn^>h6Vt;@Y!rUA.s5tlR
%j[Z3nd`_S"Y*!+h!Nr&(L=^@0A>TBFP%I_s$n%JK*aCSQ9Sg5NZC(p,8\1;o\4OOT#Im(BR9mWod[At,8_TR:\:3G*?GCsS=hT:?
%jKh)Hl_^<)qq"V/X8-*e"\nW5P9dLZi+o6aI1@/f7/*M65Ung":=96E((r0N8#2s2pP+m[o\_'1Bf3]6'@Z7Fl_^Na+RUPR_bnh!
%f@+q2qC=[*9uIg5Whp$Q:0,iu2b@)O!JV9=6P$>cZ;t@=5A@523LmOT#<,4ZWr]Am\lKKVIe"B^\5E*k"pdk0dt=-cYSD!+:L^@*
%Y+*F3Y?sMVh2e!i.XU)>0:Aq]G5ZNk,,a`R[+4Ko:MHj1Y+*oN&S*,Lg[q0YUpoUe)^MrXrNI"1^k4-b\`s'^Uq%5_Y+=dRpVTnb
%lG7GFRi[6Y]2ea9'AiB\9iBh)^eL!K1dG0s)]s_Z^/b&LlC/jM+Seb#h^&.p"5G"":@DOO"g4^eS-2n(Y*fLg(\jGUE(+0d:5.0o
%@EEJ7&=*g(#@RpYp#,ZqnPIUNRMo6<Y+H\8Ui=TN35'a("M#H/g*q&os!C<X)W9=`EdITeM/mqB#,uWjs4YS8HMId0EdI`i$$-:J
%[8Z5[ITY$'XibV:>Wip!SGNi"SN7kbE^LN(lG7EHSK<G0d8g'_)En!3'>2B4PkraZX!ZA2J=E@bM2Z>8=Jl1;P$1oh$n'Y^*aCS9
%:'98s_60*eqC-S+i!)brHN+1`G's<ZM09fq#,ucls!Gj2)W2t,FrK9C$$QQhoi(8cK'Oc>eblVCFse3>6/l1tn?l3`4qeAPhg;YI
%+T3?6/OP,XTkScE?oSb%i4+4c?4Cl@A3@PTPB;1:b^kFp3&8K(V"!G-;-QS;T%\+GTVhg.P+niT_NONn&$DM$=&Z_KU0cf!3)r`b
%DN_*A!H+.)VZC[sYc%56P-Q1ff^QgB4h*fC?G/Rn]_ACQ."/9?>X*d8"'e'E:Tn+iM6FXBrA8tq=EoU4'aq!E]p<VZ0lXk-J')Q8
%GP23s)+E_]J?`bHYpg<U2Vk$9;oflpj/Yn]W\b,on=_98n-!jIlKsERIeiC8#E:pH.Ug^;j"!P,YW".`9*g>aMm#Rb'U5^,Mnn.-
%.@1::0aDn"B&+'+O!!go&qOX\+V0q770LW-)sA]]jO\S69^#:W4S.0)IF3dlkXZLqo!oIJAia[+-Tf#nm.)3I%%Q9:g:O&?F+r0>
%URqZ?0Nn^+k`t,";1f8=i9M4)L5-(mB0$q`M@LiZYgk@TA.QnVdkj=gpnt*GcYdKZ2`0hKBX3;O_A9Hoi#A/5j92%oO4>\F^k3s&
%LSa%iDKn#MSH5PUKG-)"_#13<aN8pCaOPS7A8%/cNo<F6BWr?^;(TB5"F:/g=R(:,OKj<(U>n?q`<RfhL^Va1@2=O?-Ti#G#dsCB
%!s5Xd;mA&#Bo:;k3f_j>c/$q3U$:bM6+;6A+tK)fSW/5Km]+`1#*>a;`b*Z37$8[Mlu$l/LndiDB+No8@kNWI*j0pfJuQTX[$a.7
%I0Hr1;_+G.ijaqL;toa^d-2g%oI4Ss02Sm!A4\+uK;ORoh^:EHFqe]AD>)PB2M(Z4,Yec6'%pGP\\c/G?mCa5H[o?+QFJtR#YY[6
%:;R8\_Sn8a/?>Le3\R\qlV8af'FM(;L15]lL)JM&GWhA#d7SDS42A/196VgG4VT"iC-hf1-',%/mVC.O;PfMlkj@d\()k^X0WF]Q
%0PY\="h8pC6MnAl0X=,u+-V:QI`X7_`%B+Z@]7U;HlGG*FFP5F`PD&6h5.>8OcO^9(oGX;6PtYHL,V##e;(%&O$7CNnIF3q7rcpJ
%?A?k*W<TjYN43uJa.@U^jWbNp.u8X+a1rAVp_Z0o#Yp4b@QL_lUO[?Ocl/^tl<g<FKrZ)C,Ku6e1JtXn`^jtqKkn`oB^IcOXE9s/
%(pbT,R#TY<]d&2,W1#@73mV5E6uj"K:!pnP!Zan3A%@>W&V^`fAJ,/E9Nr#a)e@*bJ#)9cd#?"MiAk"G/^([lgLTFeBLY"].=3aZ
%IQV\Jp98]SF/=,:R]4[HH4D8[>UCcJ#QaYKM7OC&%SO\<jV]3JD2aq[7tG)X7E6%J5+-Fkl.-eXU3G=n*60fk0ed^Z!1tg]DLe\B
%+ontO$)?3E%_0<?k4jb<8/5WQbf9K,7^uPZ9%db^/upVl_$0PQrnYp0.u3C\A<0peX6@;1'Ja.BYG0E69DJipZI%,*`5a>HA%Cm)
%==V4NSCGNRZrF16PpVXc_\t^+k6lB:]$hVim6[Sk4gDdl;X'3Z;RDhb9GeOP/k.jD4B\:;\i,fr^rW[]mR<9WI2RjaP\N]7k*pKG
%+4dEo84aX=0<u>X99uX-,tOu4?'Q\E.1JZkH9*G,/\]<[*u-sd3S.t<3_rWJf-jOgPV.q:7T(RP`bafbl7<A%C,j"oRfQd(&\s+X
%5S\tl;FP<^N\_K\Eh)rb#]A"<_@d*5#YNP(_Wop]5Vm!lr.@DAg5&.m`/A\YV4oik'lp':eY\]N2_6H:PaEP7<'44A$;63p1"83K
%_r(1t'7j^/>cWg7B>^(a=T1QSn.Mf^gJK,+Y%tj(&(),gOK$?Ua!R(E-jH?U'1u8/L0oLafa)1I96)qUZ=l987p5-"5i/8Ki9fj;
%]>ise`i)V0KK($^CJrHe#F'p2)#dAjTs07o`c&75[Y:h1L@lu\Mb7(0hkk1&0p&G=C/$Oa%PYefYKK"iUr,VBKI:%Q:7$2X.E?fV
%'I/3pZApYSJ*3H?Jc_tkBN#9F"g6:lgPR^J6?7gM/1_h"GBMV\U#K0,?*d!hj`]NV-'SJ>_`O</cK8ZSQb@0.&%tdKJ"`Tq34ej$
%"n.&<X<??Hlj09lC;EFfW.kFl+^?SqZ;,@u../X+?+T27]euM):RZYuF;StH8mpK;7n-h`e@?T8Cd9$b4dput(:T2=C:c<6QFMb"
%0W<3X85tqhH9>)0-4h?hAAVeBF]Jdk-V@B;fp^dP7-sc8Jpb?pjp()83*\\Jg)rt[fp^WdVI==/6+Q2E:/i0mmPe\h0k5%1M@pB$
%RWX-l/Q/D\?-?plM?<D[2#i<85-\n`7RUVM!bX"qC\ig4@=FiK84XZg-7,aeUKfLY\BFc0E9j0-8V3F5F9M^$BMB[G@f6f"4DdKm
%akrF;Q,@#3f=$pndS/9M6g^oN[#rOSQ.!ML+VfKXql&1!FG:R<i!]=ReZ+A-(3(DG>*2cM/p92ZLNcI39q+O83h_^hU`\f$DKUmP
%201bjmS1TOR&NgI6QqZJ:_Hg88Xa.Yk&5pmP%fm`+6h^3LB016eHP!Q5cVOc1)1_X8MIt1@=fL.>no_0F=/Z(0@rV%S3s4PX3QpL
%3[cG)JSM5qd&Cgqo5\XTJimZF!B76UQ4^J[d.T%Ji@$^%o$.Wudt6g#?V1D\.PsdmF'+m[c+@MoU"MreTrG&4d61B/]9:Q4[s2Dh
%8bO0AocYtY=*J[_Rp\;XgG!eO:ele`qmU[[*hMdP`DSlLM5K*sXDl&/\J1&9Q4cR[X/KXNp1s06LGF*j[4MV603t&[TUC6`^#KsD
%bmY7A..E%FdKR8hJ8cKXnSCsX;gF"!A5gY-NNO1:AONiC4DdNTdM>h#@C(Zq=F>7mXbq`?.[e(!K<>V/37[Q$[+Rn"e\]ed9u20h
%?1f4(gF,Fn1l"]ekq/:?H<:('VAdS2PY<Xr&BZ*7l>onSK52f*)?WDJaTUBfLtbC5"19K*-<8MZ_Z`WI&L=q]Zlb,\YR$eDm,<(`
%#$XL*T8%O?i0FCJ*QpafX!A5Gh?VkEf`?"N/>dRF.EdGc=*A%UY)p@<LigOh*)VO;FTUKu3S[(10+rY_'P0`@rtm)I\e`=S0H4N%
%RtD1Dm;1;Hq@utgnHW&&93o$=V9;[>!aUf1>Ff'*J4I_[E,cX;otod"La3EE\0GN?D:%u&]CbQ=#0T8NRn!:P7Yh9Obo'Rh&q1_m
%O%D]=rbJV7L.ONA4?$b<>U%BP%s?jKI!r)^jXh;fb>4_2ckKTj8[TuQQD+,;crA&Ide4)A7$<A$]j-4>e&R[p%j@_U7]LQY'0u#'
%%n#*2iY8mrP..\=Z.Qe11C^_u`\`(hOhrAYSLpBY5#T(p-qA$R)&t3Io@k8B*CFa5;`c!cC7&6oAZ.s3n3.?H;_fZlM3@h4PfO[%
%XX>G!#7Y94.R.D!d$,d@f^&t)Ymk!:Q*)LD'ZXXFM(@/Af4]B3"@i`cKn2@54D5(r>4gkrhn-@&>$[?m#4pdF\Y3+^Bda9\ec1$#
%2rbLZQW'=)W6g\g]4Ab^\5SPd$Rrd#H"[KL-<Z.m@.%F\cOUJ9WND19ToB.Z]`OKIOUpl4PF<[N="!Bd)hN/mf`UJ1UW>HuT(L@X
%_-Nh3OKd0Y<*G$_>8$UgWCiaVG(XUQmN$Ei,KAhfElFim4iY/dKOtg7_j<V=X.j*n'dj45Kr.IW2;U`[45tche>O461">GAL.`JO
%YlN\S"&5q9X5*m\=NY`(;N"CsI2(O9Hp%VlC,j-HeZ=^XM:L3_Z]-,E=#o@HT0Rss$V\^(9%rmqT,!/d"t3/2e[CM%0!&cMU;.dN
%VQ!2ag"Nq"!#0M(ifq=#AKZ_>;,PMK:ddrS5fU"C2f4gCdVUbnL0(KrZW/OR#21].OFZAq(;\f9;X$DM1R6'rRZ8K(kss5&C7=&r
%$S68;!pN3)?1np7\5en1Z].J9\=B.R(5C)TXi3nDNQB=anGjf>(3#<ZD>oX\p/;qO9=Vej:^?;YXIl;#gbhO(UI.<J)4MJ_i=2(g
%m7>**G*$o'I[ZPei]58`WGQ=soOI4(A8*p>qO):g_,3)t%QY#t8Z!G=DCpWQb;bgGNFE/S=e\kWBY%IeW0s.g2GeWHDULK]`I!XS
%hJahZ:5?:;leV/t_-Wj85OPjH[_Z>nTC.9b4_QLqn/;IP:qV<7\q%8d!O#)qRS+\-h4EiWG&Hf7"YU[GSCJBt6YB8Sqf==Mn`)63
%W@CgTkmqOh=XT/3g_n<4^@;mHP5\Q6@8ZfJ'HMsfbB7,YPG$61SAa>85P-DHClsGoG+d#$Bh/1W&Jo=Q`.aZmE?Uj..lS^4_Tdn(
%@C#j+-!V7tE0RejYV1]E&"BZDTiLqr=2250(8G@H%'&j9Xi[_a!*TGZYnU>3hZ/=Ae'\u=#SPd74Goru[#KFkM;@[R99[dO\DKfc
%\lW,bq[Z8d[[?*/pO\f'_cdSmD2(U_&\POb\WG^g,N,e':C=*TiF>/e1/nNL.4GYJdrgodeoh!*4:@'TD72PIVGbUSg$$TLjNZp)
%"tGGD9b\HDh)?)jKu/W!@=V:\l>fT+OI:?(,13p=j+R1E4kpjMafanaFT8F)_]lp0dpYiIEG9Op/^h/n;Rhf!%e4\.Q/q3]]KF[i
%>F)]1&r,mCdS`Q@c6o]\FB`gi1;L1IFmQ#W7tgYB:Qg8[FK)]D@u7Ing.6g7-(.%208kEe^?S#eT1d0,hCNNLfTB(32T_kWThOJJ
%*rHGdHb8RqOm4W!LDS7UH<#EbNcCjXp/q?)W1uq$4Mlgbl=,'>PuSY*"b0CVg0B)XJrn?4XpYEHJRg=T^RYbul\(F]6G8=JA@X2Z
%Cf+%A[5im`)`P/"=8&9kYfJOc1Ie8u*Mr29)n68\,9`!aJCC>)7Y\P,6WdSJ5hm\Cnt7Z[lSk4A!C"_lrFT-TYqa;=*'<g5)eN_i
%^Uj1N0n/(NN*j($j3u1ng_sag/@$\g:bp6&OJ@V@_.781AIarP5jH<u>^RJpC6kl]F7Cs?MHWK9Z_A(Bp.T>Eo7kD;8j6R*L]RrC
%U;4Xj.'RXu3[5%Z^7.$2^n./f95e:,='$cr)4[N]]-eO+9A[OF,d38B?0?/L`Z6KJ.-\NRFc<WB&O)%!+.,[?C=9jm&.]RTJNoe@
%$o1d]YZru[+s4o]CnPsp(MJEL<5Z#FE&61fYG7?DYU(&:;AgjmW.rV.\lA6>@$S;Ul4?op72H%c?qSI%\PP-aL;qA/puf!Bl+WZ?
%+')^%)_%u-Dc'j-A4et58gu7Ei00&fQsi1=?Eaq[L8b,P2t=?"=6Sj<<H*LZFSIp]21[h9<W(Wll&7gk8h"Ju%]S6F,r??_TZ[gm
%@aXu#3^,2c;1M(_?t&7"P_.kL*_9%YX>ETq&:-#i!/B`[?"Heg%\;NL1_-iL<l'n`6huRCbF$ZH*,e`EG[_/RabgsO3b8\gb[*Ce
%9IP\<mk?ad;C)`eNt<TNY)U:LV[s5OPX#S>?"#K@>TAK$NM4p73%qm#QD5].0//s982^a>-TQXiAq8fk73nXkD]tOjnGMBe/r6MF
%/6`ElbB;?<>S\DBLcHi@_6OgNGdOmJF'BF.ZF\o1iZjj';gck4mR5MU-$<LZV1;P"&\[D*D@?+X9de)9FY[6/Ah*ZM=-OO.RN0N6
%"A't_$=8+Q#Fj6MhpR&P$$;kW)b1P+-./gI-"TRi#`g"SPU0fI6^;;`W$&N/XpS/i^"3E/M+fGY./Zu*Lo)$?<,K/<OWpfMg5kK*
%V^JIJ>qjG>Q9$Bk3eS\>TMEiG\0JkG@?JRVLuaBMAOr=I/06i%I6(;l*5gP'6>AT8K5)<cm^!o(:0]KbD102]dA`WC]*g;C_SV0Q
%_h#Z-SVDYGmI2/9$P,1[kX9ql75'F5(5i[01T7dVP!dmad$[i%!.504Y)36XeS/"#6@m5W3dsc#]b:mIkY8HpF9dge_aHJ[)`54)
%_59*mO7ZB]*o@6ULWJD1_7D[.!k3":NbPSO`T%ZrU)HX%_.V[Tjf0mF)JJVjeA?MoZTBB6%oE=WFP=6c>tn>V!;8J!6r/K0M('sF
%?kud>8)sUb'<=Xj-BLi/+e;@C$D$Hj]q*3hrDYReX6Xnp3s9D#^QhQ.`)[k91M'NiBdml0Gl7eQqa8D5,<!A!e/=`&SM?&T"T+?N
%$t@?,dJY;+)EK+lEThcPoI134EQS)u&=8-F.SrH.]M$N.X"h8%6OV+:)Q&3BRMeTDmpFs$OZ/i)SNOA,>L5`[Cd.%>6GH!\a+Zr.
%I('2akCTR$75^R#XY+4Y6`[ipBYMg3iiQFMn=b&=KHJTuiremmrtq>O:Im5(XQBZQ<<FII!H6t:<!R1_dYN5>g)-uZ`AU"P2WLIC
%42ml1+8cMad<-^E':\e5,\WBhY8-G^Zde:N>;^Y<6hc=Hn/20iHZ.?eb-IfLrY98k:fY;2q.)ZgY8YVZ"6sG!]mFF394b4<rV,']
%ccgtR_f`,BW$>18peZUGSVWrN\[fu&.%V89`jpeQZL_b`+F\g5L\2PLd@jDZm:XWQdWXO;JMjI\"mK+>FhXe+=X&I)Q<u>^.96P3
%4K>N?%MapuYb;1_GD!j*]1<jcLAFd"!#o/ld1?>[1H`E:U7]<h0u#2Pc0J?md#?b:X(lG:N1R],DHsU_;M&K,%[q#c9nf:FUs7[L
%S0R;%-&`qek']aXI'&J^BXDP6PB3V"!TJVdhk=TJPbJH6KSTM(IghJnpT6F3+mEOqVK4*R(OGg8QBKO^.-OKkdft:"ko[gnG5HQ.
%#,E4A[k$_\P3U%KB9\(V]Wao<lk^IbIJYZ7`R3N,(G'.>H$2mHY`q1E`k#p-2YO4OcFnfIR<1N!WZ'Ap[BYWEOFYWra,P9lOqRV]
%fV9,KL7nbMWa[304dVqC1.5@]+8r#L1C>%d=?:eflKc3\Tu6_Wr]FoNVLikhLHH92kV/WdMPUrp%XBgueOWY=d[Ua$OuG[op9LOc
%@&=,QPkYI:pmfp-roFH[,P@F]_Pc2fhnf]_/B+K7CH,kN`!e-L\s=SI)T2FTU2(F+X:S&RFEFj02-P`T<At>d5)U2F0^)o/Ma92R
%mf>dQ1eeAf:PM&:*^ch0^Vf?q(IsR'-iu397nklaD6@#`=$:DqhfMO94F>b"'C0e^lmqp9km4>GFE)Y*4/D?8oLg(rbt"5(PT5gt
%g:&<7ehAsp5j;h;aaLdl1ts1[EGeHN.Zak(BM=el`e=t6G4#])P!.$7Hs7C`Np<>ObV;+\1"\?-<9]o(&$)P`/67<848oFmq<Zk[
%eJt,YITZ2C+JlXKPBhj0qh2=o-u?_p8!dSs=^J@?s77me$ZO_@Njt<[X:/5N'c&kM_=&i:i'6q(hO_/57.\`#qkP*DZI_/+CJYMJ
%>O*k>f#:CtZ#J!G/#[1n`fus4g77D>jn.SA*4^ke[jS(j3X,et>3OfJVcCpGU1)1u:4".`%SO((\6lK*,tm-8s.daO9aCq*b&m?`
%HZD$sr:hu6A"eLmY/U)q"1ZXTg&,0[%Q-/7HnXkqJ"7'bdbUj98N@.cgG-H-92/coEW&UEQk,?<4FWeEXs(DpBb8^$`6q-5A=BT_
%>S-')@]AVaO8r60ANj"V3?CFF(FNChG4%C!J7*(4heObhKgU4JCj#B@/cdr=RnaD]2lp?AToD(5$uM`I5+*o/r^iSOMPst5\aF-J
%W%$uP<J,B,7'/;cL5!Y7X%DK'ED)Sg#4ZA)$]2i9]g&S0on=abmiLa(;pPZnRW;;'=`:DPkt"j!(_G?LX,k=6I:5A`qgJPrc!!r]
%NGThKJB\3`#m16KKOo;&F`bgmp;nl1]2tk<7'XeuPC7S'"RDho37XdPF\_uf6J5f4?e#m>NMXXgl)e+kJhaNH?#>L'^RTSk(=)9d
%_YheiZ^b7>PV=nmfglCt[U>Q1C0^X87*^)*)p>e^\_'1#d?,Tg*%L>jMOm)WKgSmAmVH:HTd\KF&rD1jblpDg+kH?/oc\,TKiX1m
%N=cMlg*@0qQI?P62"(k?#e[Ji4-:*^$-_6B(qDZ>Y<f=]"LCVIc16r"T!X20Hn="&+fJq#1A#:T7ALBdHQCh6!6@M@Fi(G/lUpk\
%3?%U;n-PPsE4/F(hTlu?ZnkPimnL)G7]gmTr=5f&rm;bc(WUWCSk&\?mc7F`Z:E?X)#Ms+WT%;%p.5BHIV=TZ!#m88OTG6m_T@GP
%_qNCS5j,A;ig<KA,uA9[(:&:-dCkO!T[5isDF82LZU_?@iZ8^f8Yc>0DpuTA9f&sA;pAtli6Ed#"D;dsNjpZ5LD]IqqP*iE7rMj0
%aF8bV0b4hIp:Wlk+gUkm*$3]k4C(_gT7jn-]sQ#LGmMF01\-+U*d,Z<5g6ViYD+XkPFNk;,rq?m#%3S"CB<IC=,#%h##$`A62bM2
%AQ=Zf=DH^L138b[XeBk86:2NmNFJn-d'd'B$U4.A2f^.UAA@0foo;i"mJ-IS:?TnuY"J<b'Xd!g7(>4&/PeKlg]sm1-maItX0j>B
%(hoO!n4J:^l@H]5!9SLd1$H@I1=L2n/;X0=gXP@07pSc<\kTCU^Be<&rhRo+]LU(PNPHnD[mB&GR&UpAD1V+K_DEKM\($bUfalu\
%NNgq2Nh:eiqB+SanIHYcSYLWi7n$_u>Bb8!D>&=D3JA>bXR$_hdJUIAohJV\f&+25QAWUGc/]=ilIZ(^THH*=Fe^*+>U</McKodK
%n>N4M'Fsd:Cu-439.hoCGS;G3f!ODOlBn@sLbpH0@pP'=htLo7WMfafNSFe<I5`3CfAZ80`oH;>#ia-0^Wl0unM*HBV*ut%Og:C5
%a;<?7HKYoK(C&oO:_s7RY0:TIqIHfXV(e_T\Wp()_J8cC%0Zq1*))2Yrl'd40JS](,QRSWjHKt/fd<*OJ<%T@?YX7=HQ+o\9AYZI
%doBL4Y-E6J"Cel^P4.EV)'eLmY`5+pRO9s!Lnbhb3EaCGcB<=9GX\:$kb4<XMFYInG/qCo%OTT_Fk#-WPuK4HqX@u`b%;sM_!pap
%#Q;Fp)%,EF!*Mn5DQ0h!]cXqK>N$l8KZ<$jNMfPpLH@<f<qdI]<em4Q"rKJ7fE`ChBj-[JqLsaZMi#pRdl2"+m>9P8d)?aPe;qnn
%4&4UCXZFVP!n5p0asGTmYs[I./X0pcK$L;\kY/qm/P5QF0LMX<^!O_j?h;a=]T(ZSVshO_krL@:QWQ@u!\rK@l*n7L&>1LA%Jl1"
%i%(QA<2@*b*kF@MDM"_Z?t[6Hf&-Jer:HbnBP2F'[=GGT'\sR[.3ofQa:4=hDR=@Gi5ueL*@n2[l]=qAD_)&3BE8`"<X*WZ'am0G
%k"ELS[Mo#"Ya"77?JYP24Q<R\\B`V@(>RcngYqY+`jeO,3sRWdG":JTLKq4t).C4_EQOe7%r5WtTA[k1[IS6A\AJ0E(Z&a'C?2lV
%7WQI3:tQ2_A&'8Yo<kS<Pqma0;ouDt]GXfV.0A'>'ct/RJHc>f0f!!]V?bGRn81#KadYiF;N`Y^1bmgr^t#>:N"%+-!Y7,>W5;\(
%#WjFHXA-]lFYcp_G,"0p1l&InnlFGgjF9EBjgseKE4eUE([HaAP3t,NbqibF5:Wt(CSJG&XYah^5%O/>\i'eV`%B$-Z_pCQ8XF9_
%Chq#%?;p.DOtmj[_*qIe^kRgt.P(n(1Z>g2HO<k?ZO5$c)L?E)q8,$D*X2><Q)7pulV$_`@l.lAHL5lQ?8(obLeU$XA;cH%#]=I,
%Kclbc1hZn,6*8dsH5^E?)6)@"O5QX*,s=+EQD0/hF?Yr+qNm$9c\\4ZprN&ibs.V,XJ2qm'4`l01W6H"CRB&o5.@ndSNqRd3UN6e
%DOn!&H[bB0DFBnA0+LcZi:+7riTW-(iN>fQN[fH%g!6cYqG0uR1&k;?!mroJnmSBT#\G^Grt0)IADl<mTS>iE]*:sp1's_sNG+tT
%Y0Y^JX@d#<I.89d-6YBlfgh%?_:l]GM\I0Y&$)P@i+YE(+#h'f^']k?2&]8_5Rr"`p20==9LfWLH=,:f%TeV/VP/PQ0rb&#4Fjil
%$=KQ%&ifj'.kGiZeH2TW[4uaBauJoq.1I4lP@4tb3EQNn:Tt!#BR`]b:J,+[nU@;fGf^KR`f73ch0u!Jq`S5mhr>e>R6)YhAoH^9
%34L6F&1&e^,2H6O+1r=i6m(]&K?\_ujOQqPhk%(jUXl:,VD(MC;1Qd[2>X14r>T=HfeCc7%0BS-QKBmtnFn=kX:b6g@-sdX9[QFb
%ASL0,`Empo/bPrXp;?WE,7J_0j6'd3reG]Fr'Q6\B;se4;?QmB'QiuHk"R+f_P*(Xce\G#,d/KdV6E(a5CJ_8(&lp(/qIEGJR^s7
%$`!SdcgK_'i+b4gg#!.cmT:J=7Hk?=,Ok1L:(5>V@3&na<>?&_Wg%$7m^u`g9+CQLn)HkslFYGg\dj_?2&]8_5Rr!uqJFf$AG9j)
%:6\QhmUfqV+\`EjnXF@H72pV4<-<9SHU&UK%Nn'aXrBn:J,hEhKpEpW4fes^5?0hkL`f]+b8`bLLLagjm%"VgV@.X`cBl,q:Ys$L
%Y`X.in8o*LO%UIa5(O:54QQBa84;qoW]?Psr#9+sg/eg&!(6/.1"X?e',Y$234+G!lY;K$S<9CapUPi,[CDVo[CE]3PK)B7C>*U#
%0iDjH_-i=n`lTmo@Bn84#2TmI`N=*AY<h/fNPs<=Ui9rkhs)j^WdD.+C13%U"RH'fE5:E/dk>7\?:(15hnD\JDGSfCJr;^p.3<n>
%cb?9J?smcSZ2B:J_&7BB$m+9DM1XDb%.;6kbekWfI0_C$8$80SR[sHAIG><"I30A'f:h`E7cW_HaPkEB^XZZq-Y]niGnkt-I#qA?
%2N-s"oB"ajYk/k#%/86IgUEX@]JDS'\@Jh>:555P3,N]q-KfdM-0AA?2rT/EG4sigB03lI:t?G/EUPP?`*k6<SZ=Ef\!<6Q)Ma(_
%]%m`2R@4=fm$rQUPVP)j[ViVIh<ufaYbkq)#crDR$^]Fuo?0Apg6q<bbY5(gE3@s5U8%o>bU-'EUF\.XF*5RdBPS$(!/`m;"Vpb"
%"&+KI!7n3!0k*hp@673W([gVrgbsF+^"`25fTVl)k&_8;L?Zmh.eY2?<S>;Xdjc5c"34OG<iWhS"pZ.Kek&MbFg"AokV&G8ULSOd
%/\iS@#AZ:G_lI0$2FhtQSMD+pqmb8!bZoM#>G$+%TTm@_,_Hi:+"tTs3t[=/N'$!uMmn3>3#H^1[<h[Fen)iko]l.7TPABMl$aT4
%d:VjAT#/tK-T%)tiM>80V>m3T\&)V*Gp'`/Y-7IA)YN0r/0.UiYRX39fZPLM]dZ]'9VT:nU7<Hf(pU-n*bkCRUf#n:_`0.%:UR"'
%_:k63r6L4e>d0CS24)pA>:75r4&]Q_3^?!tkdr7lfu_Pl'4rU(hdfS7<q^:%(\p0XFUpF*9>;-oVlNX=>bge14W3&Jk^0`oRIe4)
%'[H9@9Kd\lcIbs+"g3o#i5'9>ad5LRBPT.tM/78J%9D"JL68o&?G&Q0+7,m,Ke$eu(XGH7&XQ:"DiHV8=B*jsi"O[Af@qnLV17Dn
%n)?erg=IJ;\4#?@1J$KMe%RK])'eTqc5#%#\Se"8@Dg;C6/<pbZFl=:%q*lbK+8pMJRF*4Kim1KmC=[tc8JSIE<YsS,l-LXJ9:p3
%72t/oM6*B]K=+S#bdgjAlTC?&]ocN--G(9_YBPB*DTBd^FZO_qo%i8o9,Z^:kd<PCo]7ic98Vd?CgrsM9@I*Q>eB.2'&g<4B?iZ:
%^.C\*qTlUJ&6lM)[@Xk0#54\m\Eh)t$&aL3#7-OaYX6H?NPHnHCB6:iV%/'.l$=t1"7,[TCON1PrUc*)$;94Bq"\!us5=t?s4$;g
%=mC4;eEFf_C;`s=F6"P"(u+lRF$+grWV<^h[/TW5nl56OdBR]mD'8[80<K4m!`+*!B<OCDD\+JE'%?Em9jt`3Xb,gArXNjU7)?tm
%I.eW+6QZ(^8@V^lUgL4qFZB:HDrXmnl$K[[\d")52&8u[5n%sTqL*(8kqP,#-R,cCqDgR<W.'Ui1B!`*,$GR(kWtHP'@AeU>L;2\
%"GMA<AYJjOTm_W#_Xn\"rYP`YGmi6"aHSW7=KY([1HD_mI"#L7H@Ya*IE>-2qF5@VS%KPuVsEhs>iYAH)$FsB-f;s?$AO&!5?6"*
%N!UY=Jg\Oe(q5.#=in]f?kF`bq4l%6[7/PG!CL\SNMIuHY+IpZ6cbaZP\TnLA;ug`!^5!H!97nZ`EHVQHTuj%\&(qT#`m"`*`&Co
%&9iToXk')S9ki:e=,^'Scnpl1=950Q:VRNA4&L!$J,;.k]cCB?$8-54VM;HqQ`.?/kq>n\W!edHfJ-ls_8Da%+h5!t(T*O.BfR?B
%LH=#:20u]8lYE["ZSund>kNMi4C*`_iu3uVcQJ$*=8h9I!?j6l9jmpt/b(1n-@H6lna\]jH0%]Og[h?)Vf+HoH=q]:X`IpPGQtN#
%jsiuM/2`uBS#R[61f"0[)Mkkn!rW<n=^C7A`S^3A_clCf@p^*p/#2P7NJA7k4V_lL2*8F:g@iQ.RuqP;k14iQRtijE]6A5U_cllI
%0&0p-!.Nm:G2GZfaeQMiIO/ee,,A\fYGR)na2H=,*_W>H0"Ajdr!@3bg4ME)DQo9E`ZE?_&,.39Tb/J+gra`*\euE[<X6[lN,@l1
%OnbFtmLhU0LQr1oIFGc++[&NgUgdj1PE?Q3[:1;J%#:Uo]MVk62I[?XZDGYfM3&;f6J4nT_I@%b+^f;B[:$L7HLB2;[Zp[r9r6L+
%<>3W&EbmglUnAdri$[7WjP&Z:_lro-ZE5Q%-$!$`g)!Z;p_8l<[CQXS^gaJPnc%]k;HsJCF=MFF$qPn]e:3)50bd=kR`&pfX?,!5
%I2D<ols3#XSd[a-3@e2Fm1Jps_rFre:DA5NR40^]qT^%JLc0+fXj>jm)YR%rea+LsmV0k:R\9@#!roT1`k::TcYFm-ADi+nn,uNY
%fIY:T.uO6%5oC1`q7.fm>Y;plHWi,.Me0Uto(et@\.LUpSHq>`LVVp_JZ!9Ti3#<%;kGEHa[g*QcfkFSX(kt`[,Y8^oiLH-jN=Ki
%!\/mj5lZ-QBF7:[&q_2)b)(E\5i)(8Bi&8\`3<V6<YtpXY7ulpA$uMKUXG8`3(f[Eh*TH#m"b&h2YbtW+Rus2ior6iiQfod.rll:
%c"#ahPYe:S>/Y*0o2;lS*^Iltae5Wud$k72U-&u&LCW^&"Dq"EM%1uMd\IPiK(HH4=oi\`66A)l#iMT/B]]r)p,_k^4t=[o*2J=p
%_o5M\0Tr'BNuMLRq].o)GC6u>a2^Dd3-T!*]ai&9KQ((9+]%a3jY8\7ZO4N'RXmb+/<Q>5,E'f;=c;d=ZS8Y`d-(_M137LN^o'Ga
%"ZB@3,nXP4U3D,L`^p23[IjZ1BZ@9na^L1F-Nba\/q&)EQkq^.#t%"p@]_;.lAsiDXYA;]Nh:eir#aecnP>_$SZ@2q=7$:OkpSU2
%qQ+ChTIU)MS9obk3hOC^8m:Zek%Xe]gZ5BU!XW0,3kChY&;,'DVh`QD:QCi&L4ZI67Nc,6C`6WX.qaFL_j`V_n-DV%M:j,,@;GsQ
%J_a0=COO<)J,2WPKr_p(O/M=5G[0;!oGIdOkGmEOpi`/Pr?,SWf+^/j0gt\<+>RDSP,2Sd-j)7=4O=suYUOiHJ'0'OPmFBN<biiP
%X@KmUE-nPMPt=G"fd3.6'3'JiH836'dNPr"\27V3!SbRc?S[fe]o-+R,k".\kpdr"f18#P!\)pXaS2s%Gr@CGmkiSW^/p>!+h5?I
%)Rjd*SN/%DZc=J?VDY^K"<L:R@&;W4,A;i/KU2EU;1C(9bruJgaU7hA<0CAl6RR9jFS%9qiaSI^%DACGM-FC4?\?8V!f*]"+G;fe
%q,RU$9EVr^OcJ3kR7/L*Y'gBKPRDMTOfh+$:-+orT>"%smPR`9j`sT!S&Wj`b@I4pH:W?XJqF]6-SKF_GS;)#9<d/L3VN]M`]<dD
%Q)%0Af;j;@6\"=rDhWVR#CWMNd!&`imr[seh`9kDE_aWIU>#*6JpRM$D$.T\qdV/Dli^Gd#56XDC&-j09k[iM(!gKk>aQW]6VVEn
%l[_I%g,@^h]iG6+;T%0Cfirm6SC5(4,jW(T\FLH[iNSQIcGirZfuf>e^u/X\D\"&DdR^oFj-kZt$Su?ABOFZWJi4-T6JfA'$]ifc
%F7n8/j^5^j)uE]H;ifX;9Wh[9J>Uj"p!F5uVuZFo0[?r\h@.Qf=$VL"8;?+V5)/F/?jYS=T_[,GN#=(P.;^iE2/*DhY9c?[NY^IY
%K9/n:.D#7901N5^9a*SSDGXlYWra<!I5,nNPN\NFK3<3(9I\FZK@pRA/`sg=i/pZPE(ZR('4NgqV$@$oTq#i6k#ZCoUfMiS,tlft
%WjWsRen#=JWG[%M]bD!VNCQ_+*CQL&BR&h7"QsJ"kQe!,0GG9i[ZBRpfusQ9'#Ztk*$/Oo&2JW"bEbXUDZ^[&-T(.+)JJ,6/O7j-
%[]H-[&FNsI+aZ!64PZsp'#r8u<U%_5`hR4F7Te5`j9\JBqA)u!(XH!MZF"]`.1R+P&4'c\)DiD(0P2p7@:B0b>4\>D4Kj&.PCZY-
%#+jh8S4"F+POJF"'_7!LnFWfKSN)"T2sjc#DOiG%GCK*0DFAu'2\&X8i:+7piTV!]iN>T+e!_X%ePrJUrRFd8KH;@3c;3]0_@l4*
%Xq@a,*2(f_#UU8g-6u=rg_aLn0`:<IA\naP&?$<%Q^YC>8]>3rTP.u@TLRU.=I4f^11/ODr890^"uH,h$m+";4C(_cs-g#?I#sV!
%'ocWN>N<5aShNQF)j<52=L?,>?rR2F,DmDf<4d`,C.u%rYbOnu@:<9qDc=[i8i6-bRRsW[f*"(qiDk('3G2,8,dJo$GD#!,#.n"'
%b8psSI3U\f48(ab?LRZ2h2[PGl?)G6jGQ0Y.l#r`kI&N1i;g!hq86*9%\X.h&I`<ZG=>WVkaSn';.VjdeZR(`0']c[Wl-BqWU:F.
%!3X;V0llD6p7LPr+cPdhp,G(61&,9e:<bP>$HG>=Bt0+=c)RQmf(tPhrq)3*#TMUgq"\"0s5=t?s4$;gg$"d/;)CP:RHH9+r8nHW
%d;:"K*dU2sLjg,Q.uCp&M5U$UDj-5?BG"DAg1-*]$9C7AFL8aFBiDJFHTU0EOID0F)gO8o7>ra%+n4tJ8eg&+lI/,-FZN]),l=EE
%@sqH2od(RUiVU+s0)Am2SutH@EK.ueB9:$%M129YgS]%b4q>fh'Q9ID_$R.L\:JNR:CbrSbW<;'TT5H__IB5)A&;D@=^`b%D^!RO
%@q302I=ScBW(`)X08rZh8&Ps&L%MB>I<H!HaZP%E/oHAc]GHF&X,qR2,Ook=.GPf](GZK!:e;Dfq1:G=C,=25Fq#s+,hW]OWo@0t
%\JI>0ah]$01f]UFUh$[T<GW\X\rfY$4D2EM_e'>kS1.HG":,+nJAlE1Mm^9@T)\GBg^*fP.Qed(GW^BY6/4KA(Y`lg;:mQ<k>8"H
%BdU.5*tGu^<6c\#-&Hg)i3`LWD;&ni8p1nRd(O343Jh06U3_]pcj\a59pK,<joU0j2fV0'/bC**VLi-o0io:[d9MD8(VNr:CHpIt
%hT1]Gd<FX@F<)E`CHS1PK-9T0oS`MnJkG='SGG-U$@>_-UmZS6s2R%q@-nBTRH(4<Vf+C@H!sX]rGl=tS.%?%Pc2*KBq0U)h0d:q
%<6;CNZb=b1b=TfoZB=f3?JY;_`c,&'g5VTjCp]HRGCd]M)WgDIPKG^goU'JQX!=XoCrBFm6LBdu%r64BI!c;leC%dug:-0N^$ld6
%=$pKs#,8C`gN;m`Z7%9%@1@QVmN0'$m2XV-SP5R$gL(C#k2?@e6+/,W(=3McDkaIm3p3A84jpmqD\)aG^a3,;Ul.GT3.;;T1Gc/,
%I%u+qMZpPE;/jq)j9(ap@CdQEek#ct=>MHT+i1d6"W)+V$tq09U"PT>Eq34*Q/?UrE`4muaD.*O&[BaKX&%`9:*MN-V'\)6(5&/s
%bHYo".`ke$`9$MH'hmO23#%f$J<cFc9SWe!&uNU'_A^#AkXSKt*A'dZ-bg-)S7Ak_<7.kk':(tk7q61NC*0H=X<V.L*h4.f^bP(T
%&]\?i3FGOU"t\A>YV;K_3HWoBV(LdG\&]`Q>\4ukO-pl$"O*?%s'\M!3SO+cQTVI>rKDdWn3_.Ial`8Le;YZ@[@+ajU0C+1:,'E(
%U/nA^@\p8,F+3[<DFKb<0,@@8@.CbHior7TiN>].DN8c4`=q:VI-&s_bH\roK464,9`d12<"T<5R5!r8l??0A$HP<I8M6aUh/YbU
%(Xh2^I8"c3EDP#P@[ql$E^k&`)K[R)=ZE<!jRS,dVj7P*WBnPReE/+l1l\N.WH)\N%KF+_`'WTcLPA=2#13Ce9+Bo+VD<e?)P#oX
%Oi>o=on"UoXT$>ccbPU.N0H6u;F2O(kNha"RBKCgl8EjZQ)Rkb8E2/AV_fH@Z_edpMQ3T_a<<bZPVXg#-E,o:9c0+EI60[IKE*XH
%4umPm?iYDoYb%n)Z^-I0aM2g(7;gapgX$OeDB2_e(nlMWF`"^]RjI_Z%d97'qCaN]r9ohcL?hBGY%-\<Mc_ko8?5_1AOgMd,qTO@
%aAKb['@,@^CS]R"LXX'4g=2cbA%VPnX?92q`F_H1=LGV.2TFFuUotL!LdIK97+`XB"KXsN?7kiJ+F1_A7Igp_MN80T;J8H[>JJ^r
%YZ`Vgkks)+(LR0<Xa422H+b:g$&1dOW"(a!l8De1<-EK1kl0>fp[q'lhV[\=rSK>eUN)\b93H5**KSoVQVOm0g+D5sj'9h]a8F%s
%XGbX9?ld"\/#$=)'u^r*4'6i0G05DD@pZ!Q$I.@9c`J*DZ=ANV:i)fBJc=*)CQW!u"@j`gl0FkAZ65mZnq@!)C#)>Ad=pok0i(s_
%T_(gtXUilHiIbipU=&TiXB$W;/bq5`H*>](X&LgU*HD[$Pi-USk'LjQ,oh7g/\<JA7W(l]h#M8QLh]<90ro5\ZKU]keAMge%X8Eq
%U[k@;/mJCh#EW1(L;D$6d"Cf)ZQ6V",<720T[\;)0_:':K:pb<%MJ'pAHRl)RJ?W/>tZaoU+G!/(s_eJ11I!f$m8.^6T*dp?uoNH
%UH/W"Tc.(Gcn`)ZVb<_Yd,Zq^-gbS/@IQ8k;4QojUW*<_e1r^,W7fpB'"JM2Rc#)DV01cm=@Wj'@aXi-PeKu&r"a^#X\G(?\^gf_
%iY3,sj0,5\S`m6d#"2I1b!]:$9$1Nd!R?AX]Wm@*"S*IU@Ucf6D=eMfI=8c(e"1m;;[Fl8XDJS$4_k&j((IA^9>+c@mWPUDh;RI+
%i#Xm=$_GZ/;o[uj-NB&$OZ%S4m/GaH.&MJ9%i8Fm*ZB>gkS>p7>4BT:SueYFWM<bkl6=Yi?<l1Fc/(1+U[aEd^KC&l*=LR\;s,F=
%q.SPQnI9fVm2D3Ts"Jmna#2=s)LYJJ1(t_95($#%?REC<a&%Y5VE!3iCMpIWh&o1E@q;=bdaB)gVt$)dHYk.D6_/[%^7M%6/844N
%5,S?piqZ<Dq\nuE.IkLXdG_saHa5.B=Sp_"1bkFqeS@Ft]nFaaK0B#XU_`nu9I$+EYJ,CjQ[H&jk?mTmo-8tIWCUXnhgjo4*:I"_
%N$^lNA^De9M<I3,bll)cCk](a*^aLm0#F2&[A1m(7NX61qk6u45ma]L_RT^/(m"AmcF.C!0H](GN'u]i,7l])ocn:']@d7-A$!!^
%oB%tmfFdelQ6O@g.Mq$i7!*G2I)uPdDH;?@&G9l'^Hh,,_!kVB)DG=BNDCS+;VAhB*2\Wih_&d7\+&auMqF8!=s:SRm$dV_l%P=t
%W4_1fN*]m=*fXK@#YF8,'kl"1i075Al(uEs*YplrYeG!NFp'mY>7p"hL6&dj4h34a`PpLNenFo`-:#;^^8!^7#Qr+L7r+/T:M:1q
%es2GS:Rcu9Vmoba1.dsj1M<`:JcRdt$/0n+G&Q2c$dZTAE'`M65RRc4-hW&?Tqc-Q00!#*Pt7X,<ViLlCV>E$a?%88coY@[09[5@
%LVl-V3>u4"Kq>&kK"u9:+5cOCf&P07XiE"_i(f[toW&_c@8=c^ZukKo9BWDnFucm#[$.8\m@u,r!:-WG(&H_o'Ls1IMj(78@>1W6
%'e"Ds4kih@TQR#1o`Q),/0lJ"q2qB=h>*1Fft3/<h_&X3G49>/1=V@Da[HPK5&f.pTg8g-@Iut7ZnEB/jGC:>I55T11Jg`bggj6>
%e7;LM-a@rej#%'$X=p'S)]/.TU<>\++)OLuC>W<Sh9d7/=S`gI-WbL>U+<is>(&]rM<QV&:.(BqARS(Ge&\ggH^sK,!"OQdERs_m
%K`sVh`(tIn3M)/Z@PJ`A5&("#Q:]"@"Qc@kGF7TDT.l*@XL<o';U5XY5CFK[OjNSt=?NakGkqPPpt&2Q\:qI*#aL]@H4W'3Z5E7&
%"K<*hRi?s0dL?Fp-B"LhdZZiI.a877i%-7WMDb9>r'0`@+TRt=_'D"G^F+\/VeqU]ZEc.%C7pK=^18KRH5F'-7s5i#?>oU\eV9-7
%k%*mrjGW=3(-9QkBQuFdF!4*HW:Qf2VB/Sq\5R***O?(YJ\j".I+\nrS'*U!##(%(>T5"!.gi-[Ms6#.WT)T4aC324f,*Sr$l-AT
%5GPGP8'rA*LG]:.*1YZJR&HaW#j]p4RtPLYeo%TCq<:]4aK;\rh2\+W7Jn7anaTDGcCM"b2ckupMc82$iTe._.933`UdDn:"o#^F
%-)u1[o!J>eD=Z3O=L5"7B^TG!MlBc3[gJ]8CZ.RdV!_&.VLXK,dlY2hE7M&:GBaK=$B9-N:1t!'7MSd!@uH55m^6Ec98<;<GB#.g
%oR07m?&-AY&rEO4+GDm-rB<:ZM&5HJXH*g%F`&Ab63$'Ma"ZLr>I)Tj3l*7[;R&)\-7hZ>"K;T>`@]#=J\<hH<nT)JlGqE5Mt5Sj
%/719g(OI6iD1Ah9QX&T!DrOfbaEqoO\d!r1,n<_C5R;QTnpNV'KpcD$_bj^-8)-J>E?p3\foEV>edO)]l^:ccJ$`s>3dSa-Ts0I[
%%;lk;SQUO$l7\*jBh\C:8p58`7#S>ZcF;I[osJf6PIGN^I,o(IG[+bKoEiHTk9Sr"fOYcG=a24N,q#?jU/=OBELc.;8j)Ko`+f2;
%gGJ;@AF1eT\-/;hd2cDUfFq`N7dQrtPFE?o4M6L`"\Z>O="M&NFfCPJ3ti0]?S1q.6iGF0\/gV+4uAk66K<'F`m\R^_k!WQ.n`<%
%MPZsLA&a9?:SNqF%hPiGe(?bc$b*stE^-\@r5T]?a3C+*2MYKq(C&%(0U%-(/+%=k%<BH^'uQB9XKN&L>AeTU-9G@;kLHuTi"1[O
%`-%rk0]5uThJ4AX<qphk@$9RWNETkMipkaIJJC&%GYac`2'KS-@-+LoH*puU^\jiCNb&/<\ZNkg/!Hau6]keAc$hHN6fT59%M8p>
%[IrI?jN^Xk_Fh.2E#['Qft72TPB%Fp<J%?eLXJ)3=?G[G$LUHn,AkPoS6rVl8uoln@%kV84ER]HS`&50(Vk]hC7pk4eGY<5H,W#a
%OI1U<`Vp!T&J'DO3I;Dtcd*]7`=d*XShXV$JN2BL,?9)t8@2j_:c2_u[%E)h9!RPGg9?5S2"b!.'^h9(;%mM1OM1F`HKIOAX;1,5
%J06JFV$]hCK3nfsA9c7(_MC\-WQHMkb\CPD1LZ-Hcks)UO4UmtlM=[;!`?\_TS9J+=m75$a=I%\<O%.q'u=Ba+fBCG;%$]MmmB1c
%aiH'G^#\A#.mcd??R"r'8"mY),gU6Qs((''ku)ac&=WY'en$&+1M`,h:3^YZ0KXj\-A,JVZ<%FI8EKZHHajeZqL'bS?%p/U)MP*T
%al'<iheme9Y8kC41O9X9MkDM?<0p&4C^JTB&h4!sbdp0LdXp*X%^g#1m3GJW'V[k9Mle'&?8qD)+"OF*,Y\fA6jRb`k!p*?#-3kB
%6Atgk/#O.uIF5Oka)C#sptD(nn[QU!kq`V)cJ6,aI"MnNX_YDPL?<!s%_8;)%b8fd`Ei(4EYI4uEcBE4.d/A#7/>%JUr-S?)g_1t
%<4?H`/a2Go4);8_!Y'j!9K't*^V\!?GVj]0YkdVX@C=N"guO6/j$n:8jaNiRq`S5ohrC=hR6)Md?;KTJ34L6F&1&e^O;?/W3Q_Sb
%ktJ]+/]cR<.o+RELOLl[ps%K\fMk`Z&I"k1':cV4gsY[dV7>p#Yb<beXg$Uq`bJ!#5PqDI;0#b`nB%"Nki8@qAR?7h8o'GM[W1"S
%oqc^&_tS-qr,f^6k?jANLNe.D6\f_qWSbot)r(tX*E4(MHm+Z\co?sW,Wkrs:g]%$e,$s@a\T1c=DXm6o(R#$h7E'tA!e+c<3Qs6
%,n]N<U9I>3V0Yr[(>(^]M%Kn%)%,eo!uh6@_nOJQ)u]/*qGKERg"X"KDYe6%T!#ohEK.rdB+VtOR=:d!MhZDo>LAHj2?U4l@+)<R
%iU2n^F0O64;a<9!3GPCoQCVgEN4skjdK9n[pK8=(a-ujDREoL,YQ/la#b0c*m7JgUYRUu%d8>mt/sc@&Q2Kiog^Yu_*u[r,U%,W^
%j675uiQb-2NL<%_=)/MF!F!]:4bs>W7n]AI:UXqQ+?'^63T"Pf6I,RD6R<3Q>.&CXDo\ds[uXuJf'HauNsP$e_or*RE6Fn0B`YHT
%iCNjR^:*W^p-rqQSU;.nO)$kL5(b!Gr8_'6]n*7&)tVI4%?dCJLtrOk78'2$;bl^J`G,;<Rl'j4FR:Kd\-8?7U*D8jDL,Sl9BKmr
%D4'h*^u+*FN"A,(`KmZ!D*L-a'f,Z,@K$Uh+tQdkR]$/GD;5UkI305#f3n-Y`o?5=LuHWT^QkE84Jf-`9U/nRT;("ZYQ7HQ&)!HV
%9-;$rN^'Y\IA;YF$d6H4S-qF?AB:aPgH[;]mQh%tMT4]aH;1#oZSrA43ViJ&T!GrWX389@'8O!Bh&-%+PZq7;(K`f$EP;UE':ZX0
%E,HY<3akpdO`ZNDkIMe__j[)Shr)Y0[ISFQG)@;@rag:9oYR\AL3I-,lZi&1Z!HblM/PkQ,rD6X*]K"&Z=a[MkA$&)mG/"LaL9;l
%ZTU5hPKhM]WVNKn)"V?RKN`3+;.bFsdR5KA%k-UQ6'k[fIAg^0mAtMIIi(j.UI9Z^S[,r"0Eg$MDOnfOQk+N1)"]P!9sId/IaC`p
%2[=,C#4kE7q,'Y5!+r-661el\$Sg>&rE-iD,Ye4lg;2GOqd`:GcElXB;.r1[Cm:-J[&kd#rBNiALg^TU5stPF0c,k7"fu<_4-f)P
%E&,Gn=raT0S@2t/Q@-35@(Ipu21%Yd:,3kkU#*[JQM0CuXfR`3-Fg+@``-%"DP8OT0NYbEC`<Z83IS*`e]6Kb6HQLbm2(.VO#7D+
%V/lGGao=@ePT;E&??>uk".*b$X6-gu3@23dQ'B>)jS+?NFhY7"NGnBd"Y72el0B%UT=g.&dAu/a`R@gh4Kbr6q?19;ldb`'kXe5q
%9[THa)*FRLV-.TQ+:u:b_)[p-N*oO8TReCq',3H;*O%BQg)I9Kr4-K<<W#n_d=9<'*'gWc35A^$$WsUW@@X%$?g3KsNZYupgL+f(
%KuN'bMl4lDL-&W:[Vu^G<Y]A>&KN1'9dmeVR\98sTVVGrh[+05*1U/c$!:a'f)3C`m!f.?@X6a^Fn&@_JM@<jrs=]dECVFA8jZIS
%%0fq<p46Ik6JHCW0/TJs^5lLW-+aUN0/n9iDSsLZFZ+GUo"DcX]mt')F<OBNW%eV67FZ#1@-GFCn1jsC'$jHf-c'`Hil'in-MFIK
%S<t6e>1efdD'RL0Y+4STE93Huls;jJJ@1I[<Z!iunb6SP..eVo;\\C3$ne%1NUj;UktB:f8+5G<R-AM'cbH4N&+92eVbZC"9>?s_
%c=[N5[UGj'8Df)?l[`"9TDGL!BtTYW$Rp@)J,2'k.:O7gK?Ro(On0FmlB%PRW3Q%j!Gdts#f)Tt+)-A]`.VicNs,RqDrO1$D#5u]
%-+'DHa%4H_3<rJQ/sc?sSc8,,g^6Ds0,dX<U%,W^j675uiQb<8X]oRskUFEUa36&jRu(5\At/pm6Qb'*&a_2-_'S6>LFW"j"HG7/
%OAa_!"u)!E4kNP1%8B-&Q/F.:"F'Ng0FmfLM\8eQS"TT;j^GRDQ`T7<n)@@baa9.p\d"#32%i]W5RM]nnpP="@hQ4ai7!p5GADL5
%D"ndmLU,P!R-CbMY])#AK_=;sWr<I)egH/CkUt!+j61)47i]5^7R>g8)d+Q6^JZp^+_FKgg+W*+JbOe@E@Ykd99=C',4Y:CUi9rk
%heM$pD5YEQR=o%/\H57Z)>WnAc\C4Q2XLXcC&R;N[-oWHg(A:D"^LM0M7GJD=*??S(tHj)OLtn[%Y'6m0r!UB`$T^Ud6O)'hVHYJ
%nn8PlQ+l=U5C+-T_FrdC`7%^W4Kafkq?0^+o@!*OH"JUb8U^[XP22!67t8`g\L-SYdlDHVn/*^8p=&lm2k'?N0K.^h\M-`QL)eV/
%_\5$b8pu71ooV())!kmnAS2J/EmF8\/7j7+=',ER9,uLaG@TqHj)&5b>p/[A7_(S^94u`6$"dKJ6(5,ABedY9%]g'74KPN-o)gVX
%<@auuC\O0FoYR6e+)Sq26b10F[U%@O,P$%We*U?e;*63\D`7/S8i:Q+V?[@NdmqK'\@NYYbQa8O(5cju7hA:T9dYn=&'PIk<Z2TO
%p$e((*\EtXblRo4lLE7ZlOjXQ]h>Y$HaL70C(1rR;Ua"/S-KG7BG8o]kFuIcTP(U%88IRE$s9Y*JHjXeK!KtKnq<:haYtttpLK=c
%M3b''K51,D>&WXf^253V+7.f+)K_El4c=)#JilLI]MN]=kS^(pXHNiT[</([g7s2J`8HuU5*jDZn@=O(Jo/]2P3*pbW"VYjkf=h%
%MBaV;F[Xi$G7fdSjJAP*+)rgEUD&qM5_f'"@\hqfqs-O2Y<8bJC9hW9F5EXMg&mjgdkD.ZZmKZV"o/M!s!d3XHTq#5B(SkO*)eS\
%R-^*K)Z;CU?nA5<o!":N>8#.T._a#t(4>IXV6?).Ie#C76_f)p(/J"?n[QTuknAm3Y#=0+S\_*0Qo$S;l:?t7G*s[Yn6.(SqMT!]
%(/ANsBKuk45_AhVK9;oFp)6^2/(#'$!bEQ$qlSlL4=5<3+U2N\F0*O`4)tc(I[MjZ"@%/B\&$G*$AHMX$;]9:_4@'D>KeG!l\NZQ
%k%8U&=ktcS4GN"INoHh5`99iLD#-lO`V]ngf!+Bp=i>^ohU7TVpdGp<9K4Ju]s;0u(q@Ac;-9_J7Ic7-ci$ICY`PKjM]6(Kq[Gcn
%2gi2O_oFu`1j;.Sbs@i4?uR92+\)+&V^79KZR.?6fkDJ@$%hbYMrp=1bO(e*10N?Pd4k^G9V_GX\OiVhWbi+!c@)nMR[)f/3Bh-i
%3W,!Bg$G^Z8e,V>4rH?/@AfLX*%6H^o\bcGVJ5C`qLY@=oR5L%8)<S-q,aBli>j$?d,Eb_l8Q%KcMM\7>jJef#?9r<]T>s64jG6s
%+fY4ao!JDiD6hYNf=]'Ej?0Bj>VZmHASa`Zk"[LD,\UF+_>,$$+<&cj]#W^e9oLJ[.K2(`j:p-0>4Y@?P%`\<<r.uQrodYC$9NYX
%&l7+&n[M'Jkn?VHc:l!tc:%hn=t&tl`_soj,/uADQH/Tm96>u(=eUcbEWFuNnL>H\+fn\/c8()l43u639grqe'<1U$bZn,&XcIn_
%YftN)1B4Ngds\pVQYb_Qn)@C#a?,N/\djS;2%i^:PJWlMHlj;q#JnDr0P9KX-A0\;-;VhYYM'Rlc?2525q`JY;7btbC6M]8RLdrO
%M$c7LYB;X[6C)&p2<ej3N1tZ;V.[+IEd$oR<&5.>(Acatqn]nS'fPV?83F&;Ge0I\mVLrg9fmI;aqQCH$5WBEAnK:E4o[^gfYl-/
%3:-jeC&R;N[-Vs(m21(r"'k4A$1W%$F*!J3R.q+m73^:iItos[6?%WWL#<Me!AW&OR(KZsD,U;tQ+gk-5C"3W_bK$B`RAs34Kbr6
%q?19;Zd\ARV[Q(p_2cm*LB%umXd\.*QEKoI*E`(FG#nKSrT.8.ES_WRHA?[@aiRB.K@2Z8]B'32OsVNLNU8]`R_:S'dlG]lEKo"=
%?JbSf*cY:Tgl8H)NOOUuGCdZL)WMl9k48N".U/eG:07sAaujAm#K[K,qE-<cfmNoPB@Y/(FlEAkO']>ZrMqr9V;I$d1"mPOAIg0Q
%"rl'Oq-8&c$jW=N%u8*YA&(R>c3$G&Jmu(c"<HlT&)2(>C[]\M/=T$IRZq%']Xm?aNffN<`:e)]]P2#H#tm!il?9Q"R.;Yb$.=X@
%=Gj5Rql-ULYuZWk-^!?sXc]cE^,8\%#.8p6">_-F_C!uQ8NC@7Sbpq_,hjC-FcgRFLYaUKV\_SXH.dqgJl3&@H*bn#Ysul^fkWZ&
%C/Ro/0UR]G@:#G+YYs/[&2Dt+NE;o-]c?i16]I'6l"p;T-Fb`U(]gWPR'^2PC!k@]iaC(/5,`g18'RVfO<r/H<g@e1Lj<FaK>Q+u
%K-\`QCT9,NF-Npt]CjS#Z!eQU_^qo9&Nf0GWe6\VnE37>V^U&A7e43(oM5\:+G@LkABG\MKZsVD$6(/-LQr/$nmHWMnP'M$k@D34
%^/!kefc.I6V>B"m4C*`_iu3uVcQJ%U>5\OZS`^[HDmQ$V)%g%VOV1iiIn3/5FR4CT$2EEUUW/*"\]>pd(fS,rrB&"Z5[4i`C*?fi
%8dCo]Y%CAt&dgZ<&Vd;)_?MWD_DhO*0HD>S4l`TANLJcShM(Nt:Mg1HOg)nB_%W'fe>`9;Ltu$d?D_84"r8[B(i+YYOT*uGf6rOl
%%*]*_Gn^.cVi507)g51"bCho;M*cIh/3ou"0TH93[e"eAp%:63;CGP]174$T0QEkD/njOt=?C,5KN`1R5bYoP7(oBm9c090%$r*4
%B6"$'a=RSt,?aU2DMe5R'Uji@n>?A8/-&`(gV%UD8`7TcCQZfKnqL$sJih"u@$?5og48`KOsi'ig\1_,Wm0#rhBoSfL;mb9XBFi8
%K+u9,K-uPn)B&q]'goc9LO).lb_\Q;2q80\E3Pbr"@a)B76U@mOK(iZ/Rj%[KFa*2R.(5S>u:s(HD<_CN(/#1@J^+p<CCV)f\==V
%9FSf&1e+Qm*^0qJ-?,u=STp^J8AUg@HP3)#p]]"Gk?\bW"uD)?l2lT&S2e6W0nC`A?Wa88M[AiPU?sS,#8i!qdm+V0_H\?9F'Xhm
%OqY\0Xf8!q4n'N?rg'e<P_;A]6XL=t0^+"oSM/jcl[8Po,kqa6&c[3]-ieI*o?P3n`;^0)cMTr)4:PeX=T1$p=RjnR2J?Ws1)2m2
%::QgWoP@agLeR".[#UhiW>RG08tCC%DT&%Z73W@S%n8IN2oT9B>q*FjbS'YC$8_6-"=7Sg.M]s`+q/4lh<_5qmc6e@U(.QcA7m[4
%i^7_T@&Khh[Lhh-ZCUU":4pNUT?O4U<ICg5)s1)iAUGt6c)0J*fT^#f/"9/gc_a>30UnNX.OJ9'@M,j"MS`iip@B)%rg0YLD_n3h
%]M9J&9h.5+]["X2/`Ah($;Nl<d.n2)OD6Y<Y,^>0724(%mL"B?O2e=i)YC!"/=#WR4?Z]*XC.\9?f1cW3(RO1"m=c:#)m;cQG@IK
%kGei>-?2,9,$ZHc8m(sb#"?Ne3U:3"<FIIu4WS%?OsrZo8^[U'Y+Vs7)b2\[&FD+[2X`E(-gptGauC.aGk-e[/TIH%*DNO\:PV8<
%PV@,'_l+u;hd-Q$+>+$U6bp9U1tnJ(%dPN)/.je.8BgTT4U%\B!,&*IWi1UJBjr&U`ooO8`=Z.ZI`E/&E5%8\E&-..VaSbZ%'Q<P
%/7`5"-If?T[761j?BpE,=S1'9=GI-'_PV%uH.*!<8uS!q1/r[FR\B=f;@@6ZNSlQQGl\%4Y&^@2>R5/cn3U\uq("[4<F=(6Jm!TW
%3Dr3(!7<)Ne;Ki.&N0!e+X0`kSDQ%NoPp$JkEn+o;!jjR_bk#F7OH\bAj^7U;2\EJ.kF`\D8Ls4^X7Q5DqX$q/-/`\UJ:\6F;)2N
%D#fMqKKLT_-a;&#3>jcH8'lP^^CJX6jI>)`.O9>fEHI'uWOr<7n'kKOdU@h3GF:hj!36t87cE'qMPqPj3<"f!"h'rbml%JnW`#).
%aiBcXWK%9Ek/l+"alTM2QnAP^5bt*O7C5*lgr^D*,B`K`C-G1qihX!m(6qmpS:<sNN)r<R]AM:6U;L+]jE_J/dc_BAc+&TqhjH0Y
%(#3\fFNEcnS)M@EXu0?^<nL@a:!clMMZGA''Q$0VhMeDkU;7#G7)f70+2]KOpINpNULdBb^c9,RYbnEP(HAfVgY-cO%Fh'[);-H*
%><f/UA7bi)8oJBqd-j@KL2Bd$S?U(]#$f/Oh!,9e`W9uH*)BE62$\N,6NiX>'Gfrr!N_3gNiMaC!8=f<3^K0$D#bNTs+8]KB^0kV
%JtanW9\cZU*akt#Kh)mg1hgAWQAY0h6@/C,=/!E,JjAdu%T"m?N!qgNU$74FoSs1.#oHn/X[?hXeUSlhfI*H2SPQ,8c65Lq357E`
%!,o3[M@5mKgF87(`.WkKaVH=)nRKSO9MsFj:sK'1K"Gsu:ABkV#(IQ&m4tUR8+6Y%rs>b$%Ui:paG09$ifFc8GL4#lENYHK@]m!8
%32U8MZ)2d[&cUHYXE!V6%=LiqYZ"NR6t*?!9`/:M(@LO066j26,B[[Zp2V!,=YQsA;4f'B:r:)c#=[<QQ_@'@2i4>6R2;,&e>a^&
%rhE'm$s*ljiu4AVq:kCgJuTt/\8nBF-$%2NMHcduc=gB+[W[ZI`UP.pj\.hA"j=[i<\[@-?iiRo"7*sM_m;!OX#'p.:mR.*)AFe=
%O)/knkl:9'cJT,YTu[o]_uW==Z%b>@?-Oj0rUUlg^W,Y`2=qMtk\ajW$;eU4SWa8npUZs6g`Qgrq:ehjmL%5a<r_\RPVe+al+gp9
%Kk>qFkK<K$(H.nRq>l=S`<V#qUUH9&?Cuh<cdg-#4Jk$QNIa.;E7VH`,Il*jj<%j1Y#rJHN#Pc4Gd6qgp%j@hcBkS=;[I!90LOOQ
%B!?tYgUR+0UP`CKTO)GJP?BP&O=@&#7cFk8;0Tt\U,#V@@rjdfkqN7a"F.?)JD3`'?OGEBpKPH!5;/!]TMFSVc2GlR?fm5S*TX1p
%\o;L/>H/APYqNA@L__Q@%58a6&_;WrO*`<jF$iMW:j;:<0*a!"Pq#tb#<U0l<JVJF"K[ci2)M@k04$<=O;ea)8W%'drMM6"#&HGn
%@6H)=BtO"9kZ-01U3%&[JO:ZUdjK"R7.EbCK-Okcq;V&jWZ_fbN\DQ]3FnDJ)d^Wuh[I`KeX&"Q2S0j1%N<-%3Rmh7q^Z]W$pJ1P
%Eq,V\iR1qO>IRL,1sGq20l)&e9uTS]@Wn73&"oOoL^#N#l5V(`Qjo'!c&,?C4SC/_E1b%$:\s;KCSUC)_S%,3QQR25`B`_D2CgtW
%1Z'1ipE3#.U*Cr5SBNhY5rFT%-^V>e@@lK3CD&'hTHn4-<X/_*%gcFa2=m8Y#)cpS"cT6@X6>d.:k"=JaX1pb6SEQTZKUL>8)?=a
%6F-Xd"Aa1b8jDnnqsb@LCb`^^.HAH#1HVeLZU]ELmsB]#Wn98l5`&bA6=]Z@X92doj8(D-14'5,!Fr4SQanq7Xn!oW)X-tLfNsNd
%GRt_ASndaAU0a(gZ*?WH[n:3Mr!9H[:CWtb3#=GsWT5<>ZUr7Rb'kST1)pr#1+"j+K$Nkq:c3e76f!.oe"'(0'/g:Z/A4aMG(.V@
%YII\:H>/ab_.@'h[!*g`WWb%_TE#Sd9(_N<WM3ij_CQ=;*""0,V]bM`[OIDbW9:urDX%)Z9mLFW>)P#>_OflZLZ+8O7*YttY-kV!
%I#>M8%$mt/Q:@anehA5YW_&b8I&k)#.VED\7"K@+ai)G'ka]p.:0O[&\9TUlZ"\o`q4e-s-F=!rg2dRt2`@&^g!nL-Wk1R.96][Z
%`L!CE)<S>CJq65lH?mtd!%uf-)_>*IRH-da@SW<%:nWo4cj35*+/o"Sb?]@JA]f]p$rq<+/sEPPLJW!tN@]Psh>9`A!s=S.G"@a#
%VGu2N7:CmKp-<9;ao1>HjOD9^E*'V"s+TkWAGdg_4=8?UfM0%=H_De%*&A)o4>)hF_B^GaROBLV8$/XTG;L&a"&!]0o`&HHAPDqG
%TkbktZ\[m."A7WYaKQpqSm_1N#<!)5>TT05e=>HNYKc`BdWbhSoBq?c1=f-Sq4r@/W?k:#1d\&j(s=QIU(;qL?Ncc![LQ6&a?Y3>
%ksk0f;`ST34h/P>_668m*u8n%jM9&A-Eq^Qk4*t]^rnN"R"6jO0GSmN(fZX(Bcpp4-NL?DUU61Sd!)-!&84NQK!8;3o`1n%Dse9H
%J?1R%d*s-KZ:C0pQ(kK;o(h[ph1g5=kS><md'_Tl_$fts-)g>UEJ[r-<chcDYt[$kSJ6d,%ts;TR.%.2!>)IJdTO"JkfX*1iT)g$
%HR;_o2XTI:iXm4jrli"fZ7.^WpL_13kpSoL-?NO+&'[A&Hp@/for*aA3#$suHj$SkGL#[j_$cHiT%PqAgNI0FFRXLZ`]1BhQ@?`Z
%YBjd\:[#%$OUUhti(.23@J]+ub%hCW!*+8jJgn6o^L?Bb"PM$412J*n_4PT4Susn<Kp)WJ(D%iWLC+ntgYOR,I-g?Ma("maAdbg!
%BED5`OkEMM#SPfg"Q7s0F=)hDXFc-mJiBMU95+g5(I`]+qM\3h+(F0-UDotsVFRssV27NWS/QQ;UDMjN(e;BGGbnHr5%VC"X.moH
%i[T'q).l$o5%7QNA\]<tO&?*re5Fe58@NBgLqV07%'V"j<q-+<W3E?A#P^``5E;cQkKmGqkX'eO=dFNiBRFI@=#20j#=M(p@e6o8
%Anb]DE#qS)Xg=9\8r>$:D\"@mqcdjCPa(5$8W1@J"@gJ*kX+Tn3]`MD_9i<t.bVHD!RZK*'3D<O+u>YTKZQ^?@%hCHhPYZ28omL=
%9#Ou'FA^:'T/nW&Ks1MF0Rst&#aM^c1GU'1=?SlV1ca9",J1-gJjZFP\2%l1r22;*!Z:!g_@fQbrcm/6g&aptel4a&K]'rr"CoNB
%5m$'8KHV]&pG*[Ki5B/j$J1`K&:btj3S`io.Z.OjSp%7j%BQYLPr4R%7mJG[XA$9M"2.+a8=O`=/=H`M;steFQ?r,d#@L40p:5fR
%nV.E*c^EW!E44-l7.fEG#oagBURVFf\a40Lkg1#Ke>WZV'oBq`d9Wi_U<q9rXH[s!>87&/"C4`dSZ-P96_-uiFQYEDR3EmilLt(]
%E(%OMq2'el<Iuqne]*M.o*FY\&oQJYe%5SqSL#-5'ZOhflf-3D.1Ni^WTg/I\'n!MdM+6diC840'a7Ts6\*mXapD/kV4W$If58B]
%S=NbRetD)-N0Q;G]lcJTPMFN'@ac@JVKO\!_\E$.Pn0?__S4[,=*H&`V*c>S,pa'O1/3I!</Vg#Ml*:-"]KJ;$FX$$]ecBuNt,>1
%'^.7iDjR8.Q"bE5;tQG<;,"<3)I(,kTO]2<Im`eBQm+)Ap4A9.=9hR*X/-&]er5TLU.SP,O%4oSiIM)M4m!enS[haA,R5cA^1)70
%o^ll"I5CO-Ei220g)QR>".4*L:i;3R*M,UBFG.65E$ncV`R$j\+PC[Ee-j(M;R0LZS*V1i3>PUl8h]>E/dPO@7gNuYGGsX5GfaJ8
%k6S?\RiFnMRW./apd3?0(pC]9$@aS?jqTH92BF^)f3C^3<)5_sNok(M=m@[[TVM/^H#3iCcF(GDVHgOB#inb&@WG,AHC;QlW>kn"
%%[sjZ.rO%;hV[ah.b$R6Fep8l3V6-`URDBUGNf""GHPb<'m^QnpXA113;'7%9\9UlXr,0kVk/%V)Ajb>ZQ%VFN%U!$`&!)78L.!Z
%;N7Slr[e6ckmHb#Gc9cW.H8de%CZp&E3?,8]B1&7N,_NW/AgO:5t#p[+i()s+b!&@5;#qj(=Cf])dI$o9qOn>bdCe'[@*ak%+IVQ
%>dS;O#?7R"2]eR!CMkVu4,EG#<,J\An4Mk#I_0H7+7Rt9N8"k?cfu4g@U%6ijF5^1G:2r\\]/P57YVW9^k96G7$c=G,`LBm!uhN,
%JhsBpHPEF8:.A]*!eX5#79?&Zfd0$_DUUI@XpeI@&'18A9S^m3V8aCTh8Wn()FkcbhC2doPE!:91/&F#SAK5'%a/"<jlEV7:4bkE
%0j*C">U>PV:,"608!g<nBHf6(OJ5b()Zbl.G)3Vi[b%;.)=TVTg/c#jN;-:%_o8b#HIObDZXg3`3h<9P$qp"toM^)-`P4n?h^*D=
%75V__dJr%,':jlH08LbeomA\1S+f082jHF[G[@$)L`n.Q>682cO_KZP\4mlAB-sJ$14e^j1tr]HN2'[keqtj3f&Z+$P:`WAaJSt[
%kdP+H1'4TCE?!ZL1g127fKIY[[sSiW_P/E*:CG<Sk(S[%JPdj$Oo:Y0>7kcLbn%>#@Dl?MJ;Rmo4Eb,pf]hiJGSBK=.T8P;'N=c<
%=c&S0b%P)9FrZ:3-R(41_,MhF,;<XA@4t#AVeqqR1P&Er^J/Xq/GU-lGi=03,M?.RWI=7f7PS;N4`79$AB^N9Rp=I;7b!J!KEnRq
%n<0;*3N@C*kQDNm=h"rh-$b`_QnqMsR#>O_kkn"9*(%&d(hm#k&E1ipN@I9M_MaTp/WHRU:ct;X(3<5pqAfm,lHBe<pGe]"KOrDI
%^h:DeB#Pri:ps^\)dO\Bg=MSph1%72/\DCB9p:6,]A!2]]_-N@">%obm.\,hZ65:b;iI+p9UJ*,Yb5^d&po^ThYh24D,a+h4aP&0
%bZ;JDG8+PYP!*Cc"$1%6Gh4&@DQaHNetRF]Q>Bs&eDQmAYhh@0rh^#f/7K_sn/KOO@X;C:SSeUrSC(/9HE*m7o]J!XS<Eu;)GV"N
%^X8Z)4iQe67^`HbL5;(J3,5qK,(V=KoV%N5^cXaK?4fW\i&t+6m[?%e(i[udrbF;!_K3+iG3!`?cfG_/7[+f6KZ$0Mqt(/-N^dT!
%h*f^r.\/P3%^9IOLMtE@8^&N2@*TgrSoQ8Sjg.WG;(ie3Pf&[NQp%)rp/)\gS*_1X)kCD3O@gC^-^Q[;%B^JE</h""$<`b)[tWBc
%ZIai-a^H'G6:P(<@]u]r+fH1IMb=(h+qpS`U[\ki6IS\mAtnmkL#EX0-LPcOQ8kl&0234J8N!kl&=q*-Q;%o'@oOt2eqYtm5lc`,
%7-b,$h';bel2[o$g9suPSILmH]=L5C3J`5h:-W.gIr/.eag>#8*jrR+K;!O4T4DVf<J0>#_(Q*Q19ccgH+F)'i[KW%"5HP(oa1&T
%#?.SB%t0[RO,U.FbsT>5e=6Q_du^ts,?LBm!@<&?a+Oc,AAY(YHE%0Zb1k<MT*i1.P'Pn3bYgDm<48e\l<b@2B._Y2YdON3XS@CS
%K`XLsfOLC+05M21:ouSfN^tH%K2IQC;Ieu4],Pum!:\PSDb0iLL::l=%#kVG=:K1'1)[L8DKE:;+F6Y+.qfel(S=Os&;=,D[fR>4
%F>74;\49\pS7nG(C-&T4*Xp&?C&OI>E.:/*c\ob4bs*WG=tga[J/Un($UpGrcG1\jmLmMd2-[@_$PhF+-N=m,ph4:JgeW6,;p(*k
%0,K8c]3"BDZVgu/:ZB-YQs)IX*!!_OFO2>^+udZkm!CidYGa,c5noQqkFW#BGtM,n#?R(i;V)GZm3QFu&e&lb9U"hrMYLnORKt;2
%.7>mm5ao-I<]p!sW&%id!&gc'%2WJ/4=$UR=MXp'N\kb.L=[[Ogq+S"CWp*$Z.K(clBMU5nN4V+Pmp$PS]m8##Q#fA$Ro*K94^$*
%\%l/.H@B!1k6drX%(Ume0r5JT83LU;.eCgh$gp=t9M'%)c@$O&9Sk&SKh:5p@9+5)jV6$)(J^G7]h==p&7g(=BdIQ?JKg2Y[gSXU
%hl[:RHFkpFL,BP]XNZkaJuJMSoos#R):l,e&oa+N4MJ15\LXF39B2rh[mtbN]o?fNc=teN$fjTh"XHDB:",:p;Z\d0'/drLTaD=#
%e+M%V)+")Oh#([OFCN)6DS]2E-aH"X_]Fn"_)()+`n6D.D!Cbi'1;NR?Yua.)&."4%eu[rci<t9n,M"S4oDL=s7ZKkn)s`F5Q4gc
%q;3:n%sAQks.%E]Is\;eN#)qnr_lg^Bdl:P6KBdBIE#6Ogd$lu%]PoF'6e=8a4N7EhBrqugoE%t7e<NI4qZhhjhX?E5.-3GQ1bH@
%%Q7>FVlm'D'nS6b'`5gaf5-5bqP'i@$\$"[E9hu0&rakCQn?,@b"%TH`QEi@QW`>rRCn?P:U87$Jmn^-@<=q'L%@5N%&/E1-HLcD
%]`D00GD4"P*"_&DC;e6FOON%U./[t)eI%Hf!TJK-7U^8r?o%7h1g\V'(j$EjV,%p89,s8M-4d>B(e;CYLWuFXYVjpY`B+I!#FM=i
%!!Z1m=C\B\^a,!4l^CPm[Bok2lNeX1o`i&A<l_HCoMEi:1MB%4"AlbJ1^5K"-%[ES`pkg7'etW%?kIamVX9_;2[<GTD2Bj9/j@dZ
%jUH@Rc(_6RkJmE(U++O0$WnoV@8Xt'4WrEL?Uk\arJ:Rj)gW!%3_>a#<o">eod+nY_5SrL5@1WZfkP:$G-4FDJQ2c%Z&i.GL)m(q
%JQ[cP7g#_0>SSC_V4-O^T,1//+!2EMAp:7e:MREQ$38cXM@1oaT$,Y^1B83e3-\g"P&?%D#(UDP.)9k<G)&OF]c>tWZ:38'c:!ej
%WBd]d]>'po.uUi\4KgosjhRO6j37_.`NCqN`em5kHrHV5:k\:n@i&IkDBeKL@70Xdi2C'U,Aq'c)PD"`!Vp"C;)*Zu"CA25-/0E\
%NJ@>;lK<>j"^Hh0\cK7/"ii=`&Fr31@UVGieb1QbQenqWoGRMO.pZU)_nXBIAIE0X?&&M\P`']*S:!)2;,dP>U+sHHa3*PhC^Q%n
%WFbu9;3lk5O?*'oDM@'KA7-kIE:Ab%2aCKg`I>SVFah$L_q';%#OgTsopr[O,'LSJ?LRl8`U8e:k`l'X>>U"a[\2@KgV8Vh@#@d(
%d"o*b8K=#;=2]o8gWm@0HtTmMka@<_E:H,nFX;eW[VqI@[h25qMHsa>fj.")OAU-_gI>8862P1(`anh_3aXY,T=g""jXFPgdc1\2
%VpD#o4&<Du>P+3AoBK#?GV79KNuCHA'L#D+N^t,!Yn[AVoX17H\:@r:-M]-E+9>/Q$%rSZX$'#8A?s,V-b+_'^Co?a!I@q!qlAik
%>`"T$o6jqD_il;pgV\a,n,Ncqp&XKXr`nFRn0Wkqc9]_T@R[>FP`m3iP8*<"C8ik?cO\pRNQRmf@eFgX<f_$tSj%cfmNUk0&X4Q(
%Jj:Y3TR6`h2?^i#1?Lhgn8s[oOQ3TX[:>Ca(X2Km^f`JO@-A#A>#k/DeA:&Z+i=bZD@NW1Og#0FUgW2I-NdFIm`fE4FoQ%C,(W'f
%!uiq1Ss._a%<JJk$:u6N2\iY.1!M5fQ<j4kVIP=[?8.1*Im'(A%dm#<kR9QHZJ!'RWu(DH9uEW?'*'HWWA]NHrYV=\Di4"DoGtTU
%--P'8qP6=Pk57Q7pW7U"M'a9/!$kg&%M1H-Cto^!c\6X(S+EJ;DTBORok20;eKQ\un%.R9dS_b?P_O<a-^]%GA600eG>HF[PY!bM
%4':`geV;T;)Ur[6O4\VB."LXgmO4AuRZFP#Oec\*qOAt?9H#BAXEXC!0oT?(K)@i0rV,f"f:;%nX5c;1\FU1Xc@>FS%fbYdJ[F8-
%/fHi<21LYLmAnB\eF[b#<6o^m@m%@3U8]\7oS_n-8m7.1,@C][c/.M/O@j^qGdRGOk,,MEmIfko<em5fmVXn+#t>NNi7hpC$Smk/
%@m_dI[3?E_-O.Sd8A,p^5b:e0=D5YTKV@*2$XO+>B48j,oA-CGMkL/P:]nI-f&rlKM6-el1to,PbWV*4-Fe:WL1E4pN+a1bBHoOG
%"/p3<Ur?Fdb!era/(1@+<C12oRZD4FJZscb_(Ngg;i0smr4=m>%I!6r=NAJWDAj,G<0do:j[R^6cdsH_#f13M'OjC/]-oJD=Z+QZ
%<0Ui()!t/DO:X3d(`*p5>0m=KHJ664;/>SHR+X8&lh4j2A9\\k-<_k]&1:5'Z^"gNi/sU1oG#\R';YndeRl$&jo!m)lc/GH:QmJ0
%`Wk(/[[oCgn^Zh:*r3A_<$V&Yl0D8qemq4<.4>T`2qmT8HOh6Fc!CCmQ8@QJ;4I_3b$>n"NVH._lf.U7!%4i)_X<qp&$6X9.L"R*
%OOIFh*E"H</b2>-5]Fuq?FP_K!eD8?NLnM?3+@AWCb8\GJdur9,F1j*BP@k1igh;_K1W4o$eoAF%)=/,bnQ*.,0ngm"I_0%+?!uO
%h[[W_N]C<SZl>&JRr].o.,qI1?Nr'^`F[`(4>P>hU'6E%m97Hu'tJg/f^@Yk8J`IM2U\I=+GmB[B8%WYUMorFXNUl*,oX)mBtl<s
%!GS&;c)6pEa9ks4/bBcOegGSos,^Yam>liM)0Y00$!DH.>`!1.qKCGY)toM)5Ae8XeS`(lLmp"&,$h:2:>`qb$2O,1qTnf.W>>X?
%'@t+2726PNpW?G`k!O%fiXSR]BZ%V=K!_j:g9EI\54mWE[[if)0+#d:R5]hqT-8AHR;7`S;f&_^Rp9.+Q;jVsR3;+mR[_@/YS!.p
%A+iF!Ls]PeJ1n>`cCo*,2c4u.R#+r1m;2LV;,e8u<nX]1(24gj6\B;h5+r;kIJ='ug.c?rEps4:9aJAX#*e#Wcpu\8VFdM96m!2k
%b@+Mf>Ll$=aCL/1?qk09H.@pkkQRKG,nrm[MB1F&-`Rb5HM^7A_[h15>F0$,933_M'`4)1&<8:b<hKp\+g,B<DiX0N^G.)-PCbWL
%"+B6`D/MVRV,utU(5!@EG.):!VB\83Xbe_T#NTc)*XZ"$qVt.oJ,8K^$4;L0X:WrYlJ4hi8F_'#qNc$@?#O;D,=cmFE9"Y0ARd@m
%pu`T$@JbfjncaC?_jl;H?c*iXJSVat5&^[Ti9OH`#ekctO2)"'i=^P<$9l<#YM^,'rf?XX_r+%qKq87!q1[XTO)ka,^rL`?5Q:Je
%PPqsn7XXuLs6"n0n,IXr.D4/'?N-S_*:Oh[?#2TYMKN%-cN]D0XCkg.qje&Za?$\gGD4Kk!TQ._5$"b)@*be;L^)Fe/^lOGbDE<%
%\4,7(P\>/WA=A7<OEVIhFR'Rm1*%5M=f:)f6k82A7Df.68nGL9JI0=V)uCM@[WR>6JN;(jU;5"8Sq]*O6T;h^>hX:1Po<V#oFban
%C>8cG_@2S;/9$;2fsE4=NVEF*BZm4tP#sr#"q9jd9@g/_1alq"lp%&B4TZGAW[`]_0?o-kP(;6,JYB4F\(A%TDI]!,oB9-_7?ZmP
%9M(4$`FKS\ok^UXCarX^ZA!&&5I<%>Rk^Tm),Z5g@LT\a0jD'rM'BN-%aK"t(I[doW\ug>e+JA]2SZE;n;9gC1krFSTQ%<$!/!5R
%L1lOKg0cUQe=MRHBkKIW#/.@n#q&V)T,]P!.bNCFgPL'9,G.A4*%<+bZ*6S>)Om`K$D]/n"qH=Kl*Z`SD6uTaIEc<AN#Yde0,2cI
%[W.$NUstG_=pGXk)lX:+@FXOlf/8V\.&&/T+[1g@RYdZF]j?HM+.N[j?\%BS2AFJ<gA^tBrjTHJpr,@YqV/U+^]4;jJ"&-QFSYJd
%l110,W=(*E5Q:JNDuDnB/'n7a$9j?.]JTI-7$a@nro(c-Q1&(t?29%%pab7:K#:L!I[J1Hm;'3_5B%((oacG;e!c0mEF*Dfb(mO0
%S\Rbk/IC>RNlqr\SEKJ9CUgNQ_2n1nqnU64mm$eCT@G<0hgbRqQ#1eZ4a5IuB0CIiZXQ)40M[+il^Z3uEUNGe(Yn4[s8<H+0DE4Y
%!7,G;Y@kVFG9Z$Yo6T>d@JX?Na`D3S0](C"g-%j2<b7!H\L6!IUc\*!`KkA.ckt?BM,(I['4+MdX"K779mo;e\.nNiUg`(!@MiaY
%<-4X>7)F(G!cL\$&Y9:E0MY@]Zl;3A/^^FJ-oWK*`I&LI0,/ff+=2?417N]6L!VKnG7,&q=@EV23*7YT5mX!p.n7t.7LGTaZ6U<G
%e.>GBWVAC=VH@>1J5]*Ag0<3jYG753c2pH-EC;0F^lhdIBCXE]q<oR"C9Y(9JYDn8Uh#JZ6]-&hA.6(!/XF,amR!#KDPNr$l'Omr
%HIms,"e0f-[L-eBYWau.*-V^'7<u^M[,br"GHU59A5@^TD>4m14!ITaZS2&)1>81",jY2Mb@!`uqV(:.Z^!"+V>2YZ(a]_KJM<f'
%2j9$W3$(>J5H3ZVJdicqkc?gZO:B7Zp@^U5c6PeNA27<5U1/DWE.X%#JdtdG,62X"!s0OdT[60D]Or7;6*,GtZaFT38:,2J;)&KR
%Dm)sb?j/YsRl#J_XbPJ#+u;!CcnMO?/9r1EaJYoAF=3JE<I<XN=$_MB+<q;KL!H=4n==J@"=PL2DLd`oD!XGid<T&ca@%+#0/SM(
%))dsSWE:/i3r1cEI`%e\i]2!TehE5W.5<P`CfhWdJ=F-Q,C4,9;\*'U2D;)9=3cEfHtmKi2qq3I[p.Oj*-4G]Yd$b,esVdsn74Ym
%C>068HJUp*&)))hiDD#sT&GV8jFrCRR2_bd,^sES*8P"%+e.i_>elr*c<Of`V.^Cn>m=SF"0n=/_]m"i:sa5Qo`;!^/>bd@5T_mi
%Br!GkeJ.$]r>`,ea`RUo6:!^::FiA$VE^oMP<]Bmh<W,?qUU9fj3$ZZ'6M_T1`kcBS/:-6;[[*14u#bO*R^CeZEre=E*G,n!P\'e
%Ycu+.'=cPr-rZ$FNU#6kU9P/ZafV6MAACF9S1e3jdBlHQWjg18%#_\p6@7d$r/-=aqD*i/nAJ/=WuLMB[W$ajY7-Cu1`S;HFT.53
%;ZJqE!i'q4:d2aF@AM&.SII"eJHQs*L1Q)Hg5i15:F9U(=/<e&r/).c$G09OGe$uOR\?,Wi1H.PLtO.*ne+Gg34iqmbjBH:hTDaA
%W'Q/q6LpfE@%;pjRK@i0SiK9g0k?"0V3982CYCBd>?<,(=b7,'/o53M^1=d$6_)SZh+&@1]"h:$T[aMO-,Y:WM'1lkHZRk'efg!n
%-k+Bg3b"a?g+GjUAo]Z5W]9?s7?V9[1;HfC8@g7j-($LZ<9F"?R7!8_Q1NQj,j0:C(+2kgd'p!]ATWjV#+Ke>)&6!r?/`i+75)Kj
%n\cY5T<#5U"=$jX7-2<#8SSi5d$0-bHGEo"L!G<(C8_qcjb1"R=Nl$QPS1jqoffE>V@>7+.3s>K7\-djT$RmHU.u1$ra.(9<Mt4s
%m*s/^NjN*C'`UJ$fqDo:ZsQMLZ=shH8'6I3L[)HM&>IT[Y@9hHW1H]U+h`]SY^&4DSEurR'(%;U`_l::kCBfkEP#&[:FJaQ_^p1M
%84\[rFhFCo;HF$W%9&f"<pFjALG_1454"UjKMKK>)Ce/pPn\UJ,a`c_h7uTlfa/NqeR7'>i>>MTPEo*f>)go+frp.61CtEa+3/hY
%nfE^b%N?80H5Xm>`jJgDc3@1oAD[5PHa"ho_ZcpG`BluBNK,Df>/RdT6aOPCh8pX%:4Y5]@G2*C/_;mqKm_Au/82o/.6)A62A_'Z
%".n!#UiRDbPS^O(-A_+lO5^P:40YR--mj\(<4f'%Di$Ysd.#7(H:/[7F;b="Sm3=;*9L1b-4eIX8HT,sAXKA-qhm[@eC"q^hu@,B
%'^!I#8<fcEmUlV,dGZTAgZ[jr?"^VlSY&I*cs]/+CK<?1Lu#Jko09"X:/t!]AohV;+]8W&h*ouC^W2<`RoGm=PagNdTPXfkXX+lY
%N]JNjF)5C!:ITOe_$sXPI;"3!ciNI4Mc[#C-EK`#^D*)FUBO+0o>gd^T)=KTm:X_Y2H]N9_)1"8Z#/et#+0ki`n4,<(?9t9I0`s-
%C`p5e[%.Z'%B(lh]34;%FnRsQ=:T-f_eb;a=?&unYrt*o'B5@1JhWHVf+-4\eq$!n\&:'L@1;I21<i5$NVT4#X<(M+C/.*\eJTFd
%%pO"!hOUZSQmp0E[/lUP68-m]?^lt-(>G%(DmuuelPeu<U"a,gec?j5d>#&Y.]HXMn.IX"6Z:(aS\9fUF?kY%J0'geVulFErRX(6
%r5ImqrHf@Oo<KaJ>oe.-Noe7&k9kL<D,&ZP1Wc:'ASCjs+g<461Y)AW/?tUtS;nfD'eo.n2Jb]L6"&Ns;3$daQZFWn>Z0(Nj-20k
%$l_K0:!t4C51k[m(,r?5ro%H8agH"u0cO%kGY(Sak9L.]@P2;YgNlk.C-s2kc5beZPqJ?%E5m\q9gqQP_5Q,MA0D3lXTct*e5o"-
%#dVC<g)=X7f5s1>([8JukVJW]JHoC]!`m:@D\<]#Ofr8Y;H].B84OK0d&c>#W>(V2hae-9j(r6OKghJ."$P<U#'RL&[(fHKb&I/D
%2XueFH+'<=Hu<VI='p7<3i%`;=J@ts[;ZAW/-?c3TkB;0TmXr1AK[Ngo=5)1D,MO-hbDF5YTKVgXJh!h&pg2#mIdHi&Ib!39raA`
%*Sc=ae7lAbXNaTe7g@L\nKMF?<EkS#1m=ic6`R&3-nK76+YU[&)q2N8eH]HfURjNaMb[uA2Q%7AaW]r>*)Q*p@aP(<bmDc?MEQ_\
%^muA3SD'OIVd23_)oH:*g!WGHqH&mO5?%X0Nu6RGfpJ4=<N+/>lS?tFejFE`ee0WO4'cMO7FU$!DLf9)2bO,X\'>LQ*oQNc"&?78
%K0^O"5[KUF#ae\^h3#c9l,5`l..-`,B`GY=cJiUeBe^@*T9h18\-,la)`a,#1kdc2cN.NdW,omq5F4sgQ*/"d,T>\%+QG_6B2&uo
%Zc>jAY<J%_11$4dIW:Ch)tLlFiPQ:\mp@4o4QZ:S;IbV8IS=W]<:Ieg_rAf\QQ>k:2:@-G?R%f1JWEG8>Q;`T#X<9f'X80r>`RGP
%4t9/!qDGR31j"^6i?c')Ser:=YXC2un8Xk*$i$r*nb57!=6p#2QRnG(o-q!,K7WC@s8>DXqKIZ(r*Jl\\J\8Ti"Sb"X#*K*b7_i$
%(+i)%#Bki<q=IAd6<3aRg?cgij$$W*B>K2VX*7SbDQc"-dq8bcT.^2J)CjqN7dEhK%Q_*(n%9U.3FIV$\]o9'#ga93"*5q(@)B.?
%p;:Gi-H#ZKZ:1q.C4d!E,?PU*@.k+HZ<PO[=toF#Q71:+Ul=C6?si"D%e\#&2\">HC^0L^\)!g]"R@Tt%%K8g^'>U62lYRP]qP]n
%kF9EWh(I62;<ccdQB#.A0^:,2&N:.Wh2e,TNg>-$X@a*-1apR&+[L#d15`H9,\)_#%7Es2S3tec^OrO+2RE^<bsd5#,,l?iOJ0N#
%!ll;bn?-gT3gBn4DlepB#K^5uX-Y06pZ7WeG.(/:_O=N681Bia0uA$e-=4rZ#Q$eg%XL4cWbB@"KQCk)K[cHmKO(*q0<WFS74r&%
%1\(4P%-eL)QOBVg4E7un\FnVggAZ:gHHbVMNa,E$*t;98n*bsq;XTE.[ZpKBVYc)r7\0a,`('[%]f"2dd#\E[+![7X>;th2gio)_
%Zr68IPJrhU=O50)+BpP*C./oS?2[$)j"<5@2b5VkXjgtZ=RPA98']Yp:;MriF0!2>(t[n!KiS"hi(>;86Pi?Id>@Zj_a9,U]:'t/
%Odj<e0@9^-JZ0&bi()"O&,)?@K2C)ul>=Mo`$'/r<TsqUH%^s`&VLmAlG@,3>bb]Dnp#0A])mWI2M,XV[5E\]#Z6neH$=tM&c;9F
%d+\.*[EFP@_"d5i3?OZHY(Es<1Ue#La%%&on@[&_+]V4r8Xc[d7jDpsoAK2-kDVfQF@P;U@8&h;?q4G$AdX+r(5):^jT+i^Ma'80
%'g+*oACD=H!DULh]%X>`c2LuE,-;`-.!P7k$gre_5B/ThfZqh-*>k6,%II;#jN_G>;CZeB@^e?IHJ.'6>REVY8j\&f_]'2]jcBQh
%#KG1)3nh([KoN2`In+lF/(Y>LV%2ZNF\$J2e;!q12Pr->RlN!,]URi9Rqt2WqZR\h4PL9cLaEBrqCX,!Dk4.:n4knV"fCOgo:qoP
%KGDd0?rX8"j'l#d>YFY%":1](B;;QQAi,gu-nLk1fZ45JQ&6,=lbrpE76;(h"s%g/PGpUI!Q.!658RKt[Rgr9O^.;$+kdP33=E[/
%//$,+$'QJN\J->jJqlK=f'%S"1`HrcIqk-Tr'to_QB6aNr7?_5,<+QkAmMDKCUVN38FRS]F<X2UYk?R\V]o2$aT#W&Q1WjS*7qk)
%rs*GKFO5)O0,)/&!Z4HDfc,Mf2uu?-O>A$Z55,J.+%7s]aS2K`/#'b%V]MjR3-?^+UKY%X$P)3?DAX+?#/eL"FdDokVqmkDFeihl
%bMnaV$DD\sd2K=c,VCHbJjaX5;dB5QOPOaP9jYISSr"Qcg1&?Bh-f5'P0n3up"8:lXp*ui.4.GBZso,LP\G[GKP:87LW+C,;/!e>
%3HD/<NMpP6DJi`f;'r[q\k82+%YEb\0tg!tJn0t5BBnPm.[+^7meAKJ9Uc91Y+=ZF7,*hq.ja=#.l&E_pc-3tdaG3?Q6=<I:Vu/J
%@(sdsPA568@.tqXoCfUZ0<I$P!6g_8*:tJHoWR]I:`n5%-LsZ.RPPp_E@^*1FZ9qZfpB3PO`nq0!_=YD?`l[TK/t#(o9h;RJMO#/
%`m1#<2PQ@\)+$dM&F)$,VOKo%js5BHY[?#QqC::TQZn7\B*>HO^85F.#Ze4!-]ghK_*@59KMeeX)hZL]G`a(PVHSCSql!\[Y!l^a
%h/bk<\:^ms,J>&'LUn4dCpkP^>^CO2pF9%g')>_a"_bA'qno:#@m_c5;2mGl(B2H.f&fcCr6:'X&bV'ujtCjW2NH#hp<oBi02%^'
%MC1K>$Q68K_<ORp_N1qh)Z)fPEFd?i`3bsjg,7>,&$3k+o11H7975[",e6mXA#HZ=Xo#!I`"_3'];m5%nOMS%o&6Wn?[hDeGEtfk
%DoR*.4qu`S1Y//;YFZs:cGKI;iC9DsFgMDP9Y2+a35[t??9Q;Tk0lO5pRb\*E+?&gB`:mIJH,E0%:,GR.hE<IfG3j,DR.bNBT+pq
%5[^iV$K5#/K$g?,ckAXZK7?.KFkM'T03Ls`$kjeq7l4h\$6GB.#pIR1r[Eo`:D]+hE8Aq.UK(Y9Q>KWq56PG/pRS))f4hdT8J&f@
%Wa7kMf["7"*[pVi)n<,s-_c:\e+i=n8)u%3W3OaFTCp0EqQnR%!SKn'lSSFMmqr!Q`XR70K9eu=V&aLdkcd)22HGX?cPsl!Wm7;V
%T7,Jd>B8'jP,VS]FWKNIJ?0^="@Xk*/bMueT8%Zm_gi@,^&Xj#X@<<:e\bNldT1$b1Q6#TEaV.S<W];P'Mnp@g/IH?;i.1mZ3-*7
%M74>6-O+'/a2AAe!A.:ZjU[sV8c1f(2m&R:m>,fpiF8MW.i[tsH,)kl7T(?VgW,//&INABVYgR3Z&ZB>MCb\n?2gKd)sh6q=_gAY
%DnqUI4qEUFjdopIF;naPIG9W89K.ZlE"^mS'GkEJ95g1a#X2e$k,cHlgXSOU!j+DO7m2>_AbWL.S0,X#SA%af*2Q:J0)B)(b9knb
%[6:@I(@3-WTM#6bp=>9BLd&:6>\*Wr(<KP6e!n97G^c,-J]tG>`EA#[[u(K2T&2*3_(47d8W97s0MWoW^L]M4cYj^Tcf_d^>BPs5
%[;.rLiHZT!,:9:%\G',b[59:]<BPJN]gkd$;1HQB+E1Tm03F>*$YM<ZaS6],=5L22;:!8;bIP]2MV.T'C0t2uZ90dOrUt1k;rKAd
%Hg?Lrhb"E1!NI6b`m/Nm,ppL%oKD!JYoaU*JK_%9,Ps*+E@;L5cZu0k8ghd\HAudUc6`$gRQ#436R%0UL?*'.>;<a%YnRY>_W+Q&
%Iu=QUOY.M<i(pu.M68M31lW$eH`J5f.]jYc_+gJX,*"6P^V`<]ogNBf!0#-h%ApKFZ>^Ym0SAP[FEu4-TKcgq5dp!]XP2/6-_hLF
%_N>h?K7%Qu>mdOe_nMt.pYC-/%HRoca(ViMa>cRX(Y7>fb/#0*2<_4*_!k.AOId,"fuGW9%GMn?LeiDDI0Y#><6:(V%i4R,()N67
%,C(o^W.8QMjY'G(8n!<1]kKV3WID=X"NB^^T%jo5R*SH.'-#jfQ8lsk1j.]/_^4':UC(pS*u=3"=6<5BmZaGR).aa58MlIT\72d@
%!>klLn-du:kN-11.qm,Yr4?riYX0<Fb#-3d0l@/_;kTuP]C``+6%9::N,PML*W##4)MbUH.?"(EC'Kk0)X7shO4K2"q<<2IjGh])
%Z_B4?J;C)@9g61'q4P*7CpPLU8sKV)GLM]VT:/s,ZgiFuUE5jrQ=)?F<#nORCMW+'0u1W:iG@+>Z$=nhl.5Gt?)$/QY<Mp[lI.MU
%N;$;6"iMUm.%n"!^AKB]M/O@Z5t'@uAMfe`j]#Xo^F9$&;'HPROb62]WZdJpD3#!q"Jhf)['\e)&*=!;@j>)M"Hb[*SU&O!P_`oW
%]2h/8H0m\JF<VY<:a%&(IqsUNV@Eup5h;SV3b1lnJP&!.+:>+p\j[ibo*%EOQD(NfD>M'5`1$0IO4`Sbl=`:Ap>b]YoO4rnfIKX/
%(lU=kJ:hGM=sWc2V>.]a]<S4\HjGseL5,iF0_No>H8nEt!X:XUo!MRPe(D00^KdA&WQ_7gh7K\/EC!V+W%ioPpX375[\1:!Q<#rX
%iYj>6@%N^=o.4=K!hk:0#(4_/RGUFlLt+`XI>6H77KgO'YtOd7-7K80pf]k^bLWYOlG^\SUYRHf@^6Q`ahFoHE3'4T%$NL]qG16G
%=[IYVU`:o?dC4BE\NL'a.a>)\HaKl&lWJU4M%e6UZGb/lq`r,nKRAbiq\Id2XQ[)6%cffCNEoSmUFRM$$mT;OPC+7"<E.S5(XJqA
%L:&sh9VGq7B;tM4J2HDq%d>T1i$?&ge0a]^PRpV)P7)6(',eYa\;'*MpLi*odOra9n(GibbaF/Rn=aQTi#,PAF>FGRbkUUO\N<M1
%o<9f6meWL!3%ANZADc<a0#I$0DpdCJDhsth<eRL;\:?FM'euNis*btGlO1t%O0GO^Y`P]!nY;(u,0#d7K4SXt>9tT@ZiteGemAd"
%o;O&*<q,mi.d-Wei:/UVF+&LOKD*X\L4<L:I#sKm>-8XN36+i-asU4QjT?9[J)'Y9NJ5cR,knOI$u[*+gX.%'JOVXI)H'h@]CEq?
%-DWjJ^dYP[`?h$&f^fPK*X+,bEJ59$@>FjgiGa;3+HOBG(,F(,4$]JT^+ZP<$9t8cZAc(V,)cNmLd>$)WYa]`+K%Dir:m1l<o"Dq
%/q!aW6f%_mmUTT6j2>jDe.QeW!Q:Br[MZmtTT<J43/)K9F;Dq\_T%nS@9P<-%`#A4Z4eclQ]MARQAq^=#gCc#3=DBKg46aU*eU4O
%)`7U9!'@B;CUu,G5jH^)eaaIO_R>$b>"!Zi<)_a4$#'75Dh)2(70#'q,9R61M4W80`iHAo]BZL:_.+0cC9QNe&Ck8Xi#V69W/U1j
%4gfCS=A0e8+Y3>/&GKGYo"_Q^Le#e'?D[kgZ07#)>utK/0^"dBVAg24J/`TX$\nn=33@k"pK1V)aLm8D(>L.-Wpu'!hZ-1Y_Q!05
%1q/&F1oGU1<obBbkt+eXqfQfF]^6YCf$h7WmcL-BB4&ghr,E2#O!EPU9Y@i#+KkCoilU6ojb:JR#V59N$6'l9Y(I7'*Vmm#Xb*[+
%1tlos/,'(uc%PP9lm0%aQol3OUQFSr\jM#tT3H\ZS4A.!mV]G;)6/:Eg/GjHm.&-+VFY(@ls9jRa1IoR*=8&a5RCB%jUig2quM04
%c%4mdN^<a@*nmqWB)7gtGQC'3>Or;3_lT(-32<m7Q=%'#'NMgPS*g8\+n6LNS_-njh9i<!a_JlbWl3!aZ!1WGft,!"'^*QIRlt?+
%irZZ?R(b!Ui[Ki85#CIdareHjUR1Ak94f&lK$PqDGS,m<cFjJH4%Yo"JqPg1]4tSibj_Y;/@L"*PoUeI(u*+p%kS/Z'f/4lOKu];
%ciD:N5n45tdS")iCMm9s<SCU[oCP-o0<6NI<3bp=Ck*R1&J/$oQK8/1SAJug%V<5tOmnl3iS8;,lgQ[R[hV2?O:$oS1p&#gEjiC]
%bWikp2%;&NqSWc\9N=E(Em15E6U#C1#t6l5ccq_CVLZ6?4L<geB\qeeFO547nJ>tcb-!D(8g],)/an4g8/V+!&jcIVQ1?63M<>_/
%^\Rj.U;Hh`Q]r?UnY-r^4^M#s\ALt>N&PuURIM%GW\`Gj2210S]V<i%M\hTrn*lcLj(Q0(fQ`>+<#]cGU2okZHqD"kLV0SDG`NY@
%S2J;:9($>'be,`'FoV@Jl0BpVoaQfNT;/1Qa/3OJX$FPV$C[.MCI(,&?j3clZeHq*C8.f,;nLU74lM1i_bn3b&I[ao?,a^8MPMgA
%Z9A\29Q'&VoUsZ%+U4QR2k:\Sl3"=\%hgIh1Z/BJ]!CU9*',Xu!uf@Bg`[]>$c7rP8TfWP;VhDEgXlcb=PZAo_?GE@4e'PMN4\+l
%7LoT7/QO@##tnW/q2;(=kE)^NhhFBt,FC:;Io\>jc[lQ-Q0KW+Q%T.0c,U836IJd"_:eq&^fdX"LP?*S<C$hP&\8&H&*9d#&nqlB
%@GjD1G"3fmUMq2aFM--;:DR>l/66CKH1E)h-?Xm'a(gd6LJWA.h[X[Ca#9VigPL%C<s^D2EMRI`^FJ%9i*WO=#8X%?kHr8M=9aC'
%3GR*EIU&6k\V/$;E,NIbVTASdkQ[81JH"J95>*").9g(5B)a+p_<Oajd<@WQ36mp74^^-_m@@$t;F;PU@cc."Fh1f[EIU1!Rga[^
%`Y,k49'@@cjof1YfK>2.D$6SO^BS8:g].=*oPV]-Q<O9\"p2VDg'0*<!:etP4p<B8c/@C",9dlb'aJ:%>?kHmYb+]tNN*+.*>[lj
%Fj^M7_W9r64,jRt%Fc8l3s(%q6"s::Oa79gQ0B==)6IJ&iZh1iQ3I/n-)3[[?pC^epkS$4T5BPMQ(JN;Vpulms,7#dr-9$u)n_mJ
%D(N>o#1MFR?4j&anqnpX*5AE\H&icl@G^#JKkMRiBpG&LcEg-jf0?GSH%T04U]$(J<MT6+ZcY"NX/FM.:YEHhWuXEuMLQE)bBQ47
%P$C6m)7T@LR%ns5T''`dZ)CU0g)cR1k0%6O,g%ZhG?k7D^iUuNpQhhR002G`5u;lRjD3QPl=.I=DQc<l>ilo],LcudYa,j;g?nF)
%o!`7n*K+LlcJR?KB[F#l6(+4folfh;4*8@t4$4TW9.-SJc:+G*57^:@V$fiHU)hk^GQ^R,\df8]Ge@DUZIjikg!kK2(-9f2o7Mt5
%p0*Q!Oo)n7A+'lHA++P0,Il9Io_ZUOd10^[=dT"k`%8Grfg6SNK=V0%WR%Lm\rRMb"%EZur]X"\!0Pue+GDKgd<!q*S><17/.\eB
%7N`P66Q(7n!$KrmiA1l19;5g$`HqDk,N<bPrVj^@9AMOOBsI7N0.qJ(j4+=*-IL:8hM9%UMuLHg\Rk6]IsU'p)I?PBT#Tq0s'*m5
%Y@DtZ9X@AF5U(8W:8.gVI3sXYM3q_D.9m,4RO."$D3n"@TRB7-]b(EC>u^o$%bo#M-TFi\NHhIUDd.`)rbeR@K!?dLER[X!/hc.b
%Nc3TnXFhraCAr*?VQl.04S5@P2AFn%fE`Qn@4IL<&jeFk'QhC_/)&/Bnqu'-D0R["e6\^6(fqA-QYcK^k+\l8UacpoFu-p09+ue/
%9#Zk[f?s]!/a!#q,4+9"Nei'%@h`BO!\;sf[OPM-hQ$J3kJQ0(@YZft^"#Hnr#8DW8L%"^;_SIj2+DR[4)oRB0#E[0lC9:QkLdH6
%$#e<OP<o6q;jEAVKg*oc[S5(l,](RHF\$eH'8F"5bs7q@6REU`g3NMUnI-jOp4,2em55Nm!*iTh1+Jiu.Ir`R)7;,[q"^\$NJVdQ
%:k^OPmKCD7pq]V&#>fCJnV,l:5Pis#kK%t&:F,8Re\U%qN<iUcEj_W-\\T9[Yt,3K:)<.?.'$QHLC*;8Or:"$M[H$(R+\M]=h0I?
%/!.a.poFI,GTnkWHAR&]WYj_m]dBYM"UB1ghG#NXHt`%hbLadk/n>f$:0REEk=I$[b3A@YVd"W'TYT_i)?92`1:*J@]K1,bi-C$r
%)n_onS<\G%WS)ED>-7VjcRUoC!RIgToQ?d(DRUANUj@)/n9G2X-2aj%oD3r?aa%AZX6+g*o8:h*m.77&2gABVq#d3hGJB*#s1bum
%Vq^+3d7/`P*P(^F,k0^$bj,GAT,FLu-@G[iT.-NBK$a`&2n8V\/JaAYWcOtIJtQ1Qj(HMpM&eYZRX`E%"_U:/GP0peWa5b^3qO]]
%j`#+!.I8.HGd4RHA?kSdp;K5;C8kZ3#*i-k;6-)BDHP%\!>"\;HoO0W%I-33._B5mfJ6?LSrA>TW2irXpfR)iVQ0r)D_Y(=c3Wc;
%8-o*4[RUr["rhs*eH.`6J(b7)8g$&*^(:<M;NRV;b`#%uCmO4TCjg?79lRUV$$'*"aXTdd/:f[b(R$t(>Pj"o-:,3D@b&;\(Hr;>
%hI_mO1bCfaLtk(M[$6TLpVrm0G:^b+)W=Tmr#IV2U-h4W-`+%DpH#rr6lLjTRA3on"`_P+Q1YD%PtK"c"tb9L>)KnC"3lN*-2DYr
%ro*mF$i,thnCP!FIK5jF/K&_%!gfYoG"sgF@0\]4*YjhX<I+8>0lU@L3?[^#5[W2-7n"oI@WXWWW,McD5T?],aq6L.=fY<5bMc>g
%LjI#\,3I0_@?Ic3%jD0jT=!/SGW*dW&6b&9mFp)l+*JmF]":r::0HAAGf]V37GF&]e0)(En&Pj2:_0PdG%_bI*(L!?]fOn)ct$<B
%p/mV[CW[L<-r$L`RG=C7\T[NL5W!I?'XPZ::*^;&Wi;O'l3:#.bL$;iT7him=p(l\L$rd,=K1VUWYEuC)1.mh?Q[mJ?Ag$"TLDIB
%.&A%@*.]B(*Y]!@9Wb(BQJMq8o$s;h-mRIpAZ3@#kt^kt\VD1BVim;LC^c7;1Ptj+GF)mNn*rIt2:0PN2b.l8M9mAI_J1q:-,%4C
%W81DR;qQUT00V+l[gU"#[\ptEH+_Wkg*o7c!1mbm`.9_39P!D_^8'^:Y%"@j_E<Vr;._k+O@E:irOjS@2+XKhc><gNR;,i^EaW^g
%;GA]iRBaqd-Q3h0*%CJ#?18#/'l$[i#0,U/(SN`&#r;m^Sm0gFNKZUtG!S3mQDnBJ1j;)'MIADaQDE!j;-VV,gNf\9K?C<&%*L`.
%[Y!?bNM4Nef%ZusaT_tN5G>*n$PK>m<chuB0A=>-;#YRhhjWD'==7Hh>!eSiqrNBb@)7dnGdplCi4]I9%rOS9aDHm+%WF>H3g.`'
%O-%j,#;92R4-pb1CUN4VGNKV5%/F<jq/t;;q+t!4E5p@USi$.da!&H?ad=l</B3[&Ac&_ZES4U;'BsLW%A<YrX7f&9%--[][.<&+
%I["ZS]7LGE;l-3<fZ]*k:&FK5iDSHW$^IUE#\^jB:_Z9lfu1>]e_U/8K6FtcIScF`3O<:r6rFBPH\tXfm"`1Mkq+"6=W=DmMfD7:
%75]A8,S_Jkd>A$R_[79B4frUe&77%ikbl*gZ[+#<O%=M_qP,Dk(gT%k$P9?c#9??0J$c(p-n>2*!_sD)6p>kaA]faCW=A/;m3r1n
%g!ghDDFPp++XL4oh^i5AGgNN#k4T`sGs;H&KBYORlhe`6hg?`j33)=4_%orA0?MkTN3Zi6%9Weaj6BA<Gt:LO.2gr;<o]t-T6",e
%JKChQebBGPWS<Y2@n:Y@eOgaDK,jm]eKKt2KAuOr-m%"kp$8dQA/H\or[I*S+KBS]g$:ho;>+"EY9''&)eHnt0.98dD#;+/d+8*.
%r.n2em_#qK>?Z;/<oh*M=@`X!4/Lc2A?R7oKXc6$EBCd*6WPED\jP`hZM?fNc".0*2QH?gn<N;kF)HHpl%dlqkIjB2*;SRc&R\Gt
%0BX+l!qlNNB:h_u&27M?l>_,]H%M,.#NP/=#-3:T`cBYBk_/X/<L-r-3#sdJe"W8^*LaN\Xf]7Las0b<e]+rr-a)&HGGL21.;KPB
%EX^,+m/HfOk=1Zg$>MP$7pW$')p;hQ6,D'$a0.IbI;el%3TWC>n8q@!J?-d:LAFS9Y:BI$ZL0aqj[)Ca9OWnJl9k7`=50k/Otopb
%f9t\@GHK1J-CNmP7O!'/(DnCP40&Ph6Q2DMZH=E:EDH3!G%jE$LG!X^b`f>Ya<6IufZ4\f8NP]OeY>Ui"9N^K!iXJ22uLd+qW>'_
%$h@)69c%N7.>lLHBcS">j/>:c!ukRZGIXudY37+8hoB#?K1QsK!jZ$JPbU2`f(:BI:TLShVY598oT$L)K1KAVJHG_-KEUdX`ipAO
%d?D9i>=:X>o;HS#Z\#2-GuEA[%ZPu1j_mo4ruM+bhQEtm-%/kU%7&@[LIC9C9hY'lTXZd?fHJY*<KTnQYANgXYlQ^`Ej,u@JnX7.
%B6OH7,PCd&A#^%PKO[K/MR?^BjmhPi\<Y9?ha_'m[h!"-*"_eea,Gm_o>!%%Gn+qgMO32l.5G\%(QNS1IIZl0Zcq7:\?=e_[d$B_
%GeANH1&TJ,P@(kW;(a#7MNAQ,BCAdC;N$`V(1g^s:KT<U;oTq;%rCh;#J5?0[E$t\H=p2eW5Iptk>mo5('-o1HdH<r0")b;-ZGu.
%pu2EeW*uonL6I>t)Z,[R?kNu;'47qUQRK<0"?GjsYqFE9<%br_gWpDNRtR"'pGG%%%@=S0&MiJh&H0u$?78`<LkhKGq!<V-W<6OI
%D<T$Wik*Jp]A&:q6Acc2C/T@H@)`]FUH"h(Hk%X[f52X_l7's@F\i*+g!I8=(i%jdX]R+]j!--\TPCpV*,t99EmC`>?>ft*(tkMM
%rtuh`37Zcs<;$`U0?LOefiZI9TlU0L0;$FV3VpgN.#6q8!2hgqO]H&>,!85!,]kI@AQ(c1\SluSH2Y<[a*&EHRDAoOja2n5/&mCs
%-LkK*8V(;?7%AlJ#<6+2&@#B*qe\UB8hWFe)(0$M4_r+^R]<M88Nr3\KoX+K5o\a0!rBOmgh-0B4"`.`NVlD-/[,#DDN8ma@%M1>
%>I=mlrsTbfg2:Hdd>s##9A`BU1)PeF]<&3]`amlpM!i@@7V=IKNWqaoVP=2J.7WRS>J>Cm*8.t-=&#HQNW@q?4gH"S`D]L2_8iDF
%&'bU;&MQE$Te0C'YBJm_SB:OZipU3TkVAj!4:]:Q;$=d2T^!]V"0O90b7im@]#B(OPsMjYA*k^_/]a64#`#i3Z^M:@/GRFVOr[6M
%B"KN$8'J3=Md?kh1\!>kntg=:\N+I\_9[Z5gDCV'FLAi&_A-GZ^,VKN^5+@@NcgCNq0S$TG_s3u^ZhVJRmMBNoTrJ2(VCr]WW`j/
%L-%m095>Ek7DC(0M6Ns&qlVN4+EDGJ.(g>!r)5CL6O"/MO;F,ih)H%aEOlq_1g)^p]o5D+`[;)(,gPMpYF3ET5[CS.1XQ'49@h2'
%%,!V^V,BnU1bB2T+39[CLMSfjL2r3171jNH5)YS/Yf*IJ+R@'D16</)Q7#V>goWD8Wm%D%!")*NNoB%,*RH1q$dgnDK>qF2@./0>
%eNcH:G`7\=m"*l'N<VqQ\4=B*H8<GDZ'rZ;6<kR@:#mUgo'IP\4EeN\)Mu^MDos]s&MTuC(7\I$Z$>rN'Ih`94EE\UXk&eIEKjE\
%Z^MuZ<,rE#jVb5ATF9Qm!+:PZGDV[sg%n^]$l3&#5dkl^4FJYR*6]/n7Fu40$43h9OIL4."LS1lm%KdrYl?=UW2thYqW2iD:r\6D
%1[g^\47$+kr'c,f9g9&[49G3[O&7g$i<g!+M"BPmIB=3![2nqVUeJ^sTjBTV%jB\>?@HDe"S+"le1cX0@+NIWM9Y=38+OSFO<'A.
%np40d7g&OZH"lq?Y5trFV%21l;kWU_-4(G"+8thn"GdRLdclF5G\OG_;!Lji*GNKlF;uj:pZ9!rT=RNd@p#qfD?CkB]dthsbN@h\
%!J<!"oIYS`b?S6_X-39hUi*Sg$0=.poeZ0_5F[dSSdEi@Lc*e5?_6?t0m(LIHNn%me[4-/8G/D\JKQ;or_]R)T3S^V'm?R^"l3tN
%7:^,5J8(%^n?<^\>cp@Z72g'-:i4C9J%)U79_a*ief7/LCo,lWjS)E:XNbQ,\F>0X6A@_m-gsCXL)<QnOUP?L>-i$:7fX%U\b2hH
%\E2gX[#es5d!+3PX![Ul"G8hUBD4^Gb.Up)IAco36JbG^=RRk`4"?j(jW7pl3eu<s^!msLW@CiGOi,SP=cR'il[tK/2KQ,nWue&S
%1@buKd?>F6oEH.V6!bn\_$),_?Jm8Apu3dQgpr^1;*-L-GU[?66:Yi4SHT,]T3cl]:lKhdR!i]W]U?>6B@ths[_Ai[]fea)p:J)M
%rqP)p2h1k^5Q0("^AIBfJ,%9,0#9LHnD,2$s2Q4qqj2g2reFk\lApGjmQ\I9pYDJ@K_PBChl]2Wqr84Es5i/<r589trpnBbr\$f]
%d=&hihu*3:s7Y'ZqB,M<&lA~>
%AI9_PrivateDataEnd
